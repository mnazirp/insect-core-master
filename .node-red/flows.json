[
    {
        "id": "b64a879b.6b9f18",
        "type": "tab",
        "label": "Authentication API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "500056a4.f23f98",
        "type": "tab",
        "label": "Setpoints Endpoint",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d4086327.4f24c",
        "type": "tab",
        "label": "Environment API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "e737de17.09143",
        "type": "tab",
        "label": "CouchDB Setup",
        "disabled": false,
        "info": "# CouchDB Setup\n\nhere all CouchDB design elements, mainly views can be created or updated, to ensure that application is fully functional"
    },
    {
        "id": "79916533.871d9c",
        "type": "tab",
        "label": "Forms Translation API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "83f6cb29.f6a468",
        "type": "tab",
        "label": "Mustache Template API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3517e109.8c2a3e",
        "type": "tab",
        "label": "Forms API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "821ac598.a66fd8",
        "type": "tab",
        "label": "Form History API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "dc8c4370.78e2",
        "type": "tab",
        "label": "CouchDB Setup V2",
        "disabled": false,
        "info": ""
    },
    {
        "id": "13812a6.98277d6",
        "type": "tab",
        "label": "Select Option with Template Type",
        "disabled": false,
        "info": ""
    },
    {
        "id": "25e5a6ec.1bd6ca",
        "type": "tab",
        "label": "Forms API with Template Type",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6b99fc65.0259d4",
        "type": "tab",
        "label": "Accept InsectData",
        "disabled": false,
        "info": ""
    },
    {
        "id": "efdcd1da.2bbf4",
        "type": "tab",
        "label": "CouchDB Setup for Databases",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1f50769f.97b799",
        "type": "tab",
        "label": "Google Sheet API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "627c617e.0ab8",
        "type": "tab",
        "label": "Select Option API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d021c7f8.c9d868",
        "type": "tab",
        "label": "Scheduler",
        "disabled": false,
        "info": ""
    },
    {
        "id": "161e8c5f.9e3554",
        "type": "tab",
        "label": "Dashboard API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "6d154715.fe8408",
        "type": "tab",
        "label": "CouchDB Setup for Data Seed",
        "disabled": false,
        "info": ""
    },
    {
        "id": "40bdb65b.68cd78",
        "type": "tab",
        "label": "Export CSV for IOT",
        "disabled": false,
        "info": ""
    },
    {
        "id": "46e1b0e3.38d3a",
        "type": "tab",
        "label": "CouchDB Setup for Indexes",
        "disabled": false,
        "info": ""
    },
    {
        "id": "95cbf348.a2a55",
        "type": "tab",
        "label": "Farm Config Management API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "1ee45479.6b35fc",
        "type": "tab",
        "label": "Options API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "48df00a1.c6d5a",
        "type": "tab",
        "label": "Sensor Device",
        "disabled": false,
        "info": ""
    },
    {
        "id": "d40b49bf.5e3218",
        "type": "tab",
        "label": "Forms Blueprint API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "387e7e3e.c99972",
        "type": "tab",
        "label": "Slack API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "72effe42.dca7b",
        "type": "tab",
        "label": "Device Management API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "3dba3683.f9f43a",
        "type": "tab",
        "label": "Device API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f86fd9fe.b86f38",
        "type": "tab",
        "label": "Analytics API",
        "disabled": false,
        "info": ""
    },
    {
        "id": "9e2414d.f07a1e8",
        "type": "tab",
        "label": "Google Setup",
        "disabled": false,
        "info": ""
    },
    {
        "id": "7e86a41c.5a82dc",
        "type": "subflow",
        "name": "valid JWT",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 120,
                "wires": [
                    {
                        "id": "a9839c28.f75db"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 200,
                "wires": [
                    {
                        "id": "ee22b073.6af72",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#FFAAAA",
        "inputLabels": [
            "HTTP in"
        ],
        "outputLabels": [
            "request out"
        ],
        "icon": "font-awesome/fa-unlock"
    },
    {
        "id": "38f352b4.42155e",
        "type": "subflow",
        "name": "checks for missing blueprint fields",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "c5a82cd3.cb39c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 280,
                "wires": [
                    {
                        "id": "3b38908e.6cf5f",
                        "port": "0"
                    }
                ]
            },
            {
                "x": 420,
                "y": 340,
                "wires": [
                    {
                        "id": "3b38908e.6cf5f",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "876460b4.aa8e3",
        "type": "subflow",
        "name": "checks for missing translation fields",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "1d48bfba.2639"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 420,
                "y": 240,
                "wires": [
                    {
                        "id": "cbd4e41a.7afa08",
                        "port": 0
                    }
                ]
            },
            {
                "x": 420,
                "y": 300,
                "wires": [
                    {
                        "id": "cbd4e41a.7afa08",
                        "port": 1
                    }
                ]
            },
            {
                "x": 420,
                "y": 360,
                "wires": [
                    {
                        "id": "cbd4e41a.7afa08",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "8462caeb.467d18",
        "type": "subflow",
        "name": "get today incomplete attendance",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "fa038fd0.50374"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 400,
                "y": 280,
                "wires": [
                    {
                        "id": "3ef1ab8a.f87214",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "3b45b61c.50cd0a",
        "type": "subflow",
        "name": "Check for missing select option field",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "4194cab4.374424"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 460,
                "y": 440,
                "wires": [
                    {
                        "id": "aface4cd.301ad8",
                        "port": 0
                    }
                ]
            },
            {
                "x": 460,
                "y": 520,
                "wires": [
                    {
                        "id": "aface4cd.301ad8",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "f6987966.455e98",
        "type": "subflow",
        "name": "check for missing setpoint field",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "81e9d4ac.ab7408"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 380,
                "y": 300,
                "wires": [
                    {
                        "id": "e70ca78c.ebc158",
                        "port": 0
                    }
                ]
            },
            {
                "x": 380,
                "y": 360,
                "wires": [
                    {
                        "id": "e70ca78c.ebc158",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "9cbcc357.c121b",
        "type": "subflow",
        "name": "Get last 7 days date",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 80,
                "wires": [
                    {
                        "id": "80214eff.ffaaa"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 660,
                "y": 200,
                "wires": [
                    {
                        "id": "b78fc455.116d58",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "afd6710.802949",
        "type": "subflow",
        "name": "get incomplete process (4) (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 200,
                "wires": [
                    {
                        "id": "64129dce.92f584"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 380,
                "y": 280,
                "wires": [
                    {
                        "id": "91a2a818.82e678",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "a2be8459.a2cc78",
        "type": "subflow",
        "name": "process process check in/out (4) (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 140,
                "y": 160,
                "wires": [
                    {
                        "id": "2dfeb08c.9e277"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1000,
                "y": 620,
                "wires": [
                    {
                        "id": "76d86859.3c6788",
                        "port": 0
                    },
                    {
                        "id": "8b19c009.233c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "9baa67b7.6ef658",
        "type": "subflow",
        "name": "get today incomplete attendance (4) (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3941a79c.8c00a8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 400,
                "y": 280,
                "wires": [
                    {
                        "id": "63fc5e40.a5524",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "1d31ea65.003676",
        "type": "subflow",
        "name": "process attendance (4) (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 140,
                "wires": [
                    {
                        "id": "f741039c.f8613"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1140,
                "y": 780,
                "wires": [
                    {
                        "id": "2d442cad.29d754",
                        "port": 0
                    },
                    {
                        "id": "89f1ebde.6f8ec8",
                        "port": 0
                    },
                    {
                        "id": "2176c0f0.8196",
                        "port": 0
                    },
                    {
                        "id": "e3e02647.f49ad8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "de627760.7d84c8",
        "type": "subflow",
        "name": "process egg trap out measurement list (4) (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "8b4add4d.0119a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 360,
                "wires": [
                    {
                        "id": "55b11be4.0c8144",
                        "port": 0
                    }
                ]
            },
            {
                "x": 1280,
                "y": 260,
                "wires": [
                    {
                        "id": "60635958.85d7b8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "16945ecf.1ccd51",
        "type": "subflow",
        "name": "process egg trap in measurement list (4) (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "c0ed2b38.15af88"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 120,
                "wires": [
                    {
                        "id": "7b88f15a.9925",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "7b3f907.b36877",
        "type": "subflow",
        "name": "Update Grow Out Harvest Asset",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 20,
                "y": 40,
                "wires": [
                    {
                        "id": "1565d410.18f4ac"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1860,
                "y": 220,
                "wires": [
                    {
                        "id": "5c6a53.9e0f85ac",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "85e7a6d5.86d078",
        "type": "subflow",
        "name": "Update Nursery Output Asset",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 40,
                "wires": [
                    {
                        "id": "7cebd4fb.08295c"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "a6b9fb77.65b748",
        "type": "subflow",
        "name": "Complete Pupation Setup incomplete entry",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 180,
                "wires": [
                    {
                        "id": "2853499b.5c98f6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1280,
                "y": 200,
                "wires": [
                    {
                        "id": "31d0955d.c7f4da",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "c196ec9c.55a0f",
        "type": "subflow",
        "name": "Get metadata keys",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "3e2098ba.308838"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 240,
                "wires": [
                    {
                        "id": "890cfe8c.6cae1",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "84269f38.920f2",
        "type": "subflow",
        "name": "Convert timestamp fields",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 240,
                "y": 100,
                "wires": [
                    {
                        "id": "754ce0ea.51fbe"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 1100,
                "wires": [
                    {
                        "id": "5c2789fa.dd96f8",
                        "port": 0
                    },
                    {
                        "id": "f460d20e.8684f",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "5a50dcc5.c18a24",
        "type": "subflow",
        "name": "Calculate BatchId",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "d54b4df3.1f902"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 220,
                "wires": [
                    {
                        "id": "914a9e2b.8681d",
                        "port": "4"
                    }
                ]
            },
            {
                "x": 1140,
                "y": 220,
                "wires": [
                    {
                        "id": "fc8b5c47.ebdf5",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "7e9f6a8.8c1a694",
        "type": "subflow",
        "name": "Check incomplete entry",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 160,
                "wires": [
                    {
                        "id": "6874eb4c.d8eaf4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1080,
                "y": 160,
                "wires": [
                    {
                        "id": "69608cf0.8217a4",
                        "port": 0
                    },
                    {
                        "id": "829714fd.8a8878",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "37c11998.4fe1a6",
        "type": "subflow",
        "name": "Default Value Ops with templateType",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 160,
                "wires": [
                    {
                        "id": "672266d4.9f48a8"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2811332b.6f138c",
        "type": "subflow",
        "name": "Form Submission Create Ops with templateType",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "a8c6fd8c.59e12"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "7fc5df76.10c99",
        "type": "subflow",
        "name": "Form Submission Update Ops with templateType",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 180,
                "y": 120,
                "wires": [
                    {
                        "id": "c1dcdb80.7b5c18"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "3a7417a6.812638",
        "type": "subflow",
        "name": "Get process checkin out form button value",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 50,
                "y": 100,
                "wires": [
                    {
                        "id": "b520de9d.12c8b"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "74e69b13.a82ff4",
        "type": "subflow",
        "name": "pupation-emergence-setup-detail",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 160,
                "wires": [
                    {
                        "id": "4d860e64.fd54e"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "a2e16a21.c40328",
        "type": "subflow",
        "name": "Get attendance Form button value",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "d2ff3e72.ab2fc"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "9d22d937.3a9108",
        "type": "subflow",
        "name": "checks for missing template fields (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 120,
                "wires": [
                    {
                        "id": "27867d8e.5df692"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 360,
                "wires": [
                    {
                        "id": "9c1d4cb1.c0cb3",
                        "port": 0
                    },
                    {
                        "id": "edaddd1e.b8601",
                        "port": 0
                    }
                ]
            },
            {
                "x": 940,
                "y": 400,
                "wires": [
                    {
                        "id": "9c1d4cb1.c0cb3",
                        "port": 1
                    },
                    {
                        "id": "edaddd1e.b8601",
                        "port": 1
                    }
                ]
            },
            {
                "x": 940,
                "y": 440,
                "wires": [
                    {
                        "id": "9c1d4cb1.c0cb3",
                        "port": 2
                    },
                    {
                        "id": "edaddd1e.b8601",
                        "port": 2
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "7683f6c1.82c818",
        "type": "subflow",
        "name": "template findByTemplateType",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 140,
                "wires": [
                    {
                        "id": "d6c79e04.1fccf"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 900,
                "y": 120,
                "wires": [
                    {
                        "id": "6f6ce3b5.cfb50c",
                        "port": 0
                    }
                ]
            },
            {
                "x": 720,
                "y": 160,
                "wires": [
                    {
                        "id": "35b1bacf.f02c76",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d9875fbc.357c8",
        "type": "subflow",
        "name": "deviceProvisioned",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "7bcc1f60.cd3ac"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 80,
                "wires": [
                    {
                        "id": "5b419536.38833c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "25cb01d.2a117fe",
        "type": "subflow",
        "name": "backup Dashboard Process",
        "info": "",
        "category": "",
        "in": [],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "17b1b844.b6db28",
        "type": "subflow",
        "name": "setpoints find",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "ef30f9a7.d44cf8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 80,
                "wires": [
                    {
                        "id": "b4087ff.fe5128",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "a0cbbe1b.d292",
        "type": "subflow",
        "name": "masterData findByDates",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "62fbdc86.846a04"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 80,
                "wires": [
                    {
                        "id": "b81b1db4.ba5ff",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "19c17d30.e6e6a3",
        "type": "subflow",
        "name": "cards  generateDashboardProcess",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 120,
                "wires": [
                    {
                        "id": "ecfe9083.835c2"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1400,
                "y": 120,
                "wires": [
                    {
                        "id": "f31b1d0d.ad545",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "4db7e9fc.8750b8",
        "type": "subflow",
        "name": "masterData findById",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "61322f85.f0951"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 760,
                "y": 80,
                "wires": [
                    {
                        "id": "aa3f29fd.f6e098",
                        "port": 0
                    }
                ]
            },
            {
                "x": 580,
                "y": 120,
                "wires": [
                    {
                        "id": "315b13bf.b7e53c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d108970c.af9a58",
        "type": "subflow",
        "name": "device findByDeviceId",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "6d81dc0c.708544"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 820,
                "y": 80,
                "wires": [
                    {
                        "id": "e87130fe.bc64b",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "33ad23d.1fc62dc",
        "type": "subflow",
        "name": "incompleteForm byLineAndForm",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "623edff6.32b26"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 620,
                "y": 80,
                "wires": [
                    {
                        "id": "dceecca5.42f2f",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d085109b.41a3e",
        "type": "subflow",
        "name": "grow-out-harvest",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "d7eeb603.2fb338"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d46e607a.c58f4",
        "type": "subflow",
        "name": "selectOption setupDateId",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "900faa1.1883e58"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 720,
                "y": 60,
                "wires": [
                    {
                        "id": "f4e96313.049c6",
                        "port": 0
                    }
                ]
            },
            {
                "x": 460,
                "y": 100,
                "wires": [
                    {
                        "id": "7e562b7a.f32244",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "22d7c8e8.7c2108",
        "type": "subflow",
        "name": "Complete Nursery Output incomplete entry",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 400,
                "wires": []
            }
        ],
        "out": [
            {
                "x": 160,
                "y": 400,
                "wires": [
                    {
                        "id": "22d7c8e8.7c2108",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "889b2901.b7a768",
        "type": "subflow",
        "name": "Check update field",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "c3c7074f.491058"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1420,
                "y": 60,
                "wires": [
                    {
                        "id": "50104f0d.6c598",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "3869881b.e92898",
        "type": "subflow",
        "name": "Update Pupation Emergence Setup Detail Asset",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "efd24139.9940f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2800,
                "y": 100,
                "wires": [
                    {
                        "id": "aca7db66.693738",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "a87207ef.fd5e68",
        "type": "subflow",
        "name": "Check Update field",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "fa056cda.b49cb"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1360,
                "y": 80,
                "wires": [
                    {
                        "id": "596df90c.973b48",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "5b95e5c7.2321dc",
        "type": "subflow",
        "name": "Update Nursery Setup Asset",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 80,
                "wires": [
                    {
                        "id": "f39391db.f09f5"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1500,
                "y": 80,
                "wires": [
                    {
                        "id": "2084a6cf.606efa",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "4bf465ff.30673c",
        "type": "subflow",
        "name": "Check update field (Grow out harvest)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "8bbdc690.c58b98"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1280,
                "y": 80,
                "wires": [
                    {
                        "id": "3f77d4d5.c6784c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "f4445896.32f858",
        "type": "subflow",
        "name": "masterData generateHiddenFields",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 120,
                "wires": [
                    {
                        "id": "ae479c5c.6aab3"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 750,
                "y": 140,
                "wires": [
                    {
                        "id": "7e7873b0.7efabc",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "3b1bcef5.c78bb2",
        "type": "subflow",
        "name": "Update Grow Out Setup Assets",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 80,
                "wires": [
                    {
                        "id": "f42795ce.d66c78"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 3260,
                "y": 160,
                "wires": [
                    {
                        "id": "afda572f.9120c8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "da75c902.1b7f18",
        "type": "subflow",
        "name": "Update Process Check in out Incomplete entry",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "4e2cb8e.f1d1448"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1200,
                "y": 520,
                "wires": [
                    {
                        "id": "8e51465b.76b948",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "e98ab834.68c228",
        "type": "subflow",
        "name": "Update Attendance incomplete entry",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 160,
                "wires": [
                    {
                        "id": "9bde7aef.489ea8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 540,
                "wires": [
                    {
                        "id": "a275f2bf.20f48",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d4b8ee96.b716",
        "type": "subflow",
        "name": "Reset Nursery Setup Asset",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 120,
                "y": 80,
                "wires": [
                    {
                        "id": "d06792bf.93d0f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1480,
                "y": 60,
                "wires": [
                    {
                        "id": "366267ee.daf178",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6b49a642.175118",
        "type": "subflow",
        "name": "Reset Grow Out Setup Asset",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "e1feae02.06f1f"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2560,
                "y": 180,
                "wires": [
                    {
                        "id": "9de96842.4fef98",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "fb81e8b7.35b228",
        "type": "subflow",
        "name": "Delete Process Check in out",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 200,
                "wires": [
                    {
                        "id": "f04ccebe.10aa8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1220,
                "y": 560,
                "wires": [
                    {
                        "id": "9ed15110.2bf19",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "340d7d68.d117b2",
        "type": "subflow",
        "name": "Delete incomplete attendance",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 200,
                "wires": [
                    {
                        "id": "391aea04.fbf8f6"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1160,
                "y": 580,
                "wires": [
                    {
                        "id": "57401ca0.48feb4",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "2d333c58.be1b84",
        "type": "subflow",
        "name": "Complete Pupation Emergence incomplete entry",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 140,
                "wires": [
                    {
                        "id": "ba3f6990.a4b2b8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1300,
                "y": 140,
                "wires": [
                    {
                        "id": "d988848.30f5c78",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6cce5602.b9c5a8",
        "type": "subflow",
        "name": "Complete grow out setup incomplete entry",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 100,
                "wires": [
                    {
                        "id": "2b1a9662.91694a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 940,
                "y": 80,
                "wires": [
                    {
                        "id": "361bbd20.1bb612",
                        "port": 0
                    },
                    {
                        "id": "821222a0.e467b",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "a2ccf18.37c751",
        "type": "subflow",
        "name": "formatTimestamp",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 160,
                "y": 40,
                "wires": [
                    {
                        "id": "31150311.afc91c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 1020,
                "wires": [
                    {
                        "id": "c4a9e1e2.db872",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6f7f441.17c58bc",
        "type": "subflow",
        "name": "Get metadata keys (2) (2) (2) (2) (2) (2)",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "4aa3ad47.f7b024"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 240,
                "wires": [
                    {
                        "id": "33aa9052.586dd",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "d35f6c55.31d32",
        "type": "subflow",
        "name": "query export data for manual export",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "f17bc8e.8252738"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1400,
                "y": 680,
                "wires": [
                    {
                        "id": "fbf69430.446098",
                        "port": 0
                    },
                    {
                        "id": "aba49ced.12828",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "90996413.448b78",
        "type": "subflow",
        "name": "Update Pupation Detail Setup Asset",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 60,
                "wires": [
                    {
                        "id": "fec9dc05.9eba"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2120,
                "y": 160,
                "wires": [
                    {
                        "id": "336829b6.893cc6",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6781483d.926718",
        "type": "subflow",
        "name": "Reset Pupation Detail Setup Asset",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "a36110d.1ca0bf"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 2200,
                "y": 200,
                "wires": [
                    {
                        "id": "36cf47a5.77e558",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "17e900ff.2d5e2f",
        "type": "subflow",
        "name": "Get metadata keys duplicate?",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 120,
                "wires": [
                    {
                        "id": "908396e2.4a4dd8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 780,
                "y": 240,
                "wires": [
                    {
                        "id": "5cea4797.628ea8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6ae349f2.9a0838",
        "type": "subflow",
        "name": "query export data for daily export",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "b33a9a97.b02378"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1400,
                "y": 680,
                "wires": [
                    {
                        "id": "bb34cedc.9e394",
                        "port": 0
                    },
                    {
                        "id": "bdd497d1.535808",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b0983137.19fa2",
        "type": "subflow",
        "name": "prepare daily export",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 40,
                "y": 80,
                "wires": [
                    {
                        "id": "172c3ed3.5214f1"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 520,
                "y": 140,
                "wires": [
                    {
                        "id": "9783043d.285e38",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "6e75aa15.98f704",
        "type": "subflow",
        "name": "ProcessStatusDashboardNew",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "866b0dbe.7dcd"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 700,
                "y": 80,
                "wires": [
                    {
                        "id": "726dc3a7.e1b26c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "62db209b.27bfb",
        "type": "subflow",
        "name": "deviceStatus",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 120,
                "wires": [
                    {
                        "id": "82c70423.434998"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1060,
                "y": 140,
                "wires": [
                    {
                        "id": "b2cb4762.0f00d8",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "bff03945.7ec978",
        "type": "subflow",
        "name": "deviceStatus add",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 220,
                "y": 120,
                "wires": [
                    {
                        "id": "cc472cd5.bf9db"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1180,
                "y": 100,
                "wires": [
                    {
                        "id": "c3c445b6.191f28",
                        "port": 0
                    }
                ]
            },
            {
                "x": 800,
                "y": 160,
                "wires": [
                    {
                        "id": "99b704b7.73d388",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "456baf04.102bc",
        "type": "subflow",
        "name": "insectdata docsCount appendDocsLimit",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "553daba2.0ce2e4"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 840,
                "y": 80,
                "wires": [
                    {
                        "id": "a46c7c4.964198",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "9a693308.7ebaf",
        "type": "subflow",
        "name": "flow-timer",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 100,
                "wires": [
                    {
                        "id": "7fc82258.93e36c"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 440,
                "y": 100,
                "wires": [
                    {
                        "id": "7fc82258.93e36c",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "name",
                "type": "str",
                "value": "measure",
                "ui": {
                    "icon": "font-awesome/fa-tag",
                    "label": {
                        "en-US": "Timer Name"
                    },
                    "type": "input",
                    "opts": {
                        "types": [
                            "str",
                            "env"
                        ]
                    }
                }
            },
            {
                "name": "operation",
                "type": "str",
                "value": "start",
                "ui": {
                    "icon": "font-awesome/fa-cog",
                    "label": {
                        "en-US": "Operation"
                    },
                    "type": "select",
                    "opts": {
                        "opts": [
                            {
                                "l": {
                                    "en-US": "start"
                                },
                                "v": "start"
                            },
                            {
                                "l": {
                                    "en-US": "stop"
                                },
                                "v": "stop"
                            },
                            {
                                "l": {
                                    "en-US": "msg.topic"
                                },
                                "v": "msg.topic"
                            },
                            {
                                "l": {
                                    "en-US": "msg.operation"
                                },
                                "v": "msg.operation"
                            },
                            {
                                "l": {
                                    "en-US": "msg.payload"
                                },
                                "v": "msg.payload"
                            }
                        ]
                    }
                }
            }
        ],
        "meta": {
            "module": "node-red-contrib-flow-performance",
            "type": "flow-performance",
            "version": "1.0.1",
            "author": "Steve-Mcl",
            "desc": "Inline flow performance measure node",
            "keywords": "node-red performance",
            "license": "MIT"
        },
        "color": "#DAEAAA",
        "icon": "node-red/timer.svg",
        "status": {
            "x": 280,
            "y": 160,
            "wires": [
                {
                    "id": "7fc82258.93e36c",
                    "port": 1
                }
            ]
        }
    },
    {
        "id": "c5555ac2.79ff88",
        "type": "subflow",
        "name": "defaultValue generateDefaultValue",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "d9acbad8.531aa8"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 980,
                "y": 80,
                "wires": [
                    {
                        "id": "54321138.f20d7",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "6a381b0c.3295c4",
        "type": "JsonWebToken_config",
        "name": "Forms JWTS",
        "secret": "form-json-wen-token-secret"
    },
    {
        "id": "140efa24.f87256",
        "type": "google-conn",
        "name": "Google",
        "key": "${GAUTH}",
        "scopes": "https://www.googleapis.com/auth/drive.file\nhttps://www.googleapis.com/auth/spreadsheets"
    },
    {
        "id": "89ef28e6.4ac598",
        "type": "cloudantplus",
        "host": "${INSECT_DB}",
        "name": "insectDB Host"
    },
    {
        "id": "c9356964.d4c6c8",
        "type": "redis-config",
        "name": "Redis from REDIS_URL",
        "options": "${REDIS_URL}",
        "cluster": false,
        "optionsType": "str"
    },
    {
        "id": "9780c19c.4819a",
        "type": "JsonWebToken",
        "z": "b64a879b.6b9f18",
        "name": "Encrypt",
        "tokenconfig": "6a381b0c.3295c4",
        "x": 1900,
        "y": 340,
        "wires": [
            [
                "8a7dfa50.a924d8"
            ]
        ]
    },
    {
        "id": "de79dfdf.96a76",
        "type": "http in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "url": "api/authenticate",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 120,
        "y": 280,
        "wires": [
            [
                "c1108da8.be34d"
            ]
        ]
    },
    {
        "id": "dfb9b9d2.949708",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2300,
        "y": 340,
        "wires": []
    },
    {
        "id": "a5fcfeb5.5977c",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "let query;\n\nif (msg.payload.type === \"RFID\") {\n    query = { \"selector\": {\n        \"doc_type\": \"users\",\n        \"access_id\": msg.payload.username\n    } }\n} else {\n    query = { \"selector\": {\n        \"doc_type\": \"users\",\n        \"username\": msg.payload.username,\n        \"password\": msg.payload.password\n    } }\n}\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 400,
        "wires": [
            [
                "153ab765.f29639",
                "ec4a6c2b.ae13c"
            ]
        ]
    },
    {
        "id": "21425c5a.363aa4",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "",
        "property": "payload.docsCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1510,
        "y": 400,
        "wires": [
            [
                "53c0686f.5d7188"
            ],
            [
                "4518bb7a.fca6d4"
            ]
        ]
    },
    {
        "id": "4518bb7a.fca6d4",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.payload = {\n    \"message\": \"FAILED\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1700,
        "y": 460,
        "wires": [
            [
                "dc0cf8d2.2a6478"
            ]
        ]
    },
    {
        "id": "dc0cf8d2.2a6478",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1900,
        "y": 460,
        "wires": []
    },
    {
        "id": "8a7dfa50.a924d8",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.payload.token = msg.token;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2100,
        "y": 340,
        "wires": [
            [
                "dfb9b9d2.949708"
            ]
        ]
    },
    {
        "id": "e04b30af.4c1ae",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.payload.docsCount = msg.payload.docs.length;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1320,
        "y": 400,
        "wires": [
            [
                "21425c5a.363aa4",
                "21c37195.0a548e"
            ]
        ]
    },
    {
        "id": "53c0686f.5d7188",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.payload = msg.payload.docs[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1700,
        "y": 340,
        "wires": [
            [
                "9780c19c.4819a",
                "ce78099c.1cb768",
                "17ad0be7.a61234"
            ]
        ]
    },
    {
        "id": "c1108da8.be34d",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "",
        "property": "req.headers",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "authorization",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 280,
        "wires": [
            [
                "a78179f2.1605e8"
            ],
            [
                "10e08d88.5dc652"
            ]
        ]
    },
    {
        "id": "194e701c.4f67d",
        "type": "JsonWebToken",
        "z": "7e86a41c.5a82dc",
        "name": "Decrypt",
        "tokenconfig": "6a381b0c.3295c4",
        "x": 520,
        "y": 120,
        "wires": [
            [
                "ee22b073.6af72"
            ]
        ]
    },
    {
        "id": "a50ef31a.70796",
        "type": "function",
        "z": "7e86a41c.5a82dc",
        "name": "Extract JWT Token",
        "func": "msg.token = msg.req.headers.authorization;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "194e701c.4f67d"
            ]
        ]
    },
    {
        "id": "ee22b073.6af72",
        "type": "switch",
        "z": "7e86a41c.5a82dc",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 160,
        "wires": [
            [
                "3a32cb7a.8b74a4"
            ],
            []
        ]
    },
    {
        "id": "34f34767.1db878",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.payload = msg.token;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 220,
        "wires": [
            [
                "be01aa32.6ea198"
            ]
        ]
    },
    {
        "id": "2d961b8d.2edc14",
        "type": "http response",
        "z": "7e86a41c.5a82dc",
        "name": "",
        "statusCode": "403",
        "headers": {
            "content-type": "application/json"
        },
        "x": 800,
        "y": 160,
        "wires": []
    },
    {
        "id": "be01aa32.6ea198",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 920,
        "y": 220,
        "wires": []
    },
    {
        "id": "10e08d88.5dc652",
        "type": "md5",
        "z": "b64a879b.6b9f18",
        "name": "",
        "fieldToHash": "payload.password",
        "fieldTypeToHash": "msg",
        "hashField": "payload.password",
        "hashFieldType": "msg",
        "x": 530,
        "y": 400,
        "wires": [
            [
                "a5fcfeb5.5977c"
            ]
        ]
    },
    {
        "id": "ce78099c.1cb768",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.payload = {\n    \"table\": \"users_log_logins\",\n    \"access_id\": msg.payload.access_id,\n    \"username\": msg.payload.username,\n    \"timestamp\": new Date().toISOString()\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1900,
        "y": 240,
        "wires": [
            [
                "cea10f0.1b624f"
            ]
        ]
    },
    {
        "id": "17ad0be7.a61234",
        "type": "debug",
        "z": "b64a879b.6b9f18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1910,
        "y": 140,
        "wires": []
    },
    {
        "id": "21c37195.0a548e",
        "type": "debug",
        "z": "b64a879b.6b9f18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 280,
        "wires": []
    },
    {
        "id": "67958a37.0edc44",
        "type": "debug",
        "z": "b64a879b.6b9f18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 2410,
        "y": 240,
        "wires": []
    },
    {
        "id": "a78179f2.1605e8",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "b64a879b.6b9f18",
        "name": "",
        "env": [],
        "x": 560,
        "y": 220,
        "wires": [
            [
                "34f34767.1db878"
            ]
        ]
    },
    {
        "id": "3a32cb7a.8b74a4",
        "type": "function",
        "z": "7e86a41c.5a82dc",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'JWT invalid.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 120,
        "wires": [
            [
                "2d961b8d.2edc14"
            ]
        ]
    },
    {
        "id": "153ab765.f29639",
        "type": "cloudantplus in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 1010,
        "y": 400,
        "wires": [
            [
                "e04b30af.4c1ae"
            ]
        ]
    },
    {
        "id": "cea10f0.1b624f",
        "type": "cloudantplus out",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "accesslog",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 2140,
        "y": 240,
        "wires": [
            [
                "67958a37.0edc44"
            ]
        ]
    },
    {
        "id": "3f271280.3163fe",
        "type": "cloudantplus out",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 3110,
        "y": 240,
        "wires": [
            [
                "b8b5526.ebe73b"
            ]
        ]
    },
    {
        "id": "b8b5526.ebe73b",
        "type": "debug",
        "z": "b64a879b.6b9f18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 3340,
        "y": 240,
        "wires": []
    },
    {
        "id": "1b4ae33d.8e768d",
        "type": "comment",
        "z": "b64a879b.6b9f18",
        "name": "Create first user",
        "info": "",
        "x": 2920,
        "y": 200,
        "wires": []
    },
    {
        "id": "90e579b4.3cfcb8",
        "type": "inject",
        "z": "b64a879b.6b9f18",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"doc_type\":\"users\",\"name\":\"demo\",\"access_id\":\"1234123\",\"username\":\"123123\",\"password\":\"f51efa034d79325b7f55a92ee8891c62\"}",
        "payloadType": "json",
        "x": 2880,
        "y": 240,
        "wires": [
            [
                "3f271280.3163fe"
            ]
        ]
    },
    {
        "id": "2b36359c.65540a",
        "type": "inject",
        "z": "b64a879b.6b9f18",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"doc_type\":\"users\",\"name\":\"Naza\",\"access_id\":\"1579558\",\"username\":\"123123\",\"password\":\"f51efa034d79325b7f55a92ee8891c62\"}",
        "payloadType": "json",
        "x": 2880,
        "y": 300,
        "wires": [
            [
                "3f271280.3163fe"
            ]
        ]
    },
    {
        "id": "c0ed403c.9190d",
        "type": "inject",
        "z": "b64a879b.6b9f18",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"doc_type\":\"users\",\"name\":\"Yogen\",\"access_id\":\"1601883\",\"username\":\"123123\",\"password\":\"f51efa034d79325b7f55a92ee8891c62\"}",
        "payloadType": "json",
        "x": 2880,
        "y": 360,
        "wires": [
            [
                "3f271280.3163fe"
            ]
        ]
    },
    {
        "id": "bca2ab94.62aab8",
        "type": "inject",
        "z": "b64a879b.6b9f18",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"doc_type\":\"users\",\"name\":\"Yuvaa\",\"access_id\":\"1588326\",\"username\":\"123123\",\"password\":\"f51efa034d79325b7f55a92ee8891c62\"}",
        "payloadType": "json",
        "x": 2880,
        "y": 420,
        "wires": [
            [
                "3f271280.3163fe"
            ]
        ]
    },
    {
        "id": "ad484514.e98d38",
        "type": "inject",
        "z": "b64a879b.6b9f18",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"doc_type\":\"users\",\"name\":\"Arjun\",\"access_id\":\"1583035\",\"username\":\"123123\",\"password\":\"f51efa034d79325b7f55a92ee8891c62\"}",
        "payloadType": "json",
        "x": 2880,
        "y": 480,
        "wires": [
            [
                "3f271280.3163fe"
            ]
        ]
    },
    {
        "id": "1d4961d9.217b9e",
        "type": "inject",
        "z": "b64a879b.6b9f18",
        "name": "",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"doc_type\":\"users\",\"name\":\"Jing En\",\"access_id\":\"1722031\",\"username\":\"123123\",\"password\":\"f51efa034d79325b7f55a92ee8891c62\"}",
        "payloadType": "json",
        "x": 2880,
        "y": 540,
        "wires": [
            [
                "3f271280.3163fe"
            ]
        ]
    },
    {
        "id": "ec4a6c2b.ae13c",
        "type": "debug",
        "z": "b64a879b.6b9f18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 300,
        "wires": []
    },
    {
        "id": "6cec2dd5.b69ef4",
        "type": "function",
        "z": "38f352b4.42155e",
        "name": "Query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"blueprint\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"productionLine\": msg.original.productionLine,\n//         \"workstationForm\": msg.original.workstationForm\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\nquery[\"key\"] = [msg.req.params.tenant, msg.original.type, msg.original.workstationForm]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 160,
        "wires": [
            [
                "a36a2637.76d238"
            ]
        ]
    },
    {
        "id": "a36a2637.76d238",
        "type": "cloudantplus in",
        "z": "38f352b4.42155e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "blueprint",
        "index": "blueprint",
        "x": 210,
        "y": 220,
        "wires": [
            [
                "3b38908e.6cf5f"
            ]
        ]
    },
    {
        "id": "42f8311b.b9c1f",
        "type": "switch",
        "z": "38f352b4.42155e",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 100,
        "wires": [
            [
                "14249fec.59cb9"
            ],
            [
                "6cec2dd5.b69ef4"
            ]
        ]
    },
    {
        "id": "14249fec.59cb9",
        "type": "function",
        "z": "38f352b4.42155e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Required fields - type, workstationForm, and template\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 100,
        "wires": [
            [
                "b84495dd.77dbe8"
            ]
        ]
    },
    {
        "id": "b84495dd.77dbe8",
        "type": "http response",
        "z": "38f352b4.42155e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 580,
        "y": 160,
        "wires": []
    },
    {
        "id": "c5a82cd3.cb39c",
        "type": "function",
        "z": "38f352b4.42155e",
        "name": "Checks for required fields",
        "func": "msg.original = msg.payload;\nmsg.isValidFields = true;\n\nif (!msg.payload.type) {\n    msg.isValidFields = false;\n}\nif (!msg.payload.workstationForm) {\n    msg.isValidFields = false;\n}\nif (!msg.payload.template) {\n    msg.isValidFields = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 40,
        "wires": [
            [
                "42f8311b.b9c1f"
            ]
        ]
    },
    {
        "id": "3b38908e.6cf5f",
        "type": "switch",
        "z": "38f352b4.42155e",
        "name": "Results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 280,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "413bacff.6691d4",
        "type": "function",
        "z": "876460b4.aa8e3",
        "name": "prepare query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"language\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"productionLine\": msg.original.productionLine,\n//         \"workstationForm\": msg.original.workstationForm,\n//         \"langType\": msg.original.langType\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\nquery[\"key\"]=[msg.req.params.tenant, msg.original.productionLine, msg.original.workstationForm, msg.original.langType]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 160,
        "wires": [
            [
                "80d2b371.6ffb4"
            ]
        ]
    },
    {
        "id": "80d2b371.6ffb4",
        "type": "cloudantplus in",
        "z": "876460b4.aa8e3",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "translate",
        "index": "translate",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "cbd4e41a.7afa08"
            ]
        ]
    },
    {
        "id": "1d48bfba.2639",
        "type": "function",
        "z": "876460b4.aa8e3",
        "name": "checks required fields",
        "func": "msg.original = msg.payload;\nmsg.isValidFields = true;\n\nif (!msg.payload.productionLine) {\n    msg.isValidFields = false;\n}\nif (!msg.payload.workstationForm) {\n    msg.isValidFields = false;\n}\nif (!msg.payload.langType) {\n    msg.isValidFields = false;\n}\nif (!msg.payload.translation) {\n    msg.isValidFields = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 40,
        "wires": [
            [
                "12143320.0acdfd"
            ]
        ]
    },
    {
        "id": "12143320.0acdfd",
        "type": "switch",
        "z": "876460b4.aa8e3",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 100,
        "wires": [
            [
                "1249dfaa.b516e"
            ],
            [
                "413bacff.6691d4"
            ]
        ]
    },
    {
        "id": "d4be3fb7.f0ab3",
        "type": "http response",
        "z": "876460b4.aa8e3",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 560,
        "y": 160,
        "wires": []
    },
    {
        "id": "1249dfaa.b516e",
        "type": "function",
        "z": "876460b4.aa8e3",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Missing fields - productionLine, workstationForm, langType, translation\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 100,
        "wires": [
            [
                "d4be3fb7.f0ab3"
            ]
        ]
    },
    {
        "id": "cbd4e41a.7afa08",
        "type": "switch",
        "z": "876460b4.aa8e3",
        "name": "results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 250,
        "y": 280,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "49384f22.00f88",
        "type": "comment",
        "z": "79916533.871d9c",
        "name": "Create forms translation",
        "info": "",
        "x": 200,
        "y": 40,
        "wires": []
    },
    {
        "id": "335acb64.38e7a4",
        "type": "http in",
        "z": "79916533.871d9c",
        "name": "",
        "url": "api/:tenant/forms/translation",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "fd9209c0.2fab28"
            ]
        ]
    },
    {
        "id": "2f6ac6aa.e194da",
        "type": "cloudantplus out",
        "z": "79916533.871d9c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "d08a3888.8b03e8"
            ]
        ]
    },
    {
        "id": "bbcd7350.3f13b",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "prepare data",
        "func": "msg.payload = {};\nmsg.payload.docType = \"language\";\nmsg.payload.createdOn = new Date();\nmsg.payload.updatedOn = new Date();\nmsg.payload.tenant = msg.req.params.tenant;\nmsg.payload.productionLine = msg.original.productionLine;\nmsg.payload.workstationForm = msg.original.workstationForm;\nmsg.payload.langType = msg.original.langType;\nmsg.payload.translation = msg.original.translation;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 200,
        "wires": [
            [
                "2f6ac6aa.e194da"
            ]
        ]
    },
    {
        "id": "d08a3888.8b03e8",
        "type": "http response",
        "z": "79916533.871d9c",
        "name": "",
        "statusCode": "201",
        "headers": {},
        "x": 240,
        "y": 320,
        "wires": []
    },
    {
        "id": "27d36d23.bf41b2",
        "type": "comment",
        "z": "79916533.871d9c",
        "name": "Update forms translation",
        "info": "",
        "x": 190,
        "y": 400,
        "wires": []
    },
    {
        "id": "bdf2149f.6c7918",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "prepare data",
        "func": "let payload = msg.payload[0].value;\n\npayload.updatedOn = new Date();\npayload.translation = msg.original.translation\n\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 500,
        "wires": [
            [
                "940302f0.9c90c"
            ]
        ]
    },
    {
        "id": "51e92998.3e50f8",
        "type": "http response",
        "z": "79916533.871d9c",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 540,
        "y": 620,
        "wires": []
    },
    {
        "id": "940302f0.9c90c",
        "type": "cloudantplus out",
        "z": "79916533.871d9c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 470,
        "y": 560,
        "wires": [
            [
                "51e92998.3e50f8"
            ]
        ]
    },
    {
        "id": "bbca10fc.84e88",
        "type": "http response",
        "z": "79916533.871d9c",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 540,
        "y": 200,
        "wires": []
    },
    {
        "id": "564d66f3.b278f8",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Translation exist, use PUT to update instead.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 140,
        "wires": [
            [
                "bbca10fc.84e88"
            ]
        ]
    },
    {
        "id": "fa14602f.2cad8",
        "type": "http response",
        "z": "79916533.871d9c",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 540,
        "y": 320,
        "wires": []
    },
    {
        "id": "e87f2c88.64795",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple language type found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 260,
        "wires": [
            [
                "fa14602f.2cad8"
            ]
        ]
    },
    {
        "id": "4c79d6bc.d8ac48",
        "type": "http in",
        "z": "79916533.871d9c",
        "name": "",
        "url": "api/:tenant/forms/translation",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "98a002b9.d9837"
            ]
        ]
    },
    {
        "id": "f0fcf4aa.03bc18",
        "type": "http response",
        "z": "79916533.871d9c",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 240,
        "y": 620,
        "wires": []
    },
    {
        "id": "653237b4.096578",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Translation not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 560,
        "wires": [
            [
                "f0fcf4aa.03bc18"
            ]
        ]
    },
    {
        "id": "240fe164.5ec11e",
        "type": "http response",
        "z": "79916533.871d9c",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 540,
        "y": 740,
        "wires": []
    },
    {
        "id": "398b78f2.3391e8",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple language type found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 680,
        "wires": [
            [
                "240fe164.5ec11e"
            ]
        ]
    },
    {
        "id": "fd9209c0.2fab28",
        "type": "subflow:876460b4.aa8e3",
        "z": "79916533.871d9c",
        "name": "",
        "env": [],
        "x": 160,
        "y": 140,
        "wires": [
            [
                "564d66f3.b278f8"
            ],
            [
                "e87f2c88.64795"
            ],
            [
                "bbcd7350.3f13b"
            ]
        ]
    },
    {
        "id": "98a002b9.d9837",
        "type": "subflow:876460b4.aa8e3",
        "z": "79916533.871d9c",
        "name": "",
        "env": [],
        "x": 160,
        "y": 500,
        "wires": [
            [
                "bdf2149f.6c7918"
            ],
            [
                "398b78f2.3391e8"
            ],
            [
                "653237b4.096578"
            ]
        ]
    },
    {
        "id": "f275072e.9c08c8",
        "type": "http in",
        "z": "79916533.871d9c",
        "name": "",
        "url": "api/:tenant/forms/translation",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 860,
        "wires": [
            [
                "33557162.b20cee"
            ]
        ]
    },
    {
        "id": "ee73cf09.5f8bc",
        "type": "comment",
        "z": "79916533.871d9c",
        "name": "Delete forms translation",
        "info": "",
        "x": 200,
        "y": 820,
        "wires": []
    },
    {
        "id": "94ab7911.c6d298",
        "type": "switch",
        "z": "79916533.871d9c",
        "name": "results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 230,
        "y": 1160,
        "wires": [
            [
                "bd89a205.ff7be"
            ],
            [
                "53cdb7df.3372b8"
            ],
            [
                "95b80ab0.c83ec8"
            ]
        ]
    },
    {
        "id": "f26f0ec.edd07f",
        "type": "cloudantplus in",
        "z": "79916533.871d9c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "translate",
        "index": "translate",
        "x": 170,
        "y": 1100,
        "wires": [
            [
                "94ab7911.c6d298"
            ]
        ]
    },
    {
        "id": "21005175.fa2a3e",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "prepare query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"language\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"productionLine\": msg.original.productionLine,\n//         \"workstationForm\": msg.original.workstationForm,\n//         \"langType\": msg.original.langType\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\nquery[\"key\"]=[msg.req.params.tenant, msg.original.productionLine, msg.original.workstationForm, msg.original.langType]\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 1040,
        "wires": [
            [
                "f26f0ec.edd07f"
            ]
        ]
    },
    {
        "id": "bc113324.b2fa1",
        "type": "switch",
        "z": "79916533.871d9c",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 980,
        "wires": [
            [
                "7d6467c1.6d31f8"
            ],
            [
                "21005175.fa2a3e"
            ]
        ]
    },
    {
        "id": "7d6467c1.6d31f8",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Missing fields - productionLine, workstationForm, langType\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 980,
        "wires": [
            [
                "fec3e67f.6ee088"
            ]
        ]
    },
    {
        "id": "fec3e67f.6ee088",
        "type": "http response",
        "z": "79916533.871d9c",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 540,
        "y": 1040,
        "wires": []
    },
    {
        "id": "33557162.b20cee",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "checks required fields",
        "func": "msg.original = msg.req.query;\nmsg.isValidFields = true;\n\nif (!msg.req.query.productionLine) {\n    msg.isValidFields = false;\n}\nif (!msg.req.query.workstationForm) {\n    msg.isValidFields = false;\n}\nif (!msg.req.query.langType) {\n    msg.isValidFields = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 920,
        "wires": [
            [
                "bc113324.b2fa1"
            ]
        ]
    },
    {
        "id": "95b80ab0.c83ec8",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Translation not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 1220,
        "wires": [
            [
                "29364320.8da0ec"
            ]
        ]
    },
    {
        "id": "29364320.8da0ec",
        "type": "http response",
        "z": "79916533.871d9c",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 240,
        "y": 1280,
        "wires": []
    },
    {
        "id": "53cdb7df.3372b8",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple language type found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1340,
        "wires": [
            [
                "72a5efc.9c0441"
            ]
        ]
    },
    {
        "id": "72a5efc.9c0441",
        "type": "http response",
        "z": "79916533.871d9c",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 540,
        "y": 1400,
        "wires": []
    },
    {
        "id": "46e7aa24.b9eb34",
        "type": "cloudantplus out",
        "z": "79916533.871d9c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": false,
        "operation": "delete",
        "x": 470,
        "y": 1220,
        "wires": [
            [
                "f9b0d571.0051d8"
            ]
        ]
    },
    {
        "id": "f9b0d571.0051d8",
        "type": "http response",
        "z": "79916533.871d9c",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 540,
        "y": 1280,
        "wires": []
    },
    {
        "id": "bd89a205.ff7be",
        "type": "function",
        "z": "79916533.871d9c",
        "name": "prepare data",
        "func": "msg.payload = msg.payload[0].value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1160,
        "wires": [
            [
                "46e7aa24.b9eb34"
            ]
        ]
    },
    {
        "id": "fa038fd0.50374",
        "type": "moment",
        "z": "8462caeb.467d18",
        "name": "generate local date",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DDT00:00:00.000",
        "locale": "en-US",
        "output": "localTimestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "9773476a.cc56e8"
            ]
        ]
    },
    {
        "id": "9773476a.cc56e8",
        "type": "moment",
        "z": "8462caeb.467d18",
        "name": "generate start of the day iso",
        "topic": "startOfLocalDay",
        "input": "localTimestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "startOfLocalDay",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "c2c5675f.a86d88"
            ]
        ]
    },
    {
        "id": "c2c5675f.a86d88",
        "type": "moment",
        "z": "8462caeb.467d18",
        "name": "generate end of the day iso",
        "topic": "endOfLocalDay",
        "input": "localTimestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "86399",
        "adjType": "seconds",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "endOfLocalDay",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "aa2badff.91229"
            ]
        ]
    },
    {
        "id": "aa2badff.91229",
        "type": "function",
        "z": "8462caeb.467d18",
        "name": "prepare query",
        "func": "let query = {}\n\nquery['startkey'] = []\nquery['startkey'].push(msg.req.params.tenant)\nquery['startkey'].push(msg.protengaUser.username)\nquery['startkey'].push(msg.payload)\nquery['startkey'].push(msg.startOfLocalDay)\n\nquery['endkey'] = []\nquery['endkey'].push(msg.req.params.tenant)\nquery['endkey'].push(msg.protengaUser.username)\nquery['endkey'].push(msg.payload)\nquery['endkey'].push(msg.endOfLocalDay)\n\nmsg.payload = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "51c1ca73.0ca744"
            ]
        ]
    },
    {
        "id": "51c1ca73.0ca744",
        "type": "cloudantplus in",
        "z": "8462caeb.467d18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "attendance-incomplete",
        "index": "attendance-incomplete",
        "x": 250,
        "y": 240,
        "wires": [
            [
                "3ef1ab8a.f87214"
            ]
        ]
    },
    {
        "id": "3ef1ab8a.f87214",
        "type": "function",
        "z": "8462caeb.467d18",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "a9839c28.f75db",
        "type": "switch",
        "z": "7e86a41c.5a82dc",
        "name": "got token?",
        "property": "req.headers.authorization",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 120,
        "wires": [
            [
                "a50ef31a.70796"
            ],
            [
                "e4ee1f33.82f9d"
            ]
        ]
    },
    {
        "id": "e4ee1f33.82f9d",
        "type": "function",
        "z": "7e86a41c.5a82dc",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'JWT token missing.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 160,
        "wires": [
            [
                "b70f2d96.7654d"
            ]
        ]
    },
    {
        "id": "b70f2d96.7654d",
        "type": "http response",
        "z": "7e86a41c.5a82dc",
        "name": "",
        "statusCode": "401",
        "headers": {},
        "x": 280,
        "y": 200,
        "wires": []
    },
    {
        "id": "8d0ebc68.e54ff",
        "type": "http in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "url": "/api/update-user",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 1220,
        "wires": [
            [
                "3e85bfa9.57eea"
            ]
        ]
    },
    {
        "id": "71e2e241.a6a2ec",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "Query",
        "func": "var user = msg.user\nvar password = msg.payload;\nuser.password = password;\nuser.doc_type = \"users\"\nmsg.user = user;\nmsg.payload = { \"selector\": {\n    \"doc_type\": \"users\",\n    \"_id\": {\"$ne\": user._id},\n    \"$or\": [\n      {\n        \"username\": user.username\n      },\n      {\n          \"access_id\": user.access_id\n      }\n      ]\n      }\n     }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 1320,
        "wires": [
            [
                "8dc4a840.fe8c88"
            ]
        ]
    },
    {
        "id": "8dc4a840.fe8c88",
        "type": "cloudantplus in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 970,
        "y": 1320,
        "wires": [
            [
                "65ea8734.337b78"
            ]
        ]
    },
    {
        "id": "65ea8734.337b78",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "",
        "property": "payload.docs",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1130,
        "y": 1320,
        "wires": [
            [
                "48eeddcc.485f74"
            ],
            [
                "fb0f2c5d.cb1ce"
            ]
        ]
    },
    {
        "id": "42b7cf55.f0708",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "",
        "property": "valid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 1260,
        "wires": [
            [
                "be1ab332.d1b72"
            ],
            [
                "71e2e241.a6a2ec"
            ]
        ]
    },
    {
        "id": "be1ab332.d1b72",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 730,
        "y": 1180,
        "wires": []
    },
    {
        "id": "76996f14.f240a",
        "type": "comment",
        "z": "b64a879b.6b9f18",
        "name": "Update User",
        "info": "{\"id\": \"8c745f57c075919b0bfe92077a0123fc\" \"name\":\"demo\",\"access_id\":\"123123\",\"username\":\"1231234\",\"password\":\"asd12345\"}",
        "x": 210,
        "y": 1180,
        "wires": []
    },
    {
        "id": "a75d0ee0.16103",
        "type": "http in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "url": "/api/users",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 1440,
        "wires": [
            [
                "137f875b.fb57e9"
            ]
        ]
    },
    {
        "id": "6b0bb376.34692c",
        "type": "cloudantplus in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "search": "_view_",
        "design": "users",
        "index": "users-sortby-name",
        "x": 520,
        "y": 1480,
        "wires": [
            [
                "f4309960.1deee8"
            ]
        ]
    },
    {
        "id": "2f3207c7.9a86a8",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 930,
        "y": 1480,
        "wires": []
    },
    {
        "id": "f4309960.1deee8",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "prepare response",
        "func": "var users = []\nfor(let user of msg.payload){\n    let result = user;\n\n    \n    delete result._rev\n\n    users.push(result);\n}\nmsg.payload = users;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 1480,
        "wires": [
            [
                "2f3207c7.9a86a8"
            ]
        ]
    },
    {
        "id": "5916b504.cf757c",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1450,
        "y": 1220,
        "wires": []
    },
    {
        "id": "48eeddcc.485f74",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "prepare error message",
        "func": "\nif(msg.payload.docs[0].username === msg.user.username && msg.payload.docs[0].access_id === msg.user.access_id){\n    msg.payload = {};\n    msg.payload.message = \"Username and Access Id Exist\"\n}\nelse if(msg.payload.docs[0].username === msg.user.username){\n        msg.payload = {};\n     msg.payload.message = \"Username Exists\"\n}\nelse if(msg.payload.docs[0].access_id === msg.user.access_id){\n    msg.payload = {};\n     msg.payload.message = \"Access Id Exists\"\n}\nmsg.statusCode = 400;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1300,
        "y": 1260,
        "wires": [
            [
                "5916b504.cf757c"
            ]
        ]
    },
    {
        "id": "71fe12c0.9ae7ac",
        "type": "cloudantplus out",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1890,
        "y": 1240,
        "wires": [
            [
                "1bf37349.0847cd"
            ]
        ]
    },
    {
        "id": "ce1f23ee.51c1c",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2260,
        "y": 1240,
        "wires": []
    },
    {
        "id": "1bf37349.0847cd",
        "type": "change",
        "z": "b64a879b.6b9f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"User updated\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2080,
        "y": 1240,
        "wires": [
            [
                "ce1f23ee.51c1c"
            ]
        ]
    },
    {
        "id": "fb0f2c5d.cb1ce",
        "type": "change",
        "z": "b64a879b.6b9f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "user._id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1280,
        "y": 1340,
        "wires": [
            [
                "fe78543d.0a7e78"
            ]
        ]
    },
    {
        "id": "fe78543d.0a7e78",
        "type": "cloudantplus in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 1470,
        "y": 1340,
        "wires": [
            [
                "18f7e43b.e845cc"
            ]
        ]
    },
    {
        "id": "18f7e43b.e845cc",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1590,
        "y": 1280,
        "wires": [
            [
                "278e0b82.dc0374"
            ],
            [
                "ffb3a7ae.a184c8"
            ]
        ]
    },
    {
        "id": "278e0b82.dc0374",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "\nvar rev = msg.payload._rev;\nvar username = msg.payload.username;\nmsg.payload = {\n    _id: msg.user._id,\n    _rev: rev,\n    facility: msg.user.facility,\n    level: msg.user.level,\n    name: msg.user.name,\n    last_name: msg.user.last_name,\n    access_id: msg.user.access_id,\n    password: msg.payload.password,\n    email: msg.user.email,\n    phone_no: msg.user.phone_no,\n    username: username,\n    lang: msg.user.lang? msg.user.lang: \"en\",\n    doc_type: \"users\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1740,
        "y": 1240,
        "wires": [
            [
                "71fe12c0.9ae7ac"
            ]
        ]
    },
    {
        "id": "f6d2461.1a3bab8",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1930,
        "y": 1340,
        "wires": []
    },
    {
        "id": "ffb3a7ae.a184c8",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.payload = {};\nmsg.payload.message=\"User not found\"\nmsg.statusCode = 404;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1760,
        "y": 1340,
        "wires": [
            [
                "f6d2461.1a3bab8"
            ]
        ]
    },
    {
        "id": "af7060bf.adc5e",
        "type": "comment",
        "z": "b64a879b.6b9f18",
        "name": "Get List of User",
        "info": "",
        "x": 220,
        "y": 1400,
        "wires": []
    },
    {
        "id": "3ee32a7.57cdbd6",
        "type": "http in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "url": "/api/create-user",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 900,
        "wires": [
            [
                "807d0c3a.8abf4"
            ]
        ]
    },
    {
        "id": "1c051162.1a254f",
        "type": "md5",
        "z": "b64a879b.6b9f18",
        "name": "",
        "fieldToHash": "payload",
        "fieldTypeToHash": "msg",
        "hashField": "payload",
        "hashFieldType": "msg",
        "x": 830,
        "y": 900,
        "wires": [
            [
                "62a25b70.5033f4"
            ]
        ]
    },
    {
        "id": "c97e4bad.6150e8",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "check valid",
        "func": "\nconst validator = {\n    name: \"Name cannot be empty\",\n    last_name: \"Last Name cannot be empty\",\n    username: [{ message: \"Username cannot be empty\", test: (raw) => (!raw) },\n        { message: \"Username must be numeric value\", test: (raw) => (!raw || isNaN(raw)) },\n        { message: \"Username must be 5 digits\", test: (raw) => (raw.length != 5) }\n    ],\n    access_id: \"Access ID cannot be empty\",\n    password: [{ message: \"Password cannot be empty\", test: (raw) => (!raw) },\n        { message: \"Password must be at least 8 characters\", test: (raw) => (!raw || raw.length < 8) }\n    ],\n    facility: [{ message: \"Invalid facility name\", test: (raw) => (!(raw == \"chang_chun_pilot\" || raw == \"EBP\")) }],\n    level: [{ message: \"Level cannot be empty\", test: (raw) => (!raw) },\n        { message: \"level must be one of Team, Supervisor or Admin\", test: (raw) => (!raw || (raw != \"team\" && raw != \"supervisor\" && raw != \"admin\")) }\n    ],\n    email: [{ message: \"This doesn't look like email\", test: (raw) => (!raw || !/\\S+@\\S+\\.\\S+/.test(raw)) }\n    ],\n     lang: [{ message: \"Invalid Language, Available language: en/my\", test: (raw) => (!(raw == \"en\" || raw == \"my\")) }\n    ],\n    phone_no: [{ message: \"Phone number needs be between 10 to 11 digits\", test: (raw) => (!raw || raw.length > 11 || raw.length<10) },\n        { message: \"Phone number must be numeric value\", test: (raw) => (isNaN(raw))}\n    ]\n};\nvar failureArray = [];\nfor (item in validator) {\n    var underTest = msg.payload[item];\n    var tester = validator[item];\n    if (typeof tester == 'string') {\n        if (!underTest) {\n            failureArray.push(tester);\n        }\n    } else {\n        if(!underTest && !(item ==\"email\" || item ==\"phone_no\" || item ==\"lang\")){\n            failureArray.push(tester[0].message);\n        }\n        else if(!underTest && (item == \"email\" || item ==\"phone_no\" || item == \"lang\")){\n\n        }\n        else{\n            tester.forEach(t => {\n            if (t.test(underTest)) {\n                failureArray.push(t.message);\n            }\n        });\n        }\n    }\n}\nif (failureArray.length > 0) {\n    msg.valid = false;\n    msg.statusCode = 400;\n    msg.payload = {};\n    msg.payload.message = failureArray\n} else {\n    msg.user = msg.payload\n    msg.payload = msg.payload.password;\n    msg.valid = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 900,
        "wires": [
            [
                "79d51087.db7f3"
            ]
        ]
    },
    {
        "id": "62a25b70.5033f4",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "prepare query",
        "func": "var user = msg.user\nvar password = msg.payload;\nuser.password = password;\nuser.doc_type = \"users\"\nmsg.user = user;\nmsg.payload = { \"selector\": {\n    \"doc_type\": \"users\",\n    \"$or\": [\n      {\n        \"username\": user.username\n      },\n      {\n          \"access_id\": user.access_id\n      }\n      ]\n      }\n     }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 900,
        "wires": [
            [
                "5f300fea.7965a"
            ]
        ]
    },
    {
        "id": "5f300fea.7965a",
        "type": "cloudantplus in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 830,
        "y": 1000,
        "wires": [
            [
                "7f27c75.b879d38"
            ]
        ]
    },
    {
        "id": "7f27c75.b879d38",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "",
        "property": "payload.docs",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 1000,
        "wires": [
            [
                "eba2c299.2dda8"
            ],
            [
                "e3d65371.bd943"
            ]
        ]
    },
    {
        "id": "a0dc53f0.9b3bc",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1430,
        "y": 960,
        "wires": []
    },
    {
        "id": "eba2c299.2dda8",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "prepare error message",
        "func": "\nif(msg.payload.docs[0].username === msg.user.username && msg.payload.docs[0].access_id === msg.user.access_id){\n    msg.payload = {\n        \"message\": \"Username and Access Id Exist\"\n    }\n}\nelse if(msg.payload.docs[0].username === msg.user.username){\n    msg.payload = {\n        \"message\": \"Username Exists\"\n    }\n}\nelse if(msg.payload.docs[0].access_id === msg.user.access_id){\n    msg.payload = {\n        \"message\": \"Access Id Exists\"\n    }\n}\n\nmsg.statusCode = 400;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 960,
        "wires": [
            [
                "a0dc53f0.9b3bc"
            ]
        ]
    },
    {
        "id": "d1dd6535.75c648",
        "type": "cloudantplus out",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1350,
        "y": 1060,
        "wires": [
            [
                "4e9ca4a7.1f64dc"
            ]
        ]
    },
    {
        "id": "79d51087.db7f3",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "",
        "property": "valid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 900,
        "wires": [
            [
                "8612d25c.afd51"
            ],
            [
                "1c051162.1a254f"
            ]
        ]
    },
    {
        "id": "8612d25c.afd51",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 840,
        "wires": []
    },
    {
        "id": "9bb978c9.61d228",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1760,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4e9ca4a7.1f64dc",
        "type": "change",
        "z": "b64a879b.6b9f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"User created\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1560,
        "y": 1060,
        "wires": [
            [
                "9bb978c9.61d228"
            ]
        ]
    },
    {
        "id": "9d609c90.ecf45",
        "type": "comment",
        "z": "b64a879b.6b9f18",
        "name": "Create user",
        "info": "{\"name\":\"demo\",\"access_id\":\"123123\",\"username\":\"1231234\",\"password\":\"asd12345\"}",
        "x": 210,
        "y": 860,
        "wires": []
    },
    {
        "id": "40d1d327.1a33bc",
        "type": "http in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "url": "/api/user/:username",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 260,
        "y": 1580,
        "wires": [
            [
                "d1490df9.94fed"
            ]
        ]
    },
    {
        "id": "c5082c31.ad126",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "prepare query",
        "func": "msg.payload = {\n    \"selector\":{\n        \"doc_type\": \"users\",\n        \"username\": msg.original.username,\n    }\n\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 1640,
        "wires": [
            [
                "364e4567.f9a30a"
            ]
        ]
    },
    {
        "id": "364e4567.f9a30a",
        "type": "cloudantplus in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 950,
        "y": 1640,
        "wires": [
            [
                "30d9d388.0ead1c"
            ]
        ]
    },
    {
        "id": "30d9d388.0ead1c",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "hasResults",
        "property": "payload.docs.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1130,
        "y": 1640,
        "wires": [
            [
                "1b3f23a5.a3937c"
            ],
            [
                "555d40e7.3e9eb"
            ],
            [
                "ba0dcac5.f05d78"
            ]
        ]
    },
    {
        "id": "f9b9fdfe.6316b",
        "type": "cloudantplus out",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "payonly": false,
        "operation": "delete",
        "x": 1510,
        "y": 1580,
        "wires": [
            [
                "3d2b8dc0.1d19b2"
            ]
        ]
    },
    {
        "id": "1b3f23a5.a3937c",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "prepare id",
        "func": "msg.payload = msg.payload.docs[0];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1320,
        "y": 1580,
        "wires": [
            [
                "f9b9fdfe.6316b"
            ]
        ]
    },
    {
        "id": "3d2b8dc0.1d19b2",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1880,
        "y": 1580,
        "wires": []
    },
    {
        "id": "555d40e7.3e9eb",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple users found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1410,
        "y": 1640,
        "wires": [
            [
                "8d85d3cc.58cfa"
            ]
        ]
    },
    {
        "id": "8d85d3cc.58cfa",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1660,
        "y": 1640,
        "wires": []
    },
    {
        "id": "ba0dcac5.f05d78",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"User not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1370,
        "y": 1740,
        "wires": [
            [
                "fd90dd94.342e"
            ]
        ]
    },
    {
        "id": "fd90dd94.342e",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1600,
        "y": 1740,
        "wires": []
    },
    {
        "id": "a9c5eddd.07ed",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "check valid",
        "func": "msg.original = msg.req.params;\nmsg.isValidFields = true;\n\nif(!msg.req.params.username){\n    msg.isValidFields = false;\n    msg.payload.message = \"username cannot be empty\";\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 1660,
        "wires": [
            [
                "a43fb3e1.3113a"
            ]
        ]
    },
    {
        "id": "a43fb3e1.3113a",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 1660,
        "wires": [
            [
                "c5082c31.ad126"
            ],
            [
                "25052452.d9f44c"
            ]
        ]
    },
    {
        "id": "25052452.d9f44c",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 740,
        "y": 1720,
        "wires": []
    },
    {
        "id": "7e03effe.f46dc",
        "type": "comment",
        "z": "b64a879b.6b9f18",
        "name": "Delete User",
        "info": "",
        "x": 210,
        "y": 1540,
        "wires": []
    },
    {
        "id": "e3d65371.bd943",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "\nmsg.payload = {\n    facility: msg.user.facility,\n    level: msg.user.level,\n    name: msg.user.name,\n    last_name: msg.user.last_name,\n    access_id: msg.user.access_id,\n    password: msg.user.password,\n    email: msg.user.email,\n    phone_no: msg.user.phone_no,\n    username: msg.user.username,\n    lang: msg.user.lang? msg.user.lang: \"en\",\n    doc_type: \"users\"\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 1060,
        "wires": [
            [
                "d1dd6535.75c648"
            ]
        ]
    },
    {
        "id": "f302a2dd.bb9e6",
        "type": "inject",
        "z": "b64a879b.6b9f18",
        "name": "start create admin",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "6",
        "topic": "",
        "x": 250,
        "y": 640,
        "wires": [
            [
                "7773b6cf.d72aa8"
            ]
        ],
        "info": "# Design names\n\nAdd an array of design document names\nto check. Add these names to the split node\nand provide a template containing the code"
    },
    {
        "id": "7773b6cf.d72aa8",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "prepare query",
        "func": "msg.payload = {\n    key: \"12312\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 680,
        "wires": [
            [
                "db7172be.24d7a"
            ]
        ]
    },
    {
        "id": "db7172be.24d7a",
        "type": "cloudantplus in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "search": "_view_",
        "design": "users-username",
        "index": "users-username",
        "x": 270,
        "y": 720,
        "wires": [
            [
                "a1cf061b.f959a8"
            ]
        ]
    },
    {
        "id": "a1cf061b.f959a8",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "got admin?",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "num"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 270,
        "y": 760,
        "wires": [
            [
                "c1836d76.b8c5d"
            ]
        ]
    },
    {
        "id": "c1836d76.b8c5d",
        "type": "template",
        "z": "b64a879b.6b9f18",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "{\n    \"name\": \"admin\",\n    \"last_name\": \"admin\",\n    \"username\": \"12312\",\n    \"access_id\": \"1601883\",\n    \"password\": \"Protenga\",\n    \"facility\": \"Chang Chun Pilot\",\n    \"level\": \"Admin\",\n    \"email\": \"admin@protenga.com\",\n    \"phone_no\": \"60121231234\"\n}",
        "output": "json",
        "x": 280,
        "y": 800,
        "wires": [
            [
                "c97e4bad.6150e8"
            ]
        ]
    },
    {
        "id": "38658c8.9081174",
        "type": "comment",
        "z": "b64a879b.6b9f18",
        "name": "Seed admin",
        "info": "",
        "x": 210,
        "y": 600,
        "wires": []
    },
    {
        "id": "6bc6e4ec.a8b5bc",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "check valid",
        "func": "\nconst validator = {\n    name: \"Name cannot be empty\",\n    last_name: \"Last Name cannot be empty\",\n    access_id: \"Access ID cannot be empty\",\n    facility: [{ message: \"Invalid facility name\", test: (raw) => (!(raw == \"chang_chun_pilot\" || raw == \"EBP\")) }],\n    level: [{ message: \"Level cannot be empty\", test: (raw) => (!raw) },\n        { message: \"level must be one of Team, Supervisor or Admin\", test: (raw) => (!raw || (raw != \"team\" && raw != \"supervisor\" && raw != \"admin\")) }\n    ],\n    email: [{ message: \"This doesn't look like email\", test: (raw) => (!raw || !/\\S+@\\S+\\.\\S+/.test(raw)) }\n    ],\n    lang: [{ message: \"Invalid Language, Available language: en/my\", test: (raw) => (!(raw == \"en\" || raw == \"my\")) }\n    ],\n    phone_no: [{ message: \"Phone number needs be between 10 to 11 digits\", test: (raw) => (!raw || raw.length > 11 || raw.length<10) },\n        { message: \"Phone number must be numeric value\", test: (raw) => (isNaN(raw))}\n    ],\n    _id: \"_id cannot be empty\"\n};\nvar failureArray = [];\nfor (item in validator) {\n    var underTest = msg.payload[item];\n    var tester = validator[item];\n    if (typeof tester == 'string') {\n        if (!underTest) {\n            failureArray.push(tester);\n        }\n    } else {\n        if(!underTest && !(item ==\"email\" || item ==\"phone_no\" || item == \"lang\")){\n            failureArray.push(tester[0].message);\n        }\n        else if(!underTest && (item == \"email\" || item ==\"phone_no\" || item == \"lang\")){\n\n        }\n        else{\n            tester.forEach(t => {\n            if (t.test(underTest)) {\n                failureArray.push(t.message);\n            }\n        });\n        }\n    }\n}\nif (failureArray.length > 0) {\n    msg.valid = false;\n    msg.statusCode = 400;\n    msg.payload = {};\n    msg.payload.message = failureArray\n} else {\n    msg.user = msg.payload\n    msg.valid = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 1260,
        "wires": [
            [
                "42b7cf55.f0708"
            ]
        ]
    },
    {
        "id": "ebdb34c.1707ec8",
        "type": "change",
        "z": "b64a879b.6b9f18",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "{\"message\":\"User deleted\"}",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1700,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "14aab885.223117",
        "type": "function",
        "z": "3b45b61c.50cd0a",
        "name": "Query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"select-option\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"type\": msg.original.type,\n//         $or:[\n//             {\"value\": msg.original.value},\n//             {\"label\": msg.original.label,}\n//             ],\n\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\nlet query = {}\nquery[\"key\"] = [msg.req.params.tenant, msg.original.type]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 360,
        "wires": [
            [
                "f62031b3.a8318"
            ]
        ]
    },
    {
        "id": "f62031b3.a8318",
        "type": "cloudantplus in",
        "z": "3b45b61c.50cd0a",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 230,
        "y": 420,
        "wires": [
            [
                "aface4cd.301ad8"
            ]
        ]
    },
    {
        "id": "aefea899.39a2f8",
        "type": "switch",
        "z": "3b45b61c.50cd0a",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 180,
        "wires": [
            [
                "907f0391.b2eef"
            ],
            [
                "c212502c.5b933"
            ]
        ]
    },
    {
        "id": "907f0391.b2eef",
        "type": "function",
        "z": "3b45b61c.50cd0a",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Missing fields - label, value, type\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 180,
        "wires": [
            [
                "8857a96e.23e258"
            ]
        ]
    },
    {
        "id": "8857a96e.23e258",
        "type": "http response",
        "z": "3b45b61c.50cd0a",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 600,
        "y": 240,
        "wires": []
    },
    {
        "id": "4194cab4.374424",
        "type": "function",
        "z": "3b45b61c.50cd0a",
        "name": "Checks for required fields",
        "func": "msg.original = msg.payload;\nmsg.isValidFields = true;\nif(msg.payload.options){\n    for(let key in msg.payload.options){\n        if(msg.payload.options[key].label){\n            if(!msg.payload.options[key].label.en){\n                msg.isValidFields = false;\n            }\n        }\n        else{\n            msg.isValidFields = false;\n            break;\n        }\n        if(! msg.payload.options[key].capacity){\n            msg.isValidFields = false;\n            break;\n        }\n    }\n}\nelse{\n    msg.isValidFields = false;\n}\nif(!msg.payload.type || !msg.payload.tenant){\n    msg.isValidFields = false;\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 120,
        "wires": [
            [
                "aefea899.39a2f8"
            ]
        ]
    },
    {
        "id": "aface4cd.301ad8",
        "type": "switch",
        "z": "3b45b61c.50cd0a",
        "name": "Results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 480,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "807d0c3a.8abf4",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "b64a879b.6b9f18",
        "name": "",
        "x": 320,
        "y": 960,
        "wires": [
            [
                "c97e4bad.6150e8"
            ]
        ]
    },
    {
        "id": "3e85bfa9.57eea",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "b64a879b.6b9f18",
        "name": "",
        "x": 260,
        "y": 1260,
        "wires": [
            [
                "6bc6e4ec.a8b5bc"
            ]
        ]
    },
    {
        "id": "137f875b.fb57e9",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "b64a879b.6b9f18",
        "name": "",
        "x": 280,
        "y": 1480,
        "wires": [
            [
                "6b0bb376.34692c"
            ]
        ]
    },
    {
        "id": "d1490df9.94fed",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "b64a879b.6b9f18",
        "name": "",
        "env": [],
        "x": 220,
        "y": 1620,
        "wires": [
            [
                "a9c5eddd.07ed"
            ]
        ]
    },
    {
        "id": "cf09b832.9270f8",
        "type": "switch",
        "z": "e737de17.09143",
        "name": "design found?",
        "property": "payload.rows.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 260,
        "y": 300,
        "wires": [
            [],
            [
                "57108460.89f98c",
                "225036b7.32cdaa",
                "30ff7899.214e78",
                "91dea9db.9d5448"
            ]
        ]
    },
    {
        "id": "7f6cca7b.0ec3d4",
        "type": "http request",
        "z": "e737de17.09143",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 910,
        "y": 480,
        "wires": [
            [
                "d8230517.6be8f8"
            ]
        ]
    },
    {
        "id": "a31344a3.186648",
        "type": "split",
        "z": "e737de17.09143",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": "1",
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 350,
        "y": 180,
        "wires": [
            [
                "340cfeaa.a76b42"
            ]
        ]
    },
    {
        "id": "5e851f06.977a7",
        "type": "inject",
        "z": "e737de17.09143",
        "name": "Design names",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "[\"Chamber\",\"forms\",\"users\",\"users-username\",\"attendance-incomplete\",\"process-incomplete\",\"test\",\"setpoints\",\"setpoints-tenant\",\"blueprint\",\"blueprint-tenant\",\"translate\",\"select-options\",\"select-options-type\",\"egg-collection\",\"pupation-setup\",\"breeding-nursery-output\",\"breeding-grow-out-setup\",\"breeding-nursery-setup\",\"egg-collection-dashboard\",\"neonate-collection-dashboard\",\"pupation-setup-dashboard\",\"5DOL-dashboard\",\"device\",\"stats\",\"environment\",\"location\",\"attendance-dashboard\",\"sensorId\",\"select-option-list\",\"query-form\"]",
        "payloadType": "json",
        "x": 200,
        "y": 180,
        "wires": [
            [
                "a31344a3.186648"
            ]
        ],
        "info": "# Design names\n\nAdd an array of design document names\nto check. Add these names to the split node\nand provide a template containing the code"
    },
    {
        "id": "4d201b62.1f5c14",
        "type": "switch",
        "z": "e737de17.09143",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "Chamber",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "forms",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "attendance-incomplete",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "process-incomplete",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "test",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "setpoints",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "setpoints-tenant",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "egg-collection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "breeding-nursery-output",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "breeding-grow-out-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "breeding-nursery-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "egg-collection-dashboard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "neonate-collection-dashboard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup-dashboard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5DOL-dashboard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "attendance-dashboard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "query-form",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 18,
        "x": 450,
        "y": 660,
        "wires": [
            [
                "35c0264d.9497aa"
            ],
            [
                "993d4c11.cd04e"
            ],
            [
                "2076c5cf.0f01da"
            ],
            [
                "98785517.48c748"
            ],
            [],
            [
                "a89d6059.91e35"
            ],
            [
                "c9040cf5.794e"
            ],
            [
                "b7805fcf.ad37b"
            ],
            [
                "55736574.3c17dc"
            ],
            [
                "41432532.ebbcfc"
            ],
            [
                "b152b693.ee53b8"
            ],
            [
                "2fbe7868.c54dc8"
            ],
            [
                "3b174c8d.932094"
            ],
            [
                "bc6bf29a.00f89"
            ],
            [
                "37cc0b62.2a21b4"
            ],
            [
                "a1193055.dbffb"
            ],
            [
                "a8d9597e.8d4d98"
            ],
            [
                "a9999430.cbb0d8"
            ]
        ]
    },
    {
        "id": "35c0264d.9497aa",
        "type": "template",
        "z": "e737de17.09143",
        "name": "Chamber",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/Chamber\",\n  \"views\": {\n    \"egg-trap-collection\": {\n      \"map\": \"function (doc) {\\nif(doc.eggTrapId && doc.matingChamber && !doc.incomplete){\\n  var today = new Date();\\n  var date = new Date(doc.eggTrapOutTimestamp);\\n  if(daysBetween(date, today) <= 7){\\n    emit([date, doc.matingChamber], doc.collectionWeight);\\n   }\\n}\\n}\\n\\nfunction daysBetween(first, second) {\\n    var one = new Date(first.getFullYear(), first.getMonth(), first.getDate());\\n    var two = new Date(second.getFullYear(), second.getMonth(), second.getDate());\\n    var millisecondsPerDay = 1000 * 60 * 60 * 24;\\n    var millisBetween = two.getTime() - one.getTime();\\n    var days = millisBetween / millisecondsPerDay;\\n    return Math.floor(days);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 700,
        "y": 420,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "57108460.89f98c",
        "type": "function",
        "z": "e737de17.09143",
        "name": "Prepare URL",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/insectdata/_design/\"+msg.topic;\nmsg.method=\"PUT\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 360,
        "wires": [
            [
                "4d201b62.1f5c14"
            ]
        ]
    },
    {
        "id": "340cfeaa.a76b42",
        "type": "function",
        "z": "e737de17.09143",
        "name": "prepare query",
        "func": "msg.topic = msg.payload;\nmsg.payload = {\"_id\": \"_design/\"+msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 220,
        "wires": [
            [
                "92f8137f.db3dc"
            ]
        ]
    },
    {
        "id": "e041f3c7.99b27",
        "type": "comment",
        "z": "e737de17.09143",
        "name": "Add all design document names to this inject node",
        "info": "",
        "x": 290,
        "y": 140,
        "wires": []
    },
    {
        "id": "5b32431f.a3168c",
        "type": "comment",
        "z": "e737de17.09143",
        "name": "Here have one template per design document",
        "info": "",
        "x": 810,
        "y": 360,
        "wires": []
    },
    {
        "id": "cabc66e3.d45ab8",
        "type": "comment",
        "z": "e737de17.09143",
        "name": "Design documents need a PUT on creation",
        "info": "Normal CouchDB node doesn't do that",
        "x": 1000,
        "y": 420,
        "wires": []
    },
    {
        "id": "993d4c11.cd04e",
        "type": "template",
        "z": "e737de17.09143",
        "name": "forms",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/forms\",\n  \"views\": {\n    \"egg-trap-incomplete\": {\n      \"map\": \"function (doc) {\\n  if (doc.docType === \\\"eggTrapList\\\" && doc.incomplete) { emit([doc.tenant, doc.matingChamber, doc.eggTrapId], doc) }\\n}\"\n    },\n    \"egg-trap-collection\": {\n      \"map\": \"function (doc) {\\nif(doc.eggTrapId && doc.matingChamber && !doc.incomplete){\\n  var today = new Date();\\n  var date = new Date(doc.eggTrapOutTimestamp);\\n  if(daysBetween(date, today) <= 7){\\n    emit([date, doc.matingChamber], doc.collectionWeight);\\n   }\\n}\\n}\\n\\nfunction daysBetween(first, second) {\\n    var one = new Date(first.getFullYear(), first.getMonth(), first.getDate());\\n    var two = new Date(second.getFullYear(), second.getMonth(), second.getDate());\\n    var millisecondsPerDay = 1000 * 60 * 60 * 24;\\n    var millisBetween = two.getTime() - one.getTime();\\n    var days = millisBetween / millisecondsPerDay;\\n    return Math.floor(days);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 690,
        "y": 480,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "d8230517.6be8f8",
        "type": "debug",
        "z": "e737de17.09143",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 480,
        "wires": []
    },
    {
        "id": "a15981c0.ee777",
        "type": "template",
        "z": "e737de17.09143",
        "name": "test",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/forms\",\n  \"views\": {\n    \"egg-trap-incomplete\": {\n      \"map\": \"function (doc) {\\n  if (doc.docType === \\\"eggTrapList\\\" && doc.incomplete) { emit([doc.tenant, doc.matingChamber, doc.eggTrapId], doc) }\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 690,
        "y": 540,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "225036b7.32cdaa",
        "type": "function",
        "z": "e737de17.09143",
        "name": "Prepare URL for insectusers",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/insectusers/_design/\"+msg.topic;\nmsg.method=\"PUT\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 1980,
        "wires": [
            [
                "8603680a.8f3a78"
            ]
        ]
    },
    {
        "id": "8603680a.8f3a78",
        "type": "switch",
        "z": "e737de17.09143",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "users",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "users-username",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "test",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 350,
        "y": 2020,
        "wires": [
            [
                "337e0683.91182a"
            ],
            [
                "f41f1ca0.a401"
            ],
            []
        ]
    },
    {
        "id": "f41f1ca0.a401",
        "type": "template",
        "z": "e737de17.09143",
        "name": "users-username",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/users-username\",\n  \"views\": {\n    \"users-username\": {\n      \"map\": \"function (doc) {\\n  if (doc.doc_type == \\\"users\\\") emit(doc.username, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 540,
        "y": 2060,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "337e0683.91182a",
        "type": "template",
        "z": "e737de17.09143",
        "name": "users",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/users\",\n  \"views\": {\n    \"users\": {\n      \"map\": \"function (doc) {\\n  if (doc.doc_type == \\\"users\\\") emit(doc.username, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 510,
        "y": 2020,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "2076c5cf.0f01da",
        "type": "template",
        "z": "e737de17.09143",
        "name": "attendance-incomplete",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/attendance-incomplete\",\n  \"views\": {\n    \"attendance-incomplete\": {\n      \"map\": \"function (doc) {\\n  if (doc.doc_type == 'attendance' && doc.incomplete) emit([doc.tenant, doc.user_id, doc.type, doc.in_timestamp], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 740,
        "y": 600,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "98785517.48c748",
        "type": "template",
        "z": "e737de17.09143",
        "name": "process-incomplete",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/process-incomplete\",\n  \"views\": {\n    \"process-incomplete\": {\n      \"map\": \"function (doc) {\\n  if (doc.form == 'process-check-in-out' && doc.incomplete) emit([doc.tenant, doc.user_id, doc.selectProcess], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 730,
        "y": 660,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "87a7aa73.f6a628",
        "type": "http in",
        "z": "d4086327.4f24c",
        "name": "",
        "url": "/api/environment",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "196ca7b8.b6b6e8"
            ]
        ]
    },
    {
        "id": "ba5cf328.b6b0e",
        "type": "http response",
        "z": "d4086327.4f24c",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 820,
        "y": 100,
        "wires": []
    },
    {
        "id": "834cd814.bec4a8",
        "type": "function",
        "z": "d4086327.4f24c",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Environment configuration not found.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 220,
        "wires": [
            [
                "e7dcee07.6dc24"
            ]
        ]
    },
    {
        "id": "e7dcee07.6dc24",
        "type": "http response",
        "z": "d4086327.4f24c",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 920,
        "y": 260,
        "wires": []
    },
    {
        "id": "d1d9074e.6d93a8",
        "type": "http in",
        "z": "500056a4.f23f98",
        "name": "",
        "url": "/api/:tenant/forms/setpoints/:type",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 60,
        "wires": [
            [
                "9b19d6aa.9c6c58"
            ]
        ]
    },
    {
        "id": "2519b578.1031ea",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "Query",
        "func": "// let query = {\n//     \"selector\": {\n//         \"docType\":\"setpoints\",\n//         \"type\": msg.req.params.type,\n//         \"tenant\": msg.req.params.tenant\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"skip\": 0,\n//     \"limit\": 1,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\n\nquery['startkey'] = []\nquery['startkey'].push(msg.req.params.tenant)\nquery['startkey'].push(msg.req.params.type)\n\nquery['endkey'] = []\nquery['endkey'].push(msg.req.params.tenant)\nquery['endkey'].push(msg.req.params.type)\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 60,
        "wires": [
            [
                "4a36f97e.a22b58"
            ]
        ]
    },
    {
        "id": "4a36f97e.a22b58",
        "type": "cloudantplus in",
        "z": "500056a4.f23f98",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "setpoints",
        "index": "setpoints",
        "x": 270,
        "y": 120,
        "wires": [
            [
                "be1013a2.c0c04"
            ]
        ]
    },
    {
        "id": "be1013a2.c0c04",
        "type": "switch",
        "z": "500056a4.f23f98",
        "name": "Results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 280,
        "y": 180,
        "wires": [
            [
                "545f3341.9ee80c"
            ],
            [
                "fa013811.6cff38"
            ]
        ]
    },
    {
        "id": "545f3341.9ee80c",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "Structure return data",
        "func": "let payload = {\n    \"type\": msg.payload[0].key[1],\n    \"value\": msg.payload[0].value.value\n}\nmsg.payload = payload;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 180,
        "wires": [
            [
                "f7534c3a.40e08"
            ]
        ]
    },
    {
        "id": "f7534c3a.40e08",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "5e18d4e.d56582c",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 320,
        "y": 300,
        "wires": []
    },
    {
        "id": "fa013811.6cff38",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"No such key found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 240,
        "wires": [
            [
                "5e18d4e.d56582c"
            ]
        ]
    },
    {
        "id": "a5cbeab4.b07458",
        "type": "http in",
        "z": "500056a4.f23f98",
        "name": "",
        "url": "/api/:tenant/forms/setpoints",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 380,
        "wires": [
            [
                "a6ecdce6.4467d"
            ]
        ]
    },
    {
        "id": "2b54b9a.30c3446",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Setpoint already exist, use PUT to update instead.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 930,
        "y": 340,
        "wires": [
            [
                "c03ec153.19495"
            ]
        ]
    },
    {
        "id": "c03ec153.19495",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1040,
        "y": 420,
        "wires": []
    },
    {
        "id": "eb6ce453.e2b2e8",
        "type": "cloudantplus out",
        "z": "500056a4.f23f98",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 390,
        "y": 520,
        "wires": [
            [
                "9efdc5f8.3322b8"
            ]
        ]
    },
    {
        "id": "8e78034a.c5efb",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "Generate data for new select option",
        "func": "msg.payload = {};\nmsg.payload.docType = \"setpoints\";\nmsg.payload.created_on = new Date();\nmsg.payload.updated_on = new Date();\nmsg.payload.created_by = msg.token.username;\nmsg.payload.updated_by = msg.token.username;\nmsg.payload.tenant = msg.req.params.tenant;\nmsg.payload.value = msg.original.value;\nmsg.payload.type = msg.original.type;\nmsg.target = false;\nconst targets = [\"eggCollectionTargetSetpoint\", \"neonatesCollectedTargetSetpoint\", \"pupaeAddedToMcTargetSetpoint\",\"5DolCollectedTargetSetpoint\"];\nif(targets.includes(msg.original.type)){\n    msg.target = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 460,
        "wires": [
            [
                "eb6ce453.e2b2e8",
                "55472cd6.8a8a54"
            ]
        ]
    },
    {
        "id": "9efdc5f8.3322b8",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "201",
        "headers": {},
        "x": 620,
        "y": 520,
        "wires": []
    },
    {
        "id": "f7c2a3ce.97178",
        "type": "http in",
        "z": "500056a4.f23f98",
        "name": "",
        "url": "/api/:tenant/forms/setpoints",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 600,
        "wires": [
            [
                "8393017d.4898c"
            ]
        ]
    },
    {
        "id": "37b8e4a.704ab1c",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Setpoint not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 680,
        "wires": [
            [
                "d9c3c615.983558"
            ]
        ]
    },
    {
        "id": "d9c3c615.983558",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 640,
        "y": 680,
        "wires": []
    },
    {
        "id": "35108fe0.1c454",
        "type": "cloudantplus out",
        "z": "500056a4.f23f98",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 850,
        "y": 660,
        "wires": [
            [
                "a6c34d70.22702"
            ]
        ]
    },
    {
        "id": "24375392.a4a11c",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "Generate data for existing select option",
        "func": "\nlet payload = msg.payload[0].value;\n\npayload.updated_on = new Date();\npayload.updated_by = msg.token.username;\npayload.value = msg.original.value;\n\nmsg.payload = payload;\nmsg.target = false;\nconst targets = [\"eggCollectionTargetSetpoint\", \"neonatesCollectedTargetSetpoint\", \"pupaeAddedToMcTargetSetpoint\",\"5DolCollectedTargetSetpoint\"];\nif(targets.includes(msg.payload.type)){\n    msg.target = true;\n}\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 560,
        "wires": [
            [
                "35108fe0.1c454",
                "55472cd6.8a8a54"
            ]
        ]
    },
    {
        "id": "a6c34d70.22702",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1040,
        "y": 660,
        "wires": []
    },
    {
        "id": "f35828e3.659668",
        "type": "http in",
        "z": "500056a4.f23f98",
        "name": "",
        "url": "/api/:tenant/forms/setpoints",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 760,
        "wires": [
            [
                "abdf111d.95dd2"
            ]
        ]
    },
    {
        "id": "a3eb7bed.3c7da8",
        "type": "comment",
        "z": "500056a4.f23f98",
        "name": "Delete select option",
        "info": "",
        "x": 210,
        "y": 720,
        "wires": []
    },
    {
        "id": "611d4863.fb48e8",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "checks required fields",
        "func": "msg.original = msg.req.query;\nmsg.isValidFields = true;\n\nif (!msg.req.query.type) {\n    msg.isValidFields = false;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 820,
        "wires": [
            [
                "6ebe0759.21ed58"
            ]
        ]
    },
    {
        "id": "6ebe0759.21ed58",
        "type": "switch",
        "z": "500056a4.f23f98",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 880,
        "wires": [
            [
                "5f49e3f7.abf2cc"
            ],
            [
                "6edfd2c3.8a548c"
            ]
        ]
    },
    {
        "id": "6edfd2c3.8a548c",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "prepare query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"setpoints\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"type\": msg.original.type\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\n\nquery['startkey'] = []\nquery['startkey'].push(msg.req.params.tenant)\nquery['startkey'].push(msg.original.type)\n\nquery['endkey'] = []\nquery['endkey'].push(msg.req.params.tenant)\nquery['endkey'].push(msg.original.type)\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 940,
        "wires": [
            [
                "11fc0c24.29b714",
                "abfa02a7.97108"
            ]
        ]
    },
    {
        "id": "11fc0c24.29b714",
        "type": "cloudantplus in",
        "z": "500056a4.f23f98",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "setpoints",
        "index": "setpoints",
        "x": 190,
        "y": 1000,
        "wires": [
            [
                "5e09be42.f6b4a",
                "abfa02a7.97108"
            ]
        ]
    },
    {
        "id": "5e09be42.f6b4a",
        "type": "switch",
        "z": "500056a4.f23f98",
        "name": "hasResults",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 250,
        "y": 1060,
        "wires": [
            [
                "f06d7802.1f1268"
            ],
            [
                "b148be8d.07ee9"
            ],
            [
                "bb3cc7e9.d767f8"
            ]
        ]
    },
    {
        "id": "bb3cc7e9.d767f8",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Setpoint not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 210,
        "y": 1120,
        "wires": [
            [
                "4c289952.eefbf8"
            ]
        ]
    },
    {
        "id": "4c289952.eefbf8",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 260,
        "y": 1180,
        "wires": []
    },
    {
        "id": "b148be8d.07ee9",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple setpoints found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 1240,
        "wires": [
            [
                "1a99d7d0.d88338"
            ]
        ]
    },
    {
        "id": "1a99d7d0.d88338",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 560,
        "y": 1300,
        "wires": []
    },
    {
        "id": "be55f82b.4b3308",
        "type": "cloudantplus out",
        "z": "500056a4.f23f98",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": false,
        "operation": "delete",
        "x": 470,
        "y": 1120,
        "wires": [
            [
                "4f00ca39.247a64"
            ]
        ]
    },
    {
        "id": "5f49e3f7.abf2cc",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Missing fields - type\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 880,
        "wires": [
            [
                "ae235c9e.d04c5"
            ]
        ]
    },
    {
        "id": "ae235c9e.d04c5",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 560,
        "y": 940,
        "wires": []
    },
    {
        "id": "f06d7802.1f1268",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "prepare id",
        "func": "msg.payload = msg.payload[0].value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 1060,
        "wires": [
            [
                "be55f82b.4b3308"
            ]
        ]
    },
    {
        "id": "4f00ca39.247a64",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 540,
        "y": 1180,
        "wires": []
    },
    {
        "id": "9b19d6aa.9c6c58",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "500056a4.f23f98",
        "name": "",
        "x": 510,
        "y": 60,
        "wires": [
            [
                "2519b578.1031ea"
            ]
        ]
    },
    {
        "id": "a6ecdce6.4467d",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "500056a4.f23f98",
        "name": "",
        "x": 440,
        "y": 380,
        "wires": [
            [
                "e7ef5168.141c2"
            ]
        ]
    },
    {
        "id": "8393017d.4898c",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "500056a4.f23f98",
        "name": "",
        "x": 400,
        "y": 600,
        "wires": [
            [
                "d331e028.68b33"
            ]
        ]
    },
    {
        "id": "abdf111d.95dd2",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "500056a4.f23f98",
        "name": "",
        "x": 480,
        "y": 760,
        "wires": [
            [
                "611d4863.fb48e8"
            ]
        ]
    },
    {
        "id": "65572e88.62058",
        "type": "function",
        "z": "f6987966.455e98",
        "name": "Query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"setpoints\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"type\": msg.original.type,\n\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\n\nquery['startkey'] = []\nquery['startkey'].push(msg.req.params.tenant)\nquery['startkey'].push(msg.original.type)\n\nquery['endkey'] = []\nquery['endkey'].push(msg.req.params.tenant)\nquery['endkey'].push(msg.original.type)\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 200,
        "wires": [
            [
                "678374f8.5148ec"
            ]
        ]
    },
    {
        "id": "678374f8.5148ec",
        "type": "cloudantplus in",
        "z": "f6987966.455e98",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "setpoints",
        "index": "setpoints",
        "x": 170,
        "y": 260,
        "wires": [
            [
                "e70ca78c.ebc158"
            ]
        ]
    },
    {
        "id": "8ee5bd18.d4e67",
        "type": "switch",
        "z": "f6987966.455e98",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 140,
        "wires": [
            [
                "7773153c.b3dd6c"
            ],
            [
                "65572e88.62058"
            ]
        ]
    },
    {
        "id": "7773153c.b3dd6c",
        "type": "function",
        "z": "f6987966.455e98",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Missing fields - value, type\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 140,
        "wires": [
            [
                "a08c04b2.951478"
            ]
        ]
    },
    {
        "id": "a08c04b2.951478",
        "type": "http response",
        "z": "f6987966.455e98",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 540,
        "y": 200,
        "wires": []
    },
    {
        "id": "81e9d4ac.ab7408",
        "type": "function",
        "z": "f6987966.455e98",
        "name": "Checks for required fields",
        "func": "msg.original = msg.payload;\nmsg.isValidFields = true;\n\nif (!msg.payload.value) {\n    msg.isValidFields = false;\n}\nif (!msg.payload.type) {\n    msg.isValidFields = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "8ee5bd18.d4e67"
            ]
        ]
    },
    {
        "id": "e70ca78c.ebc158",
        "type": "switch",
        "z": "f6987966.455e98",
        "name": "Results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 220,
        "y": 320,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "e7ef5168.141c2",
        "type": "subflow:f6987966.455e98",
        "z": "500056a4.f23f98",
        "name": "",
        "env": [],
        "x": 670,
        "y": 380,
        "wires": [
            [
                "2b54b9a.30c3446"
            ],
            [
                "8e78034a.c5efb"
            ]
        ]
    },
    {
        "id": "d331e028.68b33",
        "type": "subflow:f6987966.455e98",
        "z": "500056a4.f23f98",
        "name": "",
        "env": [],
        "x": 630,
        "y": 600,
        "wires": [
            [
                "24375392.a4a11c"
            ],
            [
                "37b8e4a.704ab1c"
            ]
        ]
    },
    {
        "id": "f6d20b80.cc9948",
        "type": "http in",
        "z": "500056a4.f23f98",
        "name": "",
        "url": "/api/:tenant/forms/setpoints",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1050,
        "y": 60,
        "wires": [
            [
                "7fef9230.fbaddc"
            ]
        ]
    },
    {
        "id": "d851330f.4f6ba",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "Query",
        "func": "// let query = {\n//     \"selector\": {\n//         \"docType\":\"setpoints\",\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\nquery[\"key\"]=msg.req.params.tenant\n// query['startkey'] = []\n// query['startkey'].push(msg.req.params.tenant)\n// query['startkey'].push(null)\n\n// query['endkey'] = []\n// query['endkey'].push(msg.req.params.tenant)\n// query['endkey'].push(null)\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1510,
        "y": 60,
        "wires": [
            [
                "de59c47.bf81d38"
            ]
        ]
    },
    {
        "id": "de59c47.bf81d38",
        "type": "cloudantplus in",
        "z": "500056a4.f23f98",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "setpoints-tenant",
        "index": "setpoints-tenant",
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "990b6d72.54b0f"
            ]
        ]
    },
    {
        "id": "990b6d72.54b0f",
        "type": "function",
        "z": "500056a4.f23f98",
        "name": "Structure return data",
        "func": "let setpoints = [];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    let doc = msg.payload[i];\n    let setpoint = {\n        type:doc.value.type,\n        value: doc.value.value\n    };\n    setpoints.push(setpoint);\n}\n\nmsg.payload = {};\nmsg.payload = setpoints;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 240,
        "wires": [
            [
                "f3e30a8d.ec2238"
            ]
        ]
    },
    {
        "id": "f3e30a8d.ec2238",
        "type": "http response",
        "z": "500056a4.f23f98",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1380,
        "y": 240,
        "wires": []
    },
    {
        "id": "7fef9230.fbaddc",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "500056a4.f23f98",
        "name": "",
        "x": 1330,
        "y": 60,
        "wires": [
            [
                "d851330f.4f6ba"
            ]
        ]
    },
    {
        "id": "abfa02a7.97108",
        "type": "debug",
        "z": "500056a4.f23f98",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 480,
        "y": 1000,
        "wires": []
    },
    {
        "id": "a89d6059.91e35",
        "type": "template",
        "z": "e737de17.09143",
        "name": "setpoints",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/setpoints\",\n  \"views\": {\n    \"setpoints\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType == \\\"setpoints\\\")\\n  emit([doc.tenant,doc.type], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 700,
        "y": 700,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "c9040cf5.794e",
        "type": "template",
        "z": "e737de17.09143",
        "name": "setpoints-tenant",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/setpoints-tenant\",\n  \"views\": {\n    \"setpoints-tenant\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType ==\\\"setpoints\\\")\\n  emit(doc.tenant, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 720,
        "y": 740,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "9de0644e.3a5248",
        "type": "template",
        "z": "e737de17.09143",
        "name": "select-options",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/select-options\",\n  \"views\": {\n    \"select-options\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType == \\\"select-option\\\")\\n  emit([doc.tenant, doc.type, doc.value], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 700,
        "y": 1480,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "f9e8f984.70cd08",
        "type": "template",
        "z": "e737de17.09143",
        "name": "select-options-type",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/select-options-type\",\n  \"views\": {\n    \"select-options-type\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType == \\\"select-option\\\")\\n  emit([doc.tenant, doc.type], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 710,
        "y": 1520,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "5912ce7a.dbb04",
        "type": "template",
        "z": "e737de17.09143",
        "name": "blueprint",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/blueprint\",\n  \"views\": {\n    \"blueprint\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType==\\\"blueprint\\\")\\n  emit([doc.tenant, doc.productionLine, doc.workstationForm], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 680,
        "y": 1560,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "6f22a1a0.42697",
        "type": "template",
        "z": "e737de17.09143",
        "name": "blueprint-tenant",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/blueprint-tenant\",\n  \"views\": {\n    \"blueprint-tenant\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType ==\\\"blueprint\\\")\\n  emit(doc.tenant, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 700,
        "y": 1600,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "c230676b.770048",
        "type": "template",
        "z": "e737de17.09143",
        "name": "translate",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/translate\",\n  \"views\": {\n    \"translate\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType == \\\"language\\\")\\n  emit([doc.tenant, doc.productionLine, doc.workstationForm, doc.langType], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 680,
        "y": 1640,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "277451c2.088b3e",
        "type": "http in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "url": "/api/reset-password/init",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 1920,
        "wires": [
            [
                "9fe803ff.bc71",
                "fc558d15.5469c"
            ]
        ]
    },
    {
        "id": "c7816073.0bb06",
        "type": "cloudantplus in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 690,
        "y": 1920,
        "wires": [
            [
                "4ccd0b48.723c04"
            ]
        ]
    },
    {
        "id": "9fe803ff.bc71",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "Query",
        "func": "msg.payload = {\n    \"selector\": {\n    \"doc_type\": \"users\",\n    \"username\": msg.payload.username,\n    },\n    \"execution_stats\": true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 1920,
        "wires": [
            [
                "c7816073.0bb06"
            ]
        ]
    },
    {
        "id": "e94f58b9.a839d8",
        "type": "uuid",
        "z": "b64a879b.6b9f18",
        "uuidVersion": "v4",
        "namespaceType": "",
        "namespace": "",
        "namespaceCustom": "",
        "name": "",
        "field": "resetId",
        "fieldType": "msg",
        "x": 1050,
        "y": 1920,
        "wires": [
            [
                "12903967.704a17"
            ]
        ]
    },
    {
        "id": "4ccd0b48.723c04",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "",
        "property": "payload.execution_stats.results_returned",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 1920,
        "wires": [
            [
                "18b2062d.3dcfea"
            ],
            [
                "e94f58b9.a839d8"
            ],
            [
                "29e9a3ac.059b7c"
            ]
        ]
    },
    {
        "id": "97141dd0.b01a4",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.user = msg.payload.docs[0];\nmsg.payload = msg.payload.docs[0];\nmsg.payload.reset_id = msg.resetId;\nmsg.payload.expiry_date = msg.expiry_date;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1420,
        "y": 1920,
        "wires": [
            [
                "29bc9435.a55ebc"
            ]
        ]
    },
    {
        "id": "a4cd08e5.773158",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2120,
        "y": 1920,
        "wires": []
    },
    {
        "id": "18b2062d.3dcfea",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple users found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1110,
        "y": 1880,
        "wires": [
            [
                "f56946a1.c4ab38"
            ]
        ]
    },
    {
        "id": "f56946a1.c4ab38",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1380,
        "y": 1880,
        "wires": []
    },
    {
        "id": "29e9a3ac.059b7c",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"User not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1110,
        "y": 1980,
        "wires": [
            [
                "f997b3d7.dfa3d"
            ]
        ]
    },
    {
        "id": "f997b3d7.dfa3d",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1340,
        "y": 1980,
        "wires": []
    },
    {
        "id": "29bc9435.a55ebc",
        "type": "cloudantplus out",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1590,
        "y": 1920,
        "wires": [
            [
                "15221800.395e88"
            ]
        ]
    },
    {
        "id": "15221800.395e88",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.to = msg.user.email\nmsg.topic = \"Password Reset\";\nmsg.original = msg.payload\nmsg.protocol = \"https://\"\nif(msg.req.headers.host.includes(\"localhost\")){\n    msg.protocol = \"http://\"\n}\nmsg.mail = {\n    \"transport\": {\n        \"host\": \"smtp.gmail.com\",\n        \"port\": 587,\n        \"auth\": {\n            \"user\": env.get('EMAIL'), \n            \"pass\": env.get('EMAIL_PASSWORD')\n        }\n    },\n    \"options\": {\n        \"from\": env.get('EMAIL'),\n        \"to\": msg.user.email,\n        \"subject\": \"Password Reset\",\n        \"text\": \"\"\n    }\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1780,
        "y": 1920,
        "wires": [
            [
                "35dd4e23.db45c2",
                "e2dbe47.edcaf18"
            ]
        ]
    },
    {
        "id": "35dd4e23.db45c2",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "\nmsg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1960,
        "y": 1920,
        "wires": [
            [
                "a4cd08e5.773158"
            ]
        ]
    },
    {
        "id": "4d52bb48.c071a4",
        "type": "http in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "url": "/api/reset-password/finish",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 2080,
        "wires": [
            [
                "e3d0668e.027468"
            ]
        ]
    },
    {
        "id": "e3d0668e.027468",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "Query",
        "func": "msg.original = msg.payload\nmsg.payload = {\n    \"selector\": {\n    \"doc_type\": \"users\",\n    \"reset_id\": msg.payload.reset_id,\n    },\n    \"execution_stats\": true\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 2080,
        "wires": [
            [
                "719b2bee.c4b2a4"
            ]
        ]
    },
    {
        "id": "719b2bee.c4b2a4",
        "type": "cloudantplus in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 670,
        "y": 2080,
        "wires": [
            [
                "919ae439.7a6b68"
            ]
        ]
    },
    {
        "id": "919ae439.7a6b68",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "",
        "property": "payload.execution_stats.results_returned",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 850,
        "y": 2080,
        "wires": [
            [
                "18b2062d.3dcfea"
            ],
            [
                "4638442.84f69bc"
            ],
            [
                "29e9a3ac.059b7c"
            ]
        ]
    },
    {
        "id": "6a5fd2c0.3c26bc",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.user = msg.payload.docs[0];\nmsg.payload = msg.payload.docs[0];\nmsg.payload.password = msg.password;\ndelete msg.payload.reset_id\ndelete msg.payload.expiry_date\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1680,
        "y": 2160,
        "wires": [
            [
                "6763f455.4e6b3c"
            ]
        ]
    },
    {
        "id": "3e88516e.30066e",
        "type": "md5",
        "z": "b64a879b.6b9f18",
        "name": "",
        "fieldToHash": "original.password",
        "fieldTypeToHash": "msg",
        "hashField": "password",
        "hashFieldType": "msg",
        "x": 1530,
        "y": 2160,
        "wires": [
            [
                "6a5fd2c0.3c26bc"
            ]
        ]
    },
    {
        "id": "6763f455.4e6b3c",
        "type": "cloudantplus out",
        "z": "b64a879b.6b9f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1890,
        "y": 2160,
        "wires": [
            [
                "634962f4.f0074c"
            ]
        ]
    },
    {
        "id": "634962f4.f0074c",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2060,
        "y": 2160,
        "wires": []
    },
    {
        "id": "12903967.704a17",
        "type": "moment",
        "z": "b64a879b.6b9f18",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "2",
        "adjType": "hours",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "expiry_date",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1220,
        "y": 1920,
        "wires": [
            [
                "97141dd0.b01a4"
            ]
        ]
    },
    {
        "id": "4638442.84f69bc",
        "type": "moment",
        "z": "b64a879b.6b9f18",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1060,
        "y": 2080,
        "wires": [
            [
                "c45e74ca.b7dcd8"
            ]
        ]
    },
    {
        "id": "c45e74ca.b7dcd8",
        "type": "moment",
        "z": "b64a879b.6b9f18",
        "name": "",
        "topic": "",
        "input": "payload.docs[0].expiry_date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "expiry_date",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1300,
        "y": 2080,
        "wires": [
            [
                "eb4b0667.c09e48"
            ]
        ]
    },
    {
        "id": "eb4b0667.c09e48",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.expired = false;\nif(msg.timestamp > msg.expiry_date){\n    msg.expired = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1520,
        "y": 2080,
        "wires": [
            [
                "99eae0f2.30939"
            ]
        ]
    },
    {
        "id": "99eae0f2.30939",
        "type": "switch",
        "z": "b64a879b.6b9f18",
        "name": "",
        "property": "expired",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1670,
        "y": 2080,
        "wires": [
            [
                "8982d5e0.189f98"
            ],
            [
                "3e88516e.30066e"
            ]
        ]
    },
    {
        "id": "8982d5e0.189f98",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Reset link expired.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1910,
        "y": 2080,
        "wires": [
            [
                "5db56f26.95486"
            ]
        ]
    },
    {
        "id": "5db56f26.95486",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 2140,
        "y": 2080,
        "wires": []
    },
    {
        "id": "b7805fcf.ad37b",
        "type": "template",
        "z": "e737de17.09143",
        "name": "egg-collection",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/egg-collection\",\n  \"views\": {\n    \"egg-collection\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType == \\\"collectionEggTrapList\\\" && doc.incomplete){\\n    emit([doc.tenant, doc.eggTrapId], doc);\\n  }\\n  \\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 720,
        "y": 780,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "fc8b5c47.ebdf5",
        "type": "function",
        "z": "5a50dcc5.c18a24",
        "name": "BatchId",
        "func": "\n    msg.payload = [\n    {\n        \"label\": {en: msg.batchId18},\n        \"value\": msg.batchId18,\n    },\n    {\n        \"label\": {en: msg.batchId17},\n        \"value\": msg.batchId17,\n    },\n    {\n        \"label\": {en: msg.batchId16},\n        \"value\": msg.batchId16,\n    }\n\n\n    ]\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "2bd3eca1.794ff4",
        "type": "moment",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "16",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "batchId16",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1200,
        "y": 60,
        "wires": [
            [
                "4e73844f.acde7c"
            ]
        ]
    },
    {
        "id": "4e73844f.acde7c",
        "type": "moment",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "17",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "batchId17",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1200,
        "y": 100,
        "wires": [
            [
                "2a185cbf.c2ad84"
            ]
        ]
    },
    {
        "id": "2a185cbf.c2ad84",
        "type": "moment",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "18",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "batchId18",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1200,
        "y": 140,
        "wires": [
            [
                "fc8b5c47.ebdf5"
            ]
        ]
    },
    {
        "id": "55736574.3c17dc",
        "type": "template",
        "z": "e737de17.09143",
        "name": "pupation-setup",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/pupation-setup\",\n  \"views\": {\n    \"pupation-setup-rackId\": {\n      \"map\": \"function (doc) {\\n  if(!doc.docType && doc.workstationForm == \\\"pupation-setup-detail\\\" && doc.productionLine ==\\\"breeding\\\" && doc.rackUsed == false){\\n    emit([doc.tenant, doc.breedingPupationSetupDetailRackId], doc);\\n  }\\n  \\n  \\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 720,
        "y": 820,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "41432532.ebbcfc",
        "type": "template",
        "z": "e737de17.09143",
        "name": "breeding-nursery-output",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/breeding-nursery-output\",\n  \"views\": {\n    \"breeding-nursery-output-batch-rackId\": {\n      \"map\": \"function (doc) {\\n  if(!doc.docType && doc.workstationForm == \\\"nursery-output\\\" && doc.productionLine==\\\"breeding\\\")\\n  for(var i =0; i< doc.breedingNurserySetupRackId.length; i++ ){\\n      var rackId = doc.breedingNurserySetupRackId[i];\\n      emit([doc.tenant, rackId, doc.batchId], doc);\\n    }\\n  \\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 750,
        "y": 860,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "b152b693.ee53b8",
        "type": "template",
        "z": "e737de17.09143",
        "name": "breeding-grow-out-setup",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/breeding-grow-out-setup\",\n  \"views\": {\n    \"breeding-grow-out-setup-rackId\": {\n      \"map\": \"function (doc) {\\n  if(!doc.docType  && doc.workstationForm==\\\"grow-out-setup\\\" && doc.productionLine==\\\"breeding\\\" && doc.rackUsed == false)\\n  emit([doc.tenant, doc.breedingGrowOutSetupRackId], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 750,
        "y": 900,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "30ff7899.214e78",
        "type": "function",
        "z": "e737de17.09143",
        "name": "Prepare URL for insectconfig",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/insectconfig/_design/\"+msg.topic;\nmsg.method=\"PUT\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 1540,
        "wires": [
            [
                "eeeaffef.63e37"
            ]
        ]
    },
    {
        "id": "eeeaffef.63e37",
        "type": "switch",
        "z": "e737de17.09143",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "environment",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "select-options",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "select-options-type",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blueprint",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "blueprint-tenant",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "translate",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "select-option-list",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 470,
        "y": 1540,
        "wires": [
            [
                "89154911.7f0018"
            ],
            [
                "9de0644e.3a5248"
            ],
            [
                "f9e8f984.70cd08"
            ],
            [
                "5912ce7a.dbb04"
            ],
            [
                "6f22a1a0.42697"
            ],
            [
                "c230676b.770048"
            ],
            [
                "8b21b1ef.39b0c"
            ]
        ]
    },
    {
        "id": "914a9e2b.8681d",
        "type": "switch",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "property": "type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "4",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "16",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "check",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "ok",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 350,
        "y": 100,
        "wires": [
            [
                "2a9d22d8.9d46ae"
            ],
            [
                "2bd3eca1.794ff4"
            ],
            [
                "1470c8cb.d01fc7"
            ],
            [
                "3ec123e3.9aa7bc"
            ],
            []
        ]
    },
    {
        "id": "2a9d22d8.9d46ae",
        "type": "moment",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "4",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "batchId16",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 920,
        "y": 40,
        "wires": [
            [
                "db4791.30ce987"
            ]
        ]
    },
    {
        "id": "db4791.30ce987",
        "type": "moment",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "5",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "batchId17",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 920,
        "y": 80,
        "wires": [
            [
                "72e5a4b1.d4c3fc"
            ]
        ]
    },
    {
        "id": "72e5a4b1.d4c3fc",
        "type": "moment",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "6",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "batchId18",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 920,
        "y": 120,
        "wires": [
            [
                "fc8b5c47.ebdf5"
            ]
        ]
    },
    {
        "id": "1470c8cb.d01fc7",
        "type": "moment",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "1",
        "adjType": "days",
        "adjDir": "add",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "batchId4",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 660,
        "y": 120,
        "wires": [
            [
                "521d3ac6.e6a3c4"
            ]
        ]
    },
    {
        "id": "521d3ac6.e6a3c4",
        "type": "moment",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "0",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "batchId5",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 660,
        "y": 160,
        "wires": [
            [
                "cdd29517.b0b5d8"
            ]
        ]
    },
    {
        "id": "cdd29517.b0b5d8",
        "type": "moment",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "1",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "batchId6",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 660,
        "y": 200,
        "wires": [
            [
                "8ee7030b.da7c5"
            ]
        ]
    },
    {
        "id": "8ee7030b.da7c5",
        "type": "link out",
        "z": "5a50dcc5.c18a24",
        "name": "Get BatchId",
        "links": [
            "befedc6e.0babd"
        ],
        "x": 835,
        "y": 200,
        "wires": []
    },
    {
        "id": "2fbe7868.c54dc8",
        "type": "template",
        "z": "e737de17.09143",
        "name": "breeding-nursery-setup",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/breeding-nursery-setup\",\n  \"views\": {\n    \"breeding-nursery-setup-rackId-batchId\": {\n      \"map\": \"function (doc) {\\n  if(!doc.docType && doc.workstationForm ==\\\"nursery-setup\\\" && doc.productionLine==\\\"breeding\\\")\\n  emit([doc.tenant, doc.breedingNurserySetupRackId, doc.batchId], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 750,
        "y": 940,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "fc558d15.5469c",
        "type": "debug",
        "z": "b64a879b.6b9f18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 490,
        "y": 1980,
        "wires": []
    },
    {
        "id": "e2dbe47.edcaf18",
        "type": "template",
        "z": "b64a879b.6b9f18",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html>\n    <body>\n        <p>Click the link below to reset password</p>\n        <a href=\"{{protocol}}{{req.headers.host}}/ui/#/reset-password?resetId={{resetId}}\">Reset Link</a>\n    </body>\n</html>\n",
        "output": "str",
        "x": 1980,
        "y": 1980,
        "wires": [
            [
                "95828f37.fc0b8"
            ]
        ]
    },
    {
        "id": "80214eff.ffaaa",
        "type": "moment",
        "z": "9cbcc357.c121b",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "6",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "DD MMM YYYY",
        "locale": "en-US",
        "output": "day[0]",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 400,
        "y": 80,
        "wires": [
            [
                "84a5656b.f1ea28"
            ]
        ]
    },
    {
        "id": "84a5656b.f1ea28",
        "type": "moment",
        "z": "9cbcc357.c121b",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "5",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "DD MMM YYYY",
        "locale": "en-US",
        "output": "day[1]",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 660,
        "y": 80,
        "wires": [
            [
                "1088da8e.b6dc75"
            ]
        ]
    },
    {
        "id": "1088da8e.b6dc75",
        "type": "moment",
        "z": "9cbcc357.c121b",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "4",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "DD MMM YYYY",
        "locale": "en-US",
        "output": "day[2]",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "b175eebc.97952"
            ]
        ]
    },
    {
        "id": "b175eebc.97952",
        "type": "moment",
        "z": "9cbcc357.c121b",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "3",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "DD MMM YYYY",
        "locale": "en-US",
        "output": "day[3]",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 440,
        "y": 140,
        "wires": [
            [
                "90e0fc58.d158f"
            ]
        ]
    },
    {
        "id": "90e0fc58.d158f",
        "type": "moment",
        "z": "9cbcc357.c121b",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "2",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "DD MMM YYYY",
        "locale": "en-US",
        "output": "day[4]",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 700,
        "y": 140,
        "wires": [
            [
                "bf88655.cf10298"
            ]
        ]
    },
    {
        "id": "bf88655.cf10298",
        "type": "moment",
        "z": "9cbcc357.c121b",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "1",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "DD MMM YYYY",
        "locale": "en-US",
        "output": "day[5]",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 200,
        "y": 200,
        "wires": [
            [
                "b78fc455.116d58"
            ]
        ]
    },
    {
        "id": "b78fc455.116d58",
        "type": "moment",
        "z": "9cbcc357.c121b",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "0",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "DD MMM YYYY",
        "locale": "en-US",
        "output": "day[6]",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 440,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "df331e09.7a5ab",
        "type": "switch",
        "z": "25cb01d.2a117fe",
        "name": "",
        "property": "event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "egg-collection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "neonates-collected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupae-added-to-mc",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5-dol-collected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1050,
        "y": 240,
        "wires": [
            [
                "e3181b6c.e349e8"
            ],
            [
                "a7c14c19.69cd3"
            ],
            [
                "b95c07ce.a7c128"
            ],
            [
                "e09611f4.5a49"
            ]
        ]
    },
    {
        "id": "67df76b9.c2d418",
        "type": "http response",
        "z": "25cb01d.2a117fe",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1820,
        "y": 440,
        "wires": []
    },
    {
        "id": "9d3e1e02.475f2",
        "type": "change",
        "z": "25cb01d.2a117fe",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fromHttp",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "req.params.eventName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 140,
        "wires": [
            [
                "df64f2.6d260b1"
            ]
        ]
    },
    {
        "id": "53d4a8b0.424e58",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fromHttp",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 450,
        "y": 300,
        "wires": [
            [
                "17a7d294.03b86d"
            ]
        ]
    },
    {
        "id": "6b511d16.d5bbd4",
        "type": "moment",
        "z": "25cb01d.2a117fe",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "7",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "",
        "locale": "en-US",
        "output": "startkey",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 860,
        "y": 160,
        "wires": [
            [
                "a10bd837.4348d8"
            ]
        ]
    },
    {
        "id": "a10bd837.4348d8",
        "type": "moment",
        "z": "25cb01d.2a117fe",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "0",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "",
        "locale": "en-US",
        "output": "endkey",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 860,
        "y": 200,
        "wires": [
            [
                "ff677e6a.7c551"
            ]
        ]
    },
    {
        "id": "ff677e6a.7c551",
        "type": "function",
        "z": "25cb01d.2a117fe",
        "name": "",
        "func": "let query ={};\nquery.startkey = msg.startkey;\nquery.endkey = msg.endkey;\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 240,
        "wires": [
            [
                "df331e09.7a5ab"
            ]
        ]
    },
    {
        "id": "b95c07ce.a7c128",
        "type": "cloudantplus in",
        "z": "25cb01d.2a117fe",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "pupation-setup-dashboard",
        "index": "pupation-setup-dashboard",
        "x": 1240,
        "y": 240,
        "wires": [
            [
                "e767af42.d283f"
            ]
        ]
    },
    {
        "id": "e767af42.d283f",
        "type": "json",
        "z": "25cb01d.2a117fe",
        "name": "",
        "property": "payload.payload",
        "action": "",
        "pretty": false,
        "x": 1390,
        "y": 220,
        "wires": [
            [
                "92d1fbbf.00bcc8"
            ]
        ]
    },
    {
        "id": "c135233e.5c14",
        "type": "moment",
        "z": "25cb01d.2a117fe",
        "name": "",
        "topic": "",
        "input": "payload.key",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD MMM YYYY",
        "locale": "en-US",
        "output": "payload.key",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1520,
        "y": 360,
        "wires": [
            [
                "45da713a.c97e3"
            ]
        ]
    },
    {
        "id": "b2683328.c2f06",
        "type": "split",
        "z": "25cb01d.2a117fe",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1350,
        "y": 360,
        "wires": [
            [
                "c135233e.5c14"
            ]
        ]
    },
    {
        "id": "6ab58234.66a1bc",
        "type": "function",
        "z": "25cb01d.2a117fe",
        "name": "",
        "func": "var label = msg.day;\nvar data = []\n\nvar target = msg.target? msg.target.value.value:flow.get('target')[msg.event];\n\n\n//initialize 0 got all days\nfor(let day of label){\n    data.push(0);\n}\n\n//assign value\nfor(let payload of msg.payload){\n    if(label.includes(payload.key)){\n        data[label.indexOf(payload.key)] = Math.round((data[label.indexOf(payload.key)] + parseFloat(payload.value)) * 100)/100;\n    }\n    \n}\n\n//check negative value\nlet max = data[0];\nlet min = data[0];\nfor(let data1 of data){\n    if(data1 > max){\n        max = data1;\n    }\n    if(data1 < min){\n        min = data1;\n    }\n    if(data1 < 0){\n        data1 = 0;\n    }\n}\n\nlet trendUp = true;\nlet ofTarget = Math.round(((data[6]-target)/target)*100 *100)/100\nif(ofTarget<0){\n    trendUp = false;\n}\n\nlet payload = {\n    trendUp: trendUp,\n    value: data[6],\n    ofTarget: ofTarget,\n    setpoint: target,\n    data: data,\n    labels: label,\n    min:min,\n    max:max\n}\nmsg.socketIOEvent = msg.event\nmsg.payload = payload\nflow.set(msg.event+\"Temp\", payload)\nflow.set(msg.event+\"NewData\", false);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1460,
        "y": 440,
        "wires": [
            [
                "6fc174a6.acf91c"
            ]
        ]
    },
    {
        "id": "45da713a.c97e3",
        "type": "join",
        "z": "25cb01d.2a117fe",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1690,
        "y": 360,
        "wires": [
            [
                "791546ad.7c2eb8"
            ]
        ]
    },
    {
        "id": "791546ad.7c2eb8",
        "type": "subflow:9cbcc357.c121b",
        "z": "25cb01d.2a117fe",
        "name": "",
        "env": [],
        "x": 1940,
        "y": 360,
        "wires": [
            [
                "6ab58234.66a1bc"
            ]
        ]
    },
    {
        "id": "6fc174a6.acf91c",
        "type": "switch",
        "z": "25cb01d.2a117fe",
        "name": "",
        "property": "fromHttp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1670,
        "y": 440,
        "wires": [
            [
                "67df76b9.c2d418"
            ],
            []
        ]
    },
    {
        "id": "a7c14c19.69cd3",
        "type": "cloudantplus in",
        "z": "25cb01d.2a117fe",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "neonate-collection-dashboard",
        "index": "neonate-collection-dashboard",
        "x": 1240,
        "y": 200,
        "wires": [
            [
                "e767af42.d283f"
            ]
        ]
    },
    {
        "id": "e3181b6c.e349e8",
        "type": "cloudantplus in",
        "z": "25cb01d.2a117fe",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "egg-collection-dashboard",
        "index": "egg-collection-dashboard",
        "x": 1240,
        "y": 160,
        "wires": [
            [
                "e767af42.d283f"
            ]
        ]
    },
    {
        "id": "e09611f4.5a49",
        "type": "cloudantplus in",
        "z": "25cb01d.2a117fe",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "5DOL-dashboard",
        "index": "5DOL-dashboard",
        "x": 1240,
        "y": 280,
        "wires": [
            [
                "e767af42.d283f"
            ]
        ]
    },
    {
        "id": "d5cf9174.d3583",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "from egg collection",
        "links": [
            "d9ac3371.6b378",
            "ce9841e4.4ada5",
            "1baf9d0e.f3ed13",
            "99d9053.d729ff8",
            "a48220b4.8e632"
        ],
        "x": 55,
        "y": 240,
        "wires": [
            [
                "e50eb351.a0ef3"
            ]
        ]
    },
    {
        "id": "f906724.1724d9",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "from neonate collection",
        "links": [
            "31997932.8b23b6",
            "bbe89cf8.fa61a",
            "c2ec3bb0.6350c8",
            "a526522a.b485",
            "8c75ca12.660b48"
        ],
        "x": 55,
        "y": 280,
        "wires": [
            [
                "18d35127.2cfeff"
            ]
        ]
    },
    {
        "id": "287b9a0.17e8b66",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "from pupation setup",
        "links": [
            "964a684f.1600e8",
            "ac601638.b2e448",
            "ca63d734.b94e68",
            "25616cec.8f0154",
            "46b8973d.ae40c8"
        ],
        "x": 55,
        "y": 320,
        "wires": [
            [
                "a97dc6a9.973698"
            ]
        ]
    },
    {
        "id": "233325c7.39c59a",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "from 5DOL collected",
        "links": [
            "55e09cb8.b5aa14",
            "9d30cf15.d36ba",
            "e961e9c3.f2a078",
            "3dcccd7b.d99a52",
            "cf64000b.830ca"
        ],
        "x": 55,
        "y": 360,
        "wires": [
            [
                "aac8d837.2165a8"
            ]
        ]
    },
    {
        "id": "e50eb351.a0ef3",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "egg-collection",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 240,
        "wires": [
            [
                "53d4a8b0.424e58"
            ]
        ]
    },
    {
        "id": "18d35127.2cfeff",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "neonates-collected",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 280,
        "wires": [
            [
                "53d4a8b0.424e58"
            ]
        ]
    },
    {
        "id": "a97dc6a9.973698",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "pupae-added-to-mc",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 320,
        "wires": [
            [
                "53d4a8b0.424e58"
            ]
        ]
    },
    {
        "id": "aac8d837.2165a8",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "5-dol-collected",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 360,
        "wires": [
            [
                "53d4a8b0.424e58"
            ]
        ]
    },
    {
        "id": "d2f326f0.70a858",
        "type": "function",
        "z": "d4086327.4f24c",
        "name": "",
        "func": "\npayload = {\n    facility_id:msg.payload[0].value.facility_id,\n    facility_name: msg.payload[0].value.facility_name,\n    environment: msg.payload[0].value.environment,\n    rfid_login: msg.payload[0].value.rfid_login,\n    normal_login: msg.payload[0].value.normal_login\n}\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 100,
        "wires": [
            [
                "ba5cf328.b6b0e"
            ]
        ]
    },
    {
        "id": "5820a846.8a1d88",
        "type": "switch",
        "z": "d4086327.4f24c",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 160,
        "wires": [
            [
                "d2f326f0.70a858"
            ],
            [
                "834cd814.bec4a8"
            ]
        ]
    },
    {
        "id": "e929be43.c74f9",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "target",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "2d14f07.539c01",
        "type": "inject",
        "z": "161e8c5f.9e3554",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"egg-collection\":300,\"neonates-collected\":400,\"pupae-added-to-mc\":500,\"5-dol-collected\":600}",
        "payloadType": "json",
        "x": 190,
        "y": 60,
        "wires": [
            [
                "e929be43.c74f9"
            ]
        ]
    },
    {
        "id": "3b174c8d.932094",
        "type": "template",
        "z": "e737de17.09143",
        "name": "egg-collection-dashboard",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/egg-collection-dashboard\",\n  \"views\": {\n    \"egg-collection-dashboard\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType == \\\"collectionEggTrapList\\\" && !doc.incomplete){\\n    emit(doc.eggTrapOutTimestamp, doc.collectionWeight);\\n  }\\n  if( doc.workstationForm==\\\"egg-collection-basic\\\" && doc.productionLine==\\\"breeding\\\"){\\n    emit(doc.timestamp, doc.eggs);\\n  }\\n  \\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 750,
        "y": 980,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "bc6bf29a.00f89",
        "type": "template",
        "z": "e737de17.09143",
        "name": "neonate-collection-dashboard",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/neonate-collection-dashboard\",\n  \"views\": {\n    \"neonate-collection-dashboard\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm ==\\\"neonate-collection\\\" && doc.productionLine == \\\"breeding\\\")\\n  emit(doc.timestamp, doc.neonates);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 770,
        "y": 1020,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "37cc0b62.2a21b4",
        "type": "template",
        "z": "e737de17.09143",
        "name": "pupation-setup-dashboard",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/pupation-setup-dashboard\",\n  \"views\": {\n    \"pupation-setup-dashboard\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"pupation-setup-basic\\\" && doc.productionLine == \\\"breeding\\\")\\n  emit(doc.timestamp, doc.totalPrePupaeSetup);\\n  \\n  if(doc.workstationForm == \\\"pupation-setup-detail\\\" && doc.productionLine == \\\"breeding\\\")\\n  emit(doc.timestamp, doc.trayCount* doc.weightPerTraySetpoint);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 760,
        "y": 1060,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "a1193055.dbffb",
        "type": "template",
        "z": "e737de17.09143",
        "name": "5DOL-dashboard",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/5DOL-dashboard\",\n  \"views\": {\n    \"5DOL-dashboard\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"nursery-output\\\" && doc.productionLine == \\\"breeding\\\")\\n  emit(doc.timestamp, doc.total5Dol);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 730,
        "y": 1100,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "95828f37.fc0b8",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "",
        "func": "msg.mail.options.html = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2240,
        "y": 1980,
        "wires": [
            [
                "9d447cc9.c668d"
            ]
        ]
    },
    {
        "id": "9d447cc9.c668d",
        "type": "simple-sendmail",
        "z": "b64a879b.6b9f18",
        "name": "simple sendmail",
        "x": 2280,
        "y": 2040,
        "wires": [
            []
        ]
    },
    {
        "id": "f7cac3bb.1dc87",
        "type": "function",
        "z": "25cb01d.2a117fe",
        "name": "Query",
        "func": "\n\nlet query = {}\n\nquery['key'] = []\nquery['key'].push(\"001\")\nquery['key'].push(\"eggCollectionTargetSetpoint\")\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1770,
        "y": 160,
        "wires": [
            [
                "cc6ca1f7.574b8"
            ]
        ]
    },
    {
        "id": "cc6ca1f7.574b8",
        "type": "cloudantplus in",
        "z": "25cb01d.2a117fe",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "setpoints",
        "index": "setpoints",
        "x": 1950,
        "y": 220,
        "wires": [
            [
                "ae8d02b.b6397"
            ]
        ]
    },
    {
        "id": "b417d51f.af3d88",
        "type": "function",
        "z": "25cb01d.2a117fe",
        "name": "Query",
        "func": "\n\nlet query = {}\n\nquery['key'] = []\nquery['key'].push(\"001\")\nquery['key'].push(\"neonatesCollectedTargetSetpoint\")\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1770,
        "y": 200,
        "wires": [
            [
                "cc6ca1f7.574b8"
            ]
        ]
    },
    {
        "id": "1b0c7ac7.d357f5",
        "type": "function",
        "z": "25cb01d.2a117fe",
        "name": "Query",
        "func": "\n\nlet query = {}\n\nquery['key'] = []\nquery['key'].push(\"001\")\nquery['key'].push(\"pupaeAddedToMcTargetSetpoint\")\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1770,
        "y": 240,
        "wires": [
            [
                "cc6ca1f7.574b8"
            ]
        ]
    },
    {
        "id": "3ad3bb2c.55b334",
        "type": "function",
        "z": "25cb01d.2a117fe",
        "name": "Query",
        "func": "\n\nlet query = {}\n\nquery['key'] = []\nquery['key'].push(\"001\")\nquery['key'].push(\"5DolCollectedTargetSetpoint\")\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1770,
        "y": 280,
        "wires": [
            [
                "cc6ca1f7.574b8"
            ]
        ]
    },
    {
        "id": "32b01427.acda3c",
        "type": "switch",
        "z": "25cb01d.2a117fe",
        "name": "",
        "property": "event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "egg-collection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "neonates-collected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupae-added-to-mc",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5-dol-collected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1630,
        "y": 220,
        "wires": [
            [
                "f7cac3bb.1dc87"
            ],
            [
                "b417d51f.af3d88"
            ],
            [
                "1b0c7ac7.d357f5"
            ],
            [
                "3ad3bb2c.55b334"
            ]
        ]
    },
    {
        "id": "92d1fbbf.00bcc8",
        "type": "function",
        "z": "25cb01d.2a117fe",
        "name": "",
        "func": "msg.original = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1500,
        "y": 220,
        "wires": [
            [
                "32b01427.acda3c"
            ]
        ]
    },
    {
        "id": "ae8d02b.b6397",
        "type": "function",
        "z": "25cb01d.2a117fe",
        "name": "",
        "func": "msg.target = msg.payload[0]\nmsg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2140,
        "y": 220,
        "wires": [
            [
                "f72c010.a17a5"
            ]
        ]
    },
    {
        "id": "4eab7e0a.1bf1a",
        "type": "inject",
        "z": "d4086327.4f24c",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 480,
        "wires": [
            [
                "4c3f88e9.73dac8"
            ]
        ]
    },
    {
        "id": "4c3f88e9.73dac8",
        "type": "cloudantplus in",
        "z": "d4086327.4f24c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "environment",
        "index": "environment",
        "x": 380,
        "y": 480,
        "wires": [
            [
                "382fc5f5.89328a"
            ]
        ]
    },
    {
        "id": "382fc5f5.89328a",
        "type": "switch",
        "z": "d4086327.4f24c",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "lt",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 480,
        "wires": [
            [
                "92403ef0.c352b"
            ]
        ]
    },
    {
        "id": "92403ef0.c352b",
        "type": "function",
        "z": "d4086327.4f24c",
        "name": "",
        "func": "msg.payload = {\n    docType: \"environment\",\n    facility_id: '1',\n    facility_name: 'Chang Chun Farm',\n    environment: 'dev app',\n    rfid_login: true,\n    normal_login: true\n    \n    \n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 480,
        "wires": [
            [
                "b19fce5f.3b825"
            ]
        ]
    },
    {
        "id": "b19fce5f.3b825",
        "type": "cloudantplus out",
        "z": "d4086327.4f24c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 850,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "196ca7b8.b6b6e8",
        "type": "cloudantplus in",
        "z": "d4086327.4f24c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "environment",
        "index": "environment",
        "x": 230,
        "y": 220,
        "wires": [
            [
                "5820a846.8a1d88"
            ]
        ]
    },
    {
        "id": "61b46c87.2c1eb4",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "To sensor dashboard",
        "links": [],
        "x": 55,
        "y": 980,
        "wires": [
            [
                "1e1a2818.1e3d68"
            ]
        ]
    },
    {
        "id": "22be577d.0ad098",
        "type": "template",
        "z": "e737de17.09143",
        "name": "device",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/device\",\n  \"views\": {\n    \"device\": {\n      \"map\": \"function (doc) {\\n  if(doc.ID)\\n  emit([doc.location, doc.ID], doc);\\n}\",\n      \"reduce\": \"function (keys, values, rereduce) {\\n  var max = values[0];\\n       for(var i=0; i<values.length; i++){\\n          if(values[i].ts > max.ts){\\n            max = values[i]\\n          }\\n        }\\n        return max;\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 670,
        "y": 1780,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "4f6a62cd.04e4fc",
        "type": "template",
        "z": "e737de17.09143",
        "name": "stats",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/stats\",\n  \"views\": {\n    \"stats\": {\n      \"reduce\": \"function (keys, values, rereduce) {\\n  if (rereduce) {\\n        return {\\n          \\\"pres\\\":{\\n            'min': values.reduce(function(a, b) { return Math.min(a, b.pres.min) }, Infinity),\\n            'max': values.reduce(function(a, b) { return Math.max(a, b.pres.max) }, -Infinity)\\n          },\\n          \\\"gas\\\":{\\n            'min': values.reduce(function(a, b) { return Math.min(a, b.gas.min) }, Infinity),\\n            'max': values.reduce(function(a, b) { return Math.max(a, b.gas.max) }, -Infinity)\\n          },\\n          \\\"IAQ\\\":{\\n            'min': values.reduce(function(a, b) { return Math.min(a, b.IAQ.min) }, Infinity),\\n            'max': values.reduce(function(a, b) { return Math.max(a, b.IAQ.max) }, -Infinity)\\n          },\\n          \\\"temp\\\":{\\n            'min': values.reduce(function(a, b) { return Math.min(a, b.temp.min) }, Infinity),\\n            'max': values.reduce(function(a, b) { return Math.max(a, b.temp.max) }, -Infinity)\\n          },\\n          \\\"hum\\\":{\\n            'min': values.reduce(function(a, b) { return Math.min(a, b.hum.min) }, Infinity),\\n            'max': values.reduce(function(a, b) { return Math.max(a, b.hum.max) }, -Infinity)\\n          },\\n          \\\"eqco2\\\":{\\n            'min': values.reduce(function(a, b) { return Math.min(a, b.eqco2.min) }, Infinity),\\n            'max': values.reduce(function(a, b) { return Math.max(a, b.eqco2.max) }, -Infinity)\\n          },\\n          \\\"VOC\\\":{\\n            'min': values.reduce(function(a, b) { return Math.min(a, b.VOC.min) }, Infinity),\\n            'max': values.reduce(function(a, b) { return Math.max(a, b.VOC.max) }, -Infinity)\\n          },\\n          \\\"iaqA\\\":{\\n            'min': values.reduce(function(a, b) { return Math.min(a, b.iaqA.min) }, Infinity),\\n            'max': values.reduce(function(a, b) { return Math.max(a, b.iaqA.max) }, -Infinity)\\n          }\\n        }\\n    } else {\\n       var pres = []\\n       var gas = []\\n       var IAQ = []\\n       var iaqA = []\\n       var temp = []\\n       var hum = []\\n       var eqco2 = []\\n       var VOC = []\\n        values.forEach(function(value){\\n          pres.push(value.pres)\\n          gas.push(value.gas)\\n          IAQ.push(value.IAQ)\\n          iaqA.push(value.iaqA)\\n          temp.push(value.temp)\\n          hum.push(value.hum)\\n          eqco2.push(value.eqco2)\\n          VOC.push(value.VOC)\\n        })\\n        return {\\n          \\\"pres\\\":{\\n            'min': Math.min.apply(null, pres),\\n            'max': Math.max.apply(null, pres)\\n          },\\n          \\\"gas\\\":{\\n            'min': Math.min.apply(null, gas),\\n            'max': Math.max.apply(null, gas)\\n          },\\n          \\\"IAQ\\\":{\\n            'min': Math.min.apply(null, IAQ),\\n            'max': Math.max.apply(null, IAQ)\\n          },\\n          \\\"temp\\\":{\\n            'min': Math.min.apply(null, temp),\\n            'max': Math.max.apply(null, temp)\\n          },\\n          \\\"hum\\\":{\\n            'min': Math.min.apply(null, hum),\\n            'max': Math.max.apply(null, hum)\\n          },\\n          \\\"eqco2\\\":{\\n            'min': Math.min.apply(null, eqco2),\\n            'max': Math.max.apply(null, eqco2)\\n          },\\n          \\\"VOC\\\":{\\n            'min': Math.min.apply(null, VOC),\\n            'max': Math.max.apply(null, VOC)\\n          },\\n          \\\"iaqA\\\":{\\n            'min': Math.min.apply(null, iaqA),\\n            'max': Math.max.apply(null, iaqA)\\n          }\\n          \\n            \\n        }\\n    }\\n}\",\n      \"map\": \"function (doc) {\\n  if(doc.ID)\\n  emit(doc.ID, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 670,
        "y": 1900,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "91dea9db.9d5448",
        "type": "function",
        "z": "e737de17.09143",
        "name": "Prepare URL for environmnetdata",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/environmentdata/_design/\"+msg.topic;\nmsg.method=\"PUT\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 1840,
        "wires": [
            [
                "9b85dfda.0ea3b"
            ]
        ]
    },
    {
        "id": "9b85dfda.0ea3b",
        "type": "switch",
        "z": "e737de17.09143",
        "name": "",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "location",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensorId",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "stats",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 450,
        "y": 1840,
        "wires": [
            [
                "22be577d.0ad098"
            ],
            [
                "83c4443a.8831d8"
            ],
            [
                "71459256.5cdb7c"
            ],
            [
                "4f6a62cd.04e4fc"
            ]
        ]
    },
    {
        "id": "1e1a2818.1e3d68",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorNewData",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 330,
        "y": 1000,
        "wires": [
            []
        ]
    },
    {
        "id": "17a7d294.03b86d",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "flow.set(msg.event+\"NewData\", true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "df64f2.6d260b1",
        "type": "function",
        "z": "25cb01d.2a117fe",
        "name": "",
        "func": "var isNew = flow.get(msg.event+\"NewData\");\nif(isNew){\n    msg.isNew = true;\n}\nelse{\n    msg.isNew = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 140,
        "wires": [
            [
                "b36f03e1.eb22a"
            ]
        ]
    },
    {
        "id": "b36f03e1.eb22a",
        "type": "switch",
        "z": "25cb01d.2a117fe",
        "name": "",
        "property": "isNew",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 120,
        "wires": [
            [
                "56eaca38.3d4974"
            ],
            [
                "6b511d16.d5bbd4"
            ]
        ]
    },
    {
        "id": "56eaca38.3d4974",
        "type": "function",
        "z": "25cb01d.2a117fe",
        "name": "",
        "func": "msg.payload = flow.get(msg.event+\"Temp\");\nflow.set(msg.event+\"NewData\", false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 830,
        "y": 80,
        "wires": [
            [
                "b318bd65.3be8e"
            ]
        ]
    },
    {
        "id": "f41bce1e.34dcd",
        "type": "inject",
        "z": "161e8c5f.9e3554",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 110,
        "y": 1020,
        "wires": [
            [
                "1e1a2818.1e3d68"
            ]
        ]
    },
    {
        "id": "d6f6c64d.8ce4a8",
        "type": "inject",
        "z": "161e8c5f.9e3554",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 440,
        "wires": [
            [
                "e50eb351.a0ef3"
            ]
        ]
    },
    {
        "id": "f83b9c66.b1c06",
        "type": "inject",
        "z": "161e8c5f.9e3554",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 480,
        "wires": [
            [
                "18d35127.2cfeff"
            ]
        ]
    },
    {
        "id": "ee441417.de31e8",
        "type": "inject",
        "z": "161e8c5f.9e3554",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 560,
        "wires": [
            [
                "aac8d837.2165a8"
            ]
        ]
    },
    {
        "id": "c98f99c0.16a5f8",
        "type": "inject",
        "z": "161e8c5f.9e3554",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 520,
        "wires": [
            [
                "a97dc6a9.973698"
            ]
        ]
    },
    {
        "id": "b318bd65.3be8e",
        "type": "http response",
        "z": "25cb01d.2a117fe",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1020,
        "y": 80,
        "wires": []
    },
    {
        "id": "26a7ec9f.2fb504",
        "type": "http request",
        "z": "e737de17.09143",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 750,
        "y": 220,
        "wires": [
            [
                "7b7fc08e.72975",
                "c1c34fc6.adc35"
            ]
        ]
    },
    {
        "id": "105f0fe1.a87fd",
        "type": "function",
        "z": "e737de17.09143",
        "name": "",
        "func": "let baseUrl = env.get(\"INSECT_DB\")\nlet path = \"/insectdata/_design_docs\"\nlet params = '?key=\"_design/' + msg.topic + '\"'\n\nmsg.url = baseUrl + path + params\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 180,
        "wires": [
            [
                "26a7ec9f.2fb504"
            ]
        ]
    },
    {
        "id": "7b7fc08e.72975",
        "type": "function",
        "z": "e737de17.09143",
        "name": "",
        "func": "msg.designFound = (msg.payload) && (msg.payload.rows) && (msg.payload.rows.length > 0);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 260,
        "wires": [
            [
                "cf09b832.9270f8"
            ]
        ]
    },
    {
        "id": "12ab45c3.19d58a",
        "type": "comment",
        "z": "e737de17.09143",
        "name": "find design doc for insectdata db",
        "info": "",
        "x": 690,
        "y": 140,
        "wires": []
    },
    {
        "id": "89154911.7f0018",
        "type": "template",
        "z": "e737de17.09143",
        "name": "environment",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/environment\",\n  \"views\": {\n    \"environment\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType ==\\\"environment\\\")\\n  emit(doc._id, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 690,
        "y": 1440,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "4485a9e6.0d5ab8",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "Sensor Dashboard",
        "info": "",
        "x": 1090,
        "y": 760,
        "wires": []
    },
    {
        "id": "2d61cd7a.98f802",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "Process Dashboard",
        "info": "",
        "x": 510,
        "y": 120,
        "wires": []
    },
    {
        "id": "fa0baf88.e649a",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "Attendance Dashboard",
        "info": "",
        "x": 150,
        "y": 1940,
        "wires": []
    },
    {
        "id": "a399cd20.c8dee",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "api/:tenant/forms/dashboard-attendance",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 2000,
        "wires": [
            [
                "b486d0f3.80e4d"
            ]
        ]
    },
    {
        "id": "b486d0f3.80e4d",
        "type": "moment",
        "z": "161e8c5f.9e3554",
        "name": "generate local date",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DDT00:00:00.000",
        "locale": "en-US",
        "output": "localTimestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 510,
        "y": 2000,
        "wires": [
            [
                "b0835a33.0be5b8"
            ]
        ]
    },
    {
        "id": "b0835a33.0be5b8",
        "type": "moment",
        "z": "161e8c5f.9e3554",
        "name": "generate start of the day iso",
        "topic": "startOfLocalDay",
        "input": "localTimestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "startOfLocalDay",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 480,
        "y": 2040,
        "wires": [
            [
                "c7b970b5.7659e"
            ]
        ]
    },
    {
        "id": "c7b970b5.7659e",
        "type": "moment",
        "z": "161e8c5f.9e3554",
        "name": "generate end of the day iso",
        "topic": "endOfLocalDay",
        "input": "localTimestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "86399",
        "adjType": "seconds",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "endOfLocalDay",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 480,
        "y": 2080,
        "wires": [
            [
                "d9ccde76.e4772"
            ]
        ]
    },
    {
        "id": "d9ccde76.e4772",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "let query ={}\nquery['startkey'] = []\nquery['startkey'].push(msg.req.params.tenant)\nquery['startkey'].push(msg.startOfLocalDay)\nquery['endkey'] = []\nquery['endkey'].push(msg.req.params.tenant)\nquery['endkey'].push(msg.endOfLocalDay)\n\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 2120,
        "wires": [
            [
                "4183ff20.9424c"
            ]
        ]
    },
    {
        "id": "4183ff20.9424c",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "attendance-dashboard",
        "index": "attendance-dashboard",
        "x": 590,
        "y": 2120,
        "wires": [
            [
                "a2b5a9c6.c0c2a8"
            ]
        ]
    },
    {
        "id": "a2b5a9c6.c0c2a8",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "let output = [];\nfor(let attendance of msg.payload){\n    let value = attendance.value\n    let outputData = {\n        in_submitted_date: value.in_submitted_date,\n        in_timestamp: value.in_timestamp,\n        user_name: value.user_name,\n        user_id: value.user_id,\n        in_temp: value.in_temp,\n        device_ip: value.device_ip,\n        facility: value.user_facility,\n        level: value.user_level\n    }\n    output.push(outputData)\n}\nmsg.payload = output;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 2120,
        "wires": [
            [
                "f867a30.940b26"
            ]
        ]
    },
    {
        "id": "f867a30.940b26",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 940,
        "y": 2120,
        "wires": []
    },
    {
        "id": "c212502c.5b933",
        "type": "function",
        "z": "3b45b61c.50cd0a",
        "name": "Checks for required fields",
        "func": "// msg.isValidFields = true;\n// let seen = [];\n// for(let option of msg.payload.options){\n//     if(seen.includes(option.value)){\n//         msg.isValidFields = false;\n//         break;\n//     }\n//     else{\n//         seen.push(option.value);\n//     }\n// }\nfor(let key in msg.payload.options){\n    if(msg.payload.options[key].capacity<=0){\n        msg.isValidFields = false;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 260,
        "wires": [
            [
                "7b7006a0.baa928"
            ]
        ]
    },
    {
        "id": "7b7006a0.baa928",
        "type": "switch",
        "z": "3b45b61c.50cd0a",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 320,
        "wires": [
            [
                "b1cf0ab6.5dfaf8"
            ],
            [
                "14aab885.223117"
            ]
        ]
    },
    {
        "id": "b1cf0ab6.5dfaf8",
        "type": "function",
        "z": "3b45b61c.50cd0a",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Capacity cannot less than or equal to 0\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 300,
        "wires": [
            [
                "48b0a8d2.45ab98"
            ]
        ]
    },
    {
        "id": "48b0a8d2.45ab98",
        "type": "http response",
        "z": "3b45b61c.50cd0a",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 740,
        "y": 380,
        "wires": []
    },
    {
        "id": "ba0c20e7.444c7",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "To sensor dashboard",
        "links": [],
        "x": 95,
        "y": 1240,
        "wires": [
            [
                "c8d72c61.ba69d"
            ]
        ]
    },
    {
        "id": "c8d72c61.ba69d",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorLocationNewData",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 270,
        "y": 1240,
        "wires": [
            []
        ]
    },
    {
        "id": "46f57bf6.bff894",
        "type": "inject",
        "z": "161e8c5f.9e3554",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 1380,
        "wires": [
            [
                "c8d72c61.ba69d"
            ]
        ]
    },
    {
        "id": "83c4443a.8831d8",
        "type": "template",
        "z": "e737de17.09143",
        "name": "location",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/location\",\n  \"views\": {\n    \"location\": {\n      \"map\": \"function (doc) {\\n  if(doc.ID)\\n  emit(doc.location, doc);\\n}\",\n      \"reduce\": \"function (keys, values, rereduce) {\\n  var max = values[0];\\n       for(var i=0; i<values.length; i++){\\n          if(values[i].ts > max.ts){\\n            max = values[i]\\n          }\\n        }\\n        return max;\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 680,
        "y": 1820,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "a8d9597e.8d4d98",
        "type": "template",
        "z": "e737de17.09143",
        "name": "attendance-dashboard",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/attendance-dashboard\",\n  \"views\": {\n    \"attendance-dashboard\": {\n      \"map\": \"function (doc) {\\n  if (doc.doc_type == 'attendance' && doc.incomplete) emit([doc.tenant,doc.in_timestamp], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 740,
        "y": 1140,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "b34f2185.d1928",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "To sensor dashboard",
        "links": [],
        "x": 135,
        "y": 1600,
        "wires": [
            [
                "c79ac332.5866d"
            ]
        ]
    },
    {
        "id": "c79ac332.5866d",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "sensorIDNewData",
                "pt": "flow",
                "to": "true",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 300,
        "y": 1600,
        "wires": [
            []
        ]
    },
    {
        "id": "fa1e4eb0.b55ac",
        "type": "inject",
        "z": "161e8c5f.9e3554",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 210,
        "y": 1740,
        "wires": [
            [
                "c79ac332.5866d"
            ]
        ]
    },
    {
        "id": "71459256.5cdb7c",
        "type": "template",
        "z": "e737de17.09143",
        "name": "sensorId",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/sensorId\",\n  \"views\": {\n    \"sensorId\": {\n      \"reduce\": \"function (keys, values, rereduce) {\\n  var max = values[0];\\n       for(var i=0; i<values.length; i++){\\n          if(values[i].ts > max.ts){\\n            max = values[i]\\n          }\\n        }\\n        return max;\\n}\",\n      \"map\": \"function (doc) {\\n  if(doc.ID)\\n  emit(doc.ID, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 680,
        "y": 1860,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "8b21b1ef.39b0c",
        "type": "template",
        "z": "e737de17.09143",
        "name": "select-option-list",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/select-option-list\",\n  \"views\": {\n    \"select-option-list\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType==\\\"select-option-list\\\")\\n  emit([doc.tenant, doc.type], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 700,
        "y": 1680,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "55472cd6.8a8a54",
        "type": "switch",
        "z": "500056a4.f23f98",
        "name": "",
        "property": "target",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1190,
        "y": 480,
        "wires": [
            [
                "a683fa25.ac87b8"
            ]
        ]
    },
    {
        "id": "a683fa25.ac87b8",
        "type": "link out",
        "z": "500056a4.f23f98",
        "name": "to dashboard",
        "links": [
            "f8109e9a.0ad5b"
        ],
        "x": 1315,
        "y": 480,
        "wires": []
    },
    {
        "id": "f8109e9a.0ad5b",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "from setpoint",
        "links": [
            "a683fa25.ac87b8"
        ],
        "x": 55,
        "y": 180,
        "wires": [
            [
                "e50eb351.a0ef3",
                "18d35127.2cfeff",
                "a97dc6a9.973698",
                "aac8d837.2165a8"
            ]
        ]
    },
    {
        "id": "f72c010.a17a5",
        "type": "switch",
        "z": "25cb01d.2a117fe",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2310,
        "y": 220,
        "wires": [
            [
                "791546ad.7c2eb8"
            ],
            [
                "b2683328.c2f06"
            ]
        ]
    },
    {
        "id": "92f8137f.db3dc",
        "type": "switch",
        "z": "e737de17.09143",
        "name": "should delay?",
        "property": "ENVIRONMENT",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "production",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 220,
        "wires": [
            [
                "b2af946f.079618"
            ],
            [
                "105f0fe1.a87fd"
            ]
        ]
    },
    {
        "id": "b2af946f.079618",
        "type": "delay",
        "z": "e737de17.09143",
        "name": "",
        "pauseType": "rate",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "1",
        "nbRateUnits": "3",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 580,
        "y": 180,
        "wires": [
            [
                "105f0fe1.a87fd"
            ]
        ]
    },
    {
        "id": "c1c34fc6.adc35",
        "type": "debug",
        "z": "e737de17.09143",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 220,
        "wires": []
    },
    {
        "id": "76f540f1.9c403",
        "type": "cronplus",
        "z": "161e8c5f.9e3554",
        "name": "",
        "outputField": "payload",
        "timeZone": "Asia/Kuala_Lumpur",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "updateNewData",
                "topic": "updateNewData",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 0 * * ? *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 380,
        "y": 480,
        "wires": [
            [
                "aac8d837.2165a8",
                "a97dc6a9.973698",
                "18d35127.2cfeff",
                "e50eb351.a0ef3"
            ]
        ]
    },
    {
        "id": "64129dce.92f584",
        "type": "function",
        "z": "afd6710.802949",
        "name": "prepare query",
        "func": "let query = {}\n\nquery['startkey'] = []\nquery['startkey'].push(msg.req.params.tenant)\nquery['startkey'].push(msg.protengaUser.username)\nquery['startkey'].push(msg.payload)\n\nquery['endkey'] = []\nquery['endkey'].push(msg.req.params.tenant)\nquery['endkey'].push(msg.protengaUser.username)\nquery['endkey'].push(msg.payload)\n\nmsg.payload = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "f9ba3fad.3a914"
            ]
        ]
    },
    {
        "id": "f9ba3fad.3a914",
        "type": "cloudantplus in",
        "z": "afd6710.802949",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "process-incomplete",
        "index": "process-incomplete",
        "x": 250,
        "y": 240,
        "wires": [
            [
                "91a2a818.82e678"
            ]
        ]
    },
    {
        "id": "91a2a818.82e678",
        "type": "function",
        "z": "afd6710.802949",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "2dfeb08c.9e277",
        "type": "switch",
        "z": "a2be8459.a2cc78",
        "name": "attendance action?",
        "property": "original.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "END",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "cf12e54b.ba6408"
            ],
            [
                "afd5f861.41bb58"
            ],
            [
                "b7e75d70.d7c32"
            ]
        ]
    },
    {
        "id": "fd24ea82.f43378",
        "type": "switch",
        "z": "a2be8459.a2cc78",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 720,
        "wires": [
            [
                "6cc3eb0b.40f364"
            ],
            [
                "a9bec6f3.202a88"
            ],
            [
                "a18020f.94438e"
            ]
        ]
    },
    {
        "id": "a9bec6f3.202a88",
        "type": "function",
        "z": "a2be8459.a2cc78",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 720,
        "wires": [
            [
                "94750382.49962"
            ]
        ]
    },
    {
        "id": "94750382.49962",
        "type": "http response",
        "z": "a2be8459.a2cc78",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 720,
        "wires": []
    },
    {
        "id": "a18020f.94438e",
        "type": "function",
        "z": "a2be8459.a2cc78",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'You cannot end without start, do you mean to start?'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 760,
        "wires": [
            [
                "e38d4660.0d5f88"
            ]
        ]
    },
    {
        "id": "e38d4660.0d5f88",
        "type": "http response",
        "z": "a2be8459.a2cc78",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 840,
        "y": 760,
        "wires": []
    },
    {
        "id": "6cc3eb0b.40f364",
        "type": "function",
        "z": "a2be8459.a2cc78",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\n// let inMilliseconds = +new Date(data.in_timestamp)\n// let inHours = Math.floor((inMilliseconds / (1000 * 60 * 60)) % 24)\n// let inMinutes = Math.floor((inMilliseconds / (1000 * 60)) % 60)\n// let outMilliseconds = +new Date(msg.original.timestamp)\n// let outHours = Math.floor((outMilliseconds / (1000 * 60 * 60)) % 24)\n// let outMinutes = Math.floor((outMilliseconds / (1000 * 60)) % 60)\n\ndata['end_submitted_date'] = new Date()\ndata['end_timestamp'] = msg.original.timestamp\ndata['end_id'] = msg.processId\ndata['incomplete'] = false\nif(data.end_deleted){\n    delete data.end_deleted\n}\n\n// data['total_hours'] = outHours - inHours\n// data['total_minutes'] = outMinutes - inMinutes\n\n// let originalData = msg.original;\n// delete originalData.timestamp\n// delete originalData.selectProcess\n// delete originalData.action\n// delete originalData.processDocument\n// if (msg.original.temperature) {\n//     data['out_temp'] = msg.original.temperature\n// }\n// if (msg.original.comment) {\n//     data['out_comment'] = msg.original.comment\n// }\n\nmsg.payload = data\nmsg.original = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 680,
        "wires": [
            [
                "8b19c009.233c"
            ]
        ]
    },
    {
        "id": "8b19c009.233c",
        "type": "cloudantplus out",
        "z": "a2be8459.a2cc78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 850,
        "y": 680,
        "wires": [
            [
                "9a754b14.47cab8"
            ]
        ]
    },
    {
        "id": "989da2fe.f756c",
        "type": "function",
        "z": "a2be8459.a2cc78",
        "name": "set attendance type",
        "func": "msg.processId = msg.cloudant.id\nmsg.payload = msg.original.selectProcess\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 600,
        "wires": [
            [
                "3dbe340.c9999cc"
            ]
        ]
    },
    {
        "id": "9a754b14.47cab8",
        "type": "http response",
        "z": "a2be8459.a2cc78",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1020,
        "y": 680,
        "wires": []
    },
    {
        "id": "5d8340f.5be12c",
        "type": "link in",
        "z": "a2be8459.a2cc78",
        "name": "",
        "links": [
            "afd5f861.41bb58"
        ],
        "x": 195,
        "y": 600,
        "wires": [
            [
                "989da2fe.f756c"
            ]
        ]
    },
    {
        "id": "afd5f861.41bb58",
        "type": "link out",
        "z": "a2be8459.a2cc78",
        "name": "from check out",
        "links": [
            "5d8340f.5be12c"
        ],
        "x": 575,
        "y": 120,
        "wires": []
    },
    {
        "id": "f55422be.be23d",
        "type": "function",
        "z": "a2be8459.a2cc78",
        "name": "structure data",
        "func": "let data = msg.payload\n\ndata['tenant'] = msg.req.params.tenant\ndata['line'] = msg.req.params.line\ndata['form'] = msg.req.params.form\n// data['username'] = msg.protengaUser.username\ndata['start_submitted_date'] = new Date()\ndata['start_timestamp'] = msg.original.timestamp\ndata['start_id'] = msg.processId\ndata['incomplete'] = true\ndata['selectProcess'] = msg.original.selectProcess\n\nlet originalData = msg.original;\ndelete originalData.timestamp\ndelete originalData.selectProcess\ndelete originalData.action\ndelete originalData.productionLine\ndelete originalData.workstationForm\ndelete originalData.dataRecord\n\nlet metadata = flow.get(\"$parent.metadata\");\nmsg.payload = {...data,...originalData, ...metadata}\nmsg.original = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 540,
        "wires": [
            [
                "76d86859.3c6788"
            ]
        ]
    },
    {
        "id": "76d86859.3c6788",
        "type": "cloudantplus out",
        "z": "a2be8459.a2cc78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 830,
        "y": 540,
        "wires": [
            [
                "2d85ad5c.e5c712"
            ]
        ]
    },
    {
        "id": "2d85ad5c.e5c712",
        "type": "http response",
        "z": "a2be8459.a2cc78",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1000,
        "y": 540,
        "wires": []
    },
    {
        "id": "35d08cdd.e4f864",
        "type": "switch",
        "z": "a2be8459.a2cc78",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 500,
        "wires": [
            [
                "d558179a.451c58"
            ],
            [
                "7eb7669c.3a6d98"
            ],
            [
                "f55422be.be23d"
            ]
        ]
    },
    {
        "id": "d558179a.451c58",
        "type": "function",
        "z": "a2be8459.a2cc78",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'You have started, do you mean to end?'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 460,
        "wires": [
            [
                "e633fa0d.8fee78"
            ]
        ]
    },
    {
        "id": "e633fa0d.8fee78",
        "type": "http response",
        "z": "a2be8459.a2cc78",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 840,
        "y": 460,
        "wires": []
    },
    {
        "id": "7eb7669c.3a6d98",
        "type": "function",
        "z": "a2be8459.a2cc78",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 500,
        "wires": [
            [
                "28160d61.fda542"
            ]
        ]
    },
    {
        "id": "28160d61.fda542",
        "type": "http response",
        "z": "a2be8459.a2cc78",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 500,
        "wires": []
    },
    {
        "id": "42c06629.7f8ca8",
        "type": "function",
        "z": "a2be8459.a2cc78",
        "name": "set process type",
        "func": "msg.processId = msg.cloudant.id\nmsg.payload = msg.original.selectProcess\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 380,
        "wires": [
            [
                "4ed02f3b.e7a0e"
            ]
        ]
    },
    {
        "id": "cf12e54b.ba6408",
        "type": "link out",
        "z": "a2be8459.a2cc78",
        "name": "from check in",
        "links": [
            "c0b26a9b.00abd8"
        ],
        "x": 575,
        "y": 80,
        "wires": []
    },
    {
        "id": "c0b26a9b.00abd8",
        "type": "link in",
        "z": "a2be8459.a2cc78",
        "name": "",
        "links": [
            "cf12e54b.ba6408"
        ],
        "x": 195,
        "y": 380,
        "wires": [
            [
                "42c06629.7f8ca8"
            ]
        ]
    },
    {
        "id": "b7e75d70.d7c32",
        "type": "function",
        "z": "a2be8459.a2cc78",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'That action was not defined.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 220,
        "wires": [
            [
                "1a646ee.e4eeb91"
            ]
        ]
    },
    {
        "id": "1a646ee.e4eeb91",
        "type": "http response",
        "z": "a2be8459.a2cc78",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 420,
        "y": 280,
        "wires": []
    },
    {
        "id": "d2ed38c9.8603a8",
        "type": "comment",
        "z": "a2be8459.a2cc78",
        "name": "check-in, check-out, lunch check-in, lunch check-out",
        "info": "",
        "x": 370,
        "y": 340,
        "wires": []
    },
    {
        "id": "4ed02f3b.e7a0e",
        "type": "subflow:afd6710.802949",
        "z": "a2be8459.a2cc78",
        "name": "get incomplete process",
        "env": [],
        "x": 240,
        "y": 500,
        "wires": [
            [
                "35d08cdd.e4f864"
            ]
        ]
    },
    {
        "id": "3dbe340.c9999cc",
        "type": "subflow:afd6710.802949",
        "z": "a2be8459.a2cc78",
        "name": "get incomplete process",
        "env": [],
        "x": 200,
        "y": 720,
        "wires": [
            [
                "fd24ea82.f43378"
            ]
        ]
    },
    {
        "id": "3941a79c.8c00a8",
        "type": "moment",
        "z": "9baa67b7.6ef658",
        "name": "generate local date",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYYY-MM-DDT00:00:00.000",
        "locale": "en-US",
        "output": "localTimestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "26033e50.c9eb72"
            ]
        ]
    },
    {
        "id": "26033e50.c9eb72",
        "type": "moment",
        "z": "9baa67b7.6ef658",
        "name": "generate start of the day iso",
        "topic": "startOfLocalDay",
        "input": "localTimestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "startOfLocalDay",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "610ff8fd.39cd08"
            ]
        ]
    },
    {
        "id": "610ff8fd.39cd08",
        "type": "moment",
        "z": "9baa67b7.6ef658",
        "name": "generate end of the day iso",
        "topic": "endOfLocalDay",
        "input": "localTimestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "86399",
        "adjType": "seconds",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "endOfLocalDay",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "193248bd.6428d7"
            ]
        ]
    },
    {
        "id": "193248bd.6428d7",
        "type": "function",
        "z": "9baa67b7.6ef658",
        "name": "prepare query",
        "func": "let query = {}\n\nquery['startkey'] = []\nquery['startkey'].push(msg.req.params.tenant)\nquery['startkey'].push(msg.protengaUser.username)\nquery['startkey'].push(msg.payload)\nquery['startkey'].push(msg.startOfLocalDay)\n\nquery['endkey'] = []\nquery['endkey'].push(msg.req.params.tenant)\nquery['endkey'].push(msg.protengaUser.username)\nquery['endkey'].push(msg.payload)\nquery['endkey'].push(msg.endOfLocalDay)\n\nmsg.payload = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 240,
        "y": 200,
        "wires": [
            [
                "5aca9046.936da"
            ]
        ]
    },
    {
        "id": "5aca9046.936da",
        "type": "cloudantplus in",
        "z": "9baa67b7.6ef658",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "attendance-incomplete",
        "index": "attendance-incomplete",
        "x": 250,
        "y": 240,
        "wires": [
            [
                "63fc5e40.a5524"
            ]
        ]
    },
    {
        "id": "63fc5e40.a5524",
        "type": "function",
        "z": "9baa67b7.6ef658",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f741039c.f8613",
        "type": "switch",
        "z": "1d31ea65.003676",
        "name": "attendance action?",
        "property": "original.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "CHECK_IN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CHECK_OUT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CHECK_IN_LUNCH",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CHECK_OUT_LUNCH",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 270,
        "y": 140,
        "wires": [
            [
                "2cfe199e.48af06"
            ],
            [
                "fc13a67b.c8aec8"
            ],
            [
                "a6acdd67.e2079"
            ],
            [
                "b45c287c.68f6d8"
            ],
            [
                "d33739af.175df8"
            ]
        ]
    },
    {
        "id": "a1e66e6b.150d3",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "structure data",
        "func": "let data = {}\n\ndata['doc_type'] = 'attendance'\ndata['type'] = 'lunch'\ndata['tenant'] = msg.req.params.tenant\ndata['line'] = msg.req.params.line\ndata['form'] = msg.req.params.form\ndata['user_id'] = msg.protengaUser.username\ndata['in_submitted_date'] = new Date()\ndata['in_timestamp'] = msg.original.timestamp\ndata['incomplete'] = true\n\nif (msg.original.temperature) {\n    data['in_temp'] = msg.original.temperature\n}\nif (msg.original.comment) {\n    data['in_comment'] = msg.original.comment\n}\n\nmsg.payload = data\nmsg.original = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 960,
        "wires": [
            [
                "2176c0f0.8196"
            ]
        ]
    },
    {
        "id": "2176c0f0.8196",
        "type": "cloudantplus out",
        "z": "1d31ea65.003676",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 730,
        "y": 960,
        "wires": [
            [
                "90857820.9aa848"
            ]
        ]
    },
    {
        "id": "90857820.9aa848",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 900,
        "y": 960,
        "wires": []
    },
    {
        "id": "32695b08.030cc4",
        "type": "switch",
        "z": "1d31ea65.003676",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 920,
        "wires": [
            [
                "73d9e3a2.f74a0c"
            ],
            [
                "f140a500.569078"
            ],
            [
                "a1e66e6b.150d3"
            ]
        ]
    },
    {
        "id": "73d9e3a2.f74a0c",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'You have check-in, do you mean to check-out?'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 880,
        "wires": [
            [
                "2ba9687.1163298"
            ]
        ]
    },
    {
        "id": "2ba9687.1163298",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 720,
        "y": 880,
        "wires": []
    },
    {
        "id": "f140a500.569078",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 920,
        "wires": [
            [
                "5dd5e95d.017048"
            ]
        ]
    },
    {
        "id": "5dd5e95d.017048",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 720,
        "y": 920,
        "wires": []
    },
    {
        "id": "c299acdc.56d4",
        "type": "switch",
        "z": "1d31ea65.003676",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 1140,
        "wires": [
            [
                "9319f99a.9053c8"
            ],
            [
                "66166ff3.4eb55"
            ],
            [
                "d1de211.2a1bfe"
            ]
        ]
    },
    {
        "id": "66166ff3.4eb55",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1140,
        "wires": [
            [
                "6310138f.dbf5dc"
            ]
        ]
    },
    {
        "id": "6310138f.dbf5dc",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 720,
        "y": 1140,
        "wires": []
    },
    {
        "id": "d1de211.2a1bfe",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'You cannot check-out without check-in, do you mean to check-in?'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 1180,
        "wires": [
            [
                "5315827a.dd743c"
            ]
        ]
    },
    {
        "id": "5315827a.dd743c",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 720,
        "y": 1180,
        "wires": []
    },
    {
        "id": "9319f99a.9053c8",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\nlet inMilliseconds = +new Date(data.in_timestamp)\nlet inHours = Math.floor((inMilliseconds / (1000 * 60 * 60)) % 24)\nlet inMinutes = Math.floor((inMilliseconds / (1000 * 60)) % 60)\nlet outMilliseconds = +new Date(msg.original.timestamp)\nlet outHours = Math.floor((outMilliseconds / (1000 * 60 * 60)) % 24)\nlet outMinutes = Math.floor((outMilliseconds / (1000 * 60)) % 60)\n\ndata['out_submitted_date'] = new Date()\ndata['out_timestamp'] = msg.original.timestamp\ndata['incomplete'] = false\ndata['total_hours'] = outHours - inHours\ndata['total_minutes'] = outMinutes - inMinutes\n\nif (msg.original.temperature) {\n    data['out_temp'] = msg.original.temperature\n}\nif (msg.original.comment) {\n    data['out_comment'] = msg.original.comment\n}\n\nmsg.payload = data\nmsg.original = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 1100,
        "wires": [
            [
                "e3e02647.f49ad8"
            ]
        ]
    },
    {
        "id": "e3e02647.f49ad8",
        "type": "cloudantplus out",
        "z": "1d31ea65.003676",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 730,
        "y": 1100,
        "wires": [
            [
                "54854e49.a4ce5"
            ]
        ]
    },
    {
        "id": "54854e49.a4ce5",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 900,
        "y": 1100,
        "wires": []
    },
    {
        "id": "be976414.261808",
        "type": "subflow:9baa67b7.6ef658",
        "z": "1d31ea65.003676",
        "name": "",
        "env": [],
        "x": 270,
        "y": 1060,
        "wires": [
            [
                "c299acdc.56d4"
            ]
        ]
    },
    {
        "id": "922ed2f0.e6ec4",
        "type": "subflow:9baa67b7.6ef658",
        "z": "1d31ea65.003676",
        "name": "",
        "env": [],
        "x": 270,
        "y": 840,
        "wires": [
            [
                "32695b08.030cc4"
            ]
        ]
    },
    {
        "id": "2ddd4603.9befea",
        "type": "switch",
        "z": "1d31ea65.003676",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 700,
        "wires": [
            [
                "d0867a69.ece2c8"
            ],
            [
                "d1fe08dc.4989a8"
            ],
            [
                "53d3de95.9c8da"
            ]
        ]
    },
    {
        "id": "d1fe08dc.4989a8",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 700,
        "wires": [
            [
                "c855ea69.255f38"
            ]
        ]
    },
    {
        "id": "c855ea69.255f38",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 720,
        "y": 700,
        "wires": []
    },
    {
        "id": "53d3de95.9c8da",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'You cannot check-out without check-in, do you mean to check-in?'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 740,
        "wires": [
            [
                "b78b6258.62ab8"
            ]
        ]
    },
    {
        "id": "b78b6258.62ab8",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 720,
        "y": 740,
        "wires": []
    },
    {
        "id": "d0867a69.ece2c8",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\nlet inMilliseconds = +new Date(data.in_timestamp)\nlet inHours = Math.floor((inMilliseconds / (1000 * 60 * 60)) % 24)\nlet inMinutes = Math.floor((inMilliseconds / (1000 * 60)) % 60)\nlet outMilliseconds = +new Date(msg.original.timestamp)\nlet outHours = Math.floor((outMilliseconds / (1000 * 60 * 60)) % 24)\nlet outMinutes = Math.floor((outMilliseconds / (1000 * 60)) % 60)\n\ndata['out_submitted_date'] = new Date()\ndata['out_timestamp'] = msg.original.timestamp\ndata['out_id'] =msg.attendanceId\ndata['incomplete'] = false\ndata['total_hours'] = outHours - inHours\ndata['total_minutes'] = outMinutes - inMinutes\nif(data.out_deleted){\n    delete data.out_deleted;\n}\nif (msg.original.temperature) {\n    data['out_temp'] = msg.original.temperature\n}\nif (msg.original.comment) {\n    data['out_comment'] = msg.original.comment\n}\n\nmsg.payload = data\nmsg.original = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 660,
        "wires": [
            [
                "89f1ebde.6f8ec8"
            ]
        ]
    },
    {
        "id": "89f1ebde.6f8ec8",
        "type": "cloudantplus out",
        "z": "1d31ea65.003676",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 730,
        "y": 660,
        "wires": [
            [
                "d8c39492.aaaae8"
            ]
        ]
    },
    {
        "id": "c4c50b02.f7a2a8",
        "type": "subflow:9baa67b7.6ef658",
        "z": "1d31ea65.003676",
        "name": "",
        "env": [],
        "x": 270,
        "y": 620,
        "wires": [
            [
                "2ddd4603.9befea"
            ]
        ]
    },
    {
        "id": "55476002.3bf32",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "set attendance type",
        "func": "msg.attendanceId = msg.cloudant.id\nmsg.payload = \"normal\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 580,
        "wires": [
            [
                "c4c50b02.f7a2a8"
            ]
        ]
    },
    {
        "id": "d8c39492.aaaae8",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 900,
        "y": 660,
        "wires": []
    },
    {
        "id": "1932332a.53d05d",
        "type": "link in",
        "z": "1d31ea65.003676",
        "name": "",
        "links": [
            "fc13a67b.c8aec8"
        ],
        "x": 75,
        "y": 580,
        "wires": [
            [
                "55476002.3bf32"
            ]
        ]
    },
    {
        "id": "fc13a67b.c8aec8",
        "type": "link out",
        "z": "1d31ea65.003676",
        "name": "from check out",
        "links": [
            "1932332a.53d05d"
        ],
        "x": 455,
        "y": 100,
        "wires": []
    },
    {
        "id": "efa18c15.11364",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "set attendance type",
        "func": "msg.payload = \"lunch\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 800,
        "wires": [
            [
                "922ed2f0.e6ec4"
            ]
        ]
    },
    {
        "id": "f8273bd7.320978",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "set attendance type",
        "func": "msg.payload = \"lunch\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 1020,
        "wires": [
            [
                "be976414.261808"
            ]
        ]
    },
    {
        "id": "8348a72a.18ed78",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "structure data",
        "func": "let data = {}\n\ndata['doc_type'] = 'attendance'\ndata['type'] = 'normal'\ndata['tenant'] = msg.req.params.tenant\ndata['line'] = msg.req.params.line\ndata['form'] = msg.req.params.form\n// data['username'] = msg.protengaUser.username\ndata['in_submitted_date'] = new Date()\ndata['in_timestamp'] = msg.original.timestamp\ndata['in_id'] = msg.attendanceId\ndata['user_level'] = msg.protengaUser.level\ndata['user_facility'] = msg.protengaUser.facility\ndata['incomplete'] = true\n\nif (msg.original.temperature) {\n    data['in_temp'] = msg.original.temperature\n}\nif (msg.original.comment) {\n    data['in_comment'] = msg.original.comment\n}\nlet metadata = flow.get(\"$parent.metadata\");\nmsg.payload = {...data, ...metadata}\nmsg.original = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 520,
        "wires": [
            [
                "2d442cad.29d754"
            ]
        ]
    },
    {
        "id": "2d442cad.29d754",
        "type": "cloudantplus out",
        "z": "1d31ea65.003676",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 930,
        "y": 520,
        "wires": [
            [
                "57beadf4.0d2444"
            ]
        ]
    },
    {
        "id": "57beadf4.0d2444",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1100,
        "y": 520,
        "wires": []
    },
    {
        "id": "117d58d7.fe4c67",
        "type": "switch",
        "z": "1d31ea65.003676",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 480,
        "wires": [
            [
                "1d39b8b8.d7a427"
            ],
            [
                "2847aa47.54f346"
            ],
            [
                "8d2eb6f1.22a188"
            ]
        ]
    },
    {
        "id": "1d39b8b8.d7a427",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'You have check-in, do you mean to check-out?'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 440,
        "wires": [
            [
                "16408a34.f29856"
            ]
        ]
    },
    {
        "id": "16408a34.f29856",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 720,
        "y": 440,
        "wires": []
    },
    {
        "id": "2847aa47.54f346",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 480,
        "wires": [
            [
                "de49a5c0.beebc8"
            ]
        ]
    },
    {
        "id": "de49a5c0.beebc8",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 720,
        "y": 480,
        "wires": []
    },
    {
        "id": "dbd22a5b.dceba8",
        "type": "subflow:9baa67b7.6ef658",
        "z": "1d31ea65.003676",
        "name": "",
        "env": [],
        "x": 270,
        "y": 400,
        "wires": [
            [
                "117d58d7.fe4c67"
            ]
        ]
    },
    {
        "id": "39969478.e09b9c",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "set attendance type",
        "func": "msg.attendanceId = msg.cloudant.id\nmsg.payload = \"normal\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 360,
        "wires": [
            [
                "dbd22a5b.dceba8"
            ]
        ]
    },
    {
        "id": "2cfe199e.48af06",
        "type": "link out",
        "z": "1d31ea65.003676",
        "name": "from check in",
        "links": [
            "b01e5946.2d2bb8"
        ],
        "x": 455,
        "y": 60,
        "wires": []
    },
    {
        "id": "a6acdd67.e2079",
        "type": "link out",
        "z": "1d31ea65.003676",
        "name": "from lunch check in",
        "links": [
            "cbb9bdcc.8c799"
        ],
        "x": 455,
        "y": 140,
        "wires": []
    },
    {
        "id": "b45c287c.68f6d8",
        "type": "link out",
        "z": "1d31ea65.003676",
        "name": "from lunch check out",
        "links": [
            "25718a21.afdb46"
        ],
        "x": 455,
        "y": 180,
        "wires": []
    },
    {
        "id": "b01e5946.2d2bb8",
        "type": "link in",
        "z": "1d31ea65.003676",
        "name": "",
        "links": [
            "2cfe199e.48af06"
        ],
        "x": 75,
        "y": 360,
        "wires": [
            [
                "39969478.e09b9c"
            ]
        ]
    },
    {
        "id": "d33739af.175df8",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'That attendance was not defined.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 220,
        "wires": [
            [
                "fea28b3b.191258"
            ]
        ]
    },
    {
        "id": "fea28b3b.191258",
        "type": "http response",
        "z": "1d31ea65.003676",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 300,
        "y": 260,
        "wires": []
    },
    {
        "id": "cbb9bdcc.8c799",
        "type": "link in",
        "z": "1d31ea65.003676",
        "name": "",
        "links": [
            "a6acdd67.e2079"
        ],
        "x": 75,
        "y": 800,
        "wires": [
            [
                "efa18c15.11364"
            ]
        ]
    },
    {
        "id": "25718a21.afdb46",
        "type": "link in",
        "z": "1d31ea65.003676",
        "name": "",
        "links": [
            "b45c287c.68f6d8"
        ],
        "x": 75,
        "y": 1020,
        "wires": [
            [
                "f8273bd7.320978"
            ]
        ]
    },
    {
        "id": "d008ae7d.b1d54",
        "type": "comment",
        "z": "1d31ea65.003676",
        "name": "check-in, check-out, lunch check-in, lunch check-out",
        "info": "",
        "x": 250,
        "y": 320,
        "wires": []
    },
    {
        "id": "8d2eb6f1.22a188",
        "type": "function",
        "z": "1d31ea65.003676",
        "name": "prepare user data",
        "func": "// var protengaUser = msg.protengaUser\n// var user = {}\n\n// for (const key in protengaUser) {\n//     const value = protengaUser[key]\n//     const newKey = 'user_' + key\n//     user[newKey] = value\n// }\n// delete user.user__id;\n// msg.payload = user\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 520,
        "wires": [
            [
                "8348a72a.18ed78"
            ]
        ]
    },
    {
        "id": "efd72965.f26788",
        "type": "function",
        "z": "de627760.7d84c8",
        "name": "Prepare payload for split",
        "func": "var loopField = \"eggTrapList\";\nvar result = [];\n\nmsg.payload[loopField].forEach(one => {\n    for(var outer in msg.payload) {\n        if (outer != loopField) {\n            one[outer] = msg.payload[outer];\n        }\n    }\n    \n    result.push(one);\n});\n\nmsg.payload = result;\nmsg.original1 = msg.original;\nmsg.original = result\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "916b4bd6.49f028"
            ]
        ]
    },
    {
        "id": "6e9cc819.5c30c8",
        "type": "function",
        "z": "de627760.7d84c8",
        "name": "Query",
        "func": "let query = { key: [] }\nquery.key.push(msg.req.params.tenant);\nif(msg.original.workstationForm == \"eggTrapList\"){\n    query.key.push(msg.payload.matingChamber);\n}\nquery.key.push(msg.payload.eggTrapId);\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 180,
        "wires": [
            [
                "d0f6b37d.2d089"
            ]
        ]
    },
    {
        "id": "43903186.73905",
        "type": "cloudantplus in",
        "z": "de627760.7d84c8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "forms",
        "index": "egg-trap-incomplete",
        "x": 590,
        "y": 180,
        "wires": [
            [
                "8a379086.4ff87"
            ]
        ]
    },
    {
        "id": "8b4add4d.0119a",
        "type": "function",
        "z": "de627760.7d84c8",
        "name": "Get base data back",
        "func": "msg.original.eggTrapOutId = msg.payload.id;\nmsg.payload = msg.original;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 60,
        "wires": [
            [
                "efd72965.f26788"
            ]
        ]
    },
    {
        "id": "8a379086.4ff87",
        "type": "switch",
        "z": "de627760.7d84c8",
        "name": "hasResults",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 300,
        "wires": [
            [
                "2e37c05f.66e25"
            ],
            []
        ]
    },
    {
        "id": "2e37c05f.66e25",
        "type": "function",
        "z": "de627760.7d84c8",
        "name": "Modify and Construct measurement data",
        "func": "let splitPosition = msg.parts.index;\nlet record = msg.payload[0].value;\n\nrecord.eggTrapOutSubmittedDate = new Date();\nrecord.eggTrapOutTimestamp = msg.original1.timestamp;\nrecord.eggTrapOutId = msg.original1.eggTrapOutId;\nrecord.finalWeight = msg.original1.eggTrapList[splitPosition].finalWeight;\nrecord.collectionWeight = msg.original1.eggTrapList[splitPosition].finalWeight - record.initialWeight;\nrecord.incomplete = false;\n\nmsg.payload = record;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 300,
        "wires": [
            [
                "55b11be4.0c8144",
                "1b669269.caa71e"
            ]
        ]
    },
    {
        "id": "55b11be4.0c8144",
        "type": "cloudantplus out",
        "z": "de627760.7d84c8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 630,
        "y": 360,
        "wires": [
            []
        ]
    },
    {
        "id": "916b4bd6.49f028",
        "type": "split",
        "z": "de627760.7d84c8",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 120,
        "wires": [
            [
                "6e9cc819.5c30c8"
            ]
        ]
    },
    {
        "id": "ffe33076.7220e",
        "type": "cloudantplus in",
        "z": "de627760.7d84c8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "egg-collection",
        "index": "egg-collection",
        "x": 150,
        "y": 280,
        "wires": [
            [
                "8a379086.4ff87"
            ]
        ]
    },
    {
        "id": "d0f6b37d.2d089",
        "type": "switch",
        "z": "de627760.7d84c8",
        "name": "",
        "property": "req.params.form",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "egg-trap-in",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 180,
        "wires": [
            [
                "43903186.73905"
            ],
            [
                "ffe33076.7220e"
            ]
        ]
    },
    {
        "id": "1b669269.caa71e",
        "type": "join",
        "z": "de627760.7d84c8",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 930,
        "y": 260,
        "wires": [
            [
                "60635958.85d7b8"
            ]
        ]
    },
    {
        "id": "60635958.85d7b8",
        "type": "change",
        "z": "de627760.7d84c8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "a8302fa6.c381d",
        "type": "function",
        "z": "16945ecf.1ccd51",
        "name": "prepare for split",
        "func": "var loopField = \"eggTrapList\";\nvar result = [];\n\nmsg.payload[loopField].forEach(one => {\n    for(var outer in msg.payload) {\n        if (outer != loopField) {\n            one[outer] = msg.payload[outer];\n        }\n    }\n    \n    one.incomplete = true;\n    result.push(one);\n});\n\nmsg.payload = result;\nmsg.original = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 60,
        "wires": [
            [
                "4d69af0b.28124"
            ]
        ]
    },
    {
        "id": "4d69af0b.28124",
        "type": "split",
        "z": "16945ecf.1ccd51",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 290,
        "y": 120,
        "wires": [
            [
                "166fe7e7.55bbf8"
            ]
        ]
    },
    {
        "id": "166fe7e7.55bbf8",
        "type": "cloudantplus out",
        "z": "16945ecf.1ccd51",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 510,
        "y": 120,
        "wires": [
            [
                "7b88f15a.9925"
            ]
        ]
    },
    {
        "id": "c0ed2b38.15af88",
        "type": "function",
        "z": "16945ecf.1ccd51",
        "name": "get base data back",
        "func": "if(msg.original.workstationForm == \"egg-trap-in\"){\n    msg.original.docType = \"eggTrapList\";\n}\nelse{\n    msg.original.docType = \"collectionEggTrapList\";\n}\nmsg.original.eggTrapInSubmittedDate = new Date();\nmsg.original.eggTrapInTimestamp = msg.original.timestamp;\nmsg.original.eggTrapInId = msg.payload.id;\n\n// Avoid clutters in DB\ndelete msg.original.workstationForm;\ndelete msg.original.timestamp;\ndelete msg.original.dataRecord;\nlet metadata = flow.get(\"$parent.metadata\");\nmsg.payload = {...msg.original, ...metadata};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 60,
        "wires": [
            [
                "a8302fa6.c381d"
            ]
        ]
    },
    {
        "id": "7b88f15a.9925",
        "type": "join",
        "z": "16945ecf.1ccd51",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 730,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "beda4644.24cb28",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Universal form",
        "info": "",
        "x": 250,
        "y": 440,
        "wires": []
    },
    {
        "id": "dd95f389.ac1f8",
        "type": "http in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "url": "api/:tenant/forms/:line/:form",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 480,
        "wires": [
            [
                "7b7d19af.45ee88"
            ]
        ]
    },
    {
        "id": "2f632499.29de5c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "prepare master data",
        "func": "var data = msg.payload;\nvar dailyIndex = flow.get(\"dailyIndex\") || 0;\ndata.tenant = msg.req.params.tenant;\ndata.type = msg.req.params.line\ndata.productionLine = data.type\ndata.workstationForm = msg.req.params.form;\ndata.dataRecord = true;\ndata.user = msg.token; // msg.token contains all user data\n\n//Set total neonate sum if form submitted is nursery setup\nif(data.workstationForm == \"nursery-setup\" && data.productionLine ==\"breeding\"){\n    data.totalNeonateSum = Math.round((data.neonatePerTray * data.nurseryTraysCount) * 10) / 10 ;\n}\n\n\n//metadata\n// let updateCount = 1;\n// if(msg.form.updateCount){\n//     updateCount = msg.form.updateCount;\n// }\n// var formVersionDate = new Date(msg.form.updatedOn);\n// let formVersion = formVersionDate.getFullYear().toString().substring(2,4)+\n// (\"0\"+(formVersionDate.getMonth() +1).toString()).slice(-2)+\n// (\"0\"+formVersionDate.getDate().toString()).slice(-2)+ \"-\"+ (\"0\"+updateCount.toString()).slice(-2);\n\n//store metadata to flow\nvar metadata = {\n    daily_index: dailyIndex,\n    device_id: msg.payload.device_id,\n    device_ip: msg.req.headers[\"x-forwarded-for\"],\n    facility_id: msg.payload.facility_id,\n    user_name: msg.token.name,\n    user_id: msg.token.username,\n    form_id: msg.form._id,\n    form_version: msg.payload.form_version,\n    processDocument: msg.payload.processDocument,\n    submission_timestamp: msg.timestamp,\n    description: msg.payload.description,\n};\nflow.set(\"metadata\", metadata);\n\n//update daily index\ndailyIndex = dailyIndex +1;\nflow.set(\"dailyIndex\", dailyIndex);\n\n//Remove metadata from payload\ndelete data.device_id;\ndelete data.facility_id;\ndelete data.process_document;\ndelete data.form_version;\n\n\n// Removes critical user info\ndelete data.user.doc_type\ndelete data.user.password\ndelete data.user.access_id\n\n// To remove null values.\n// Eg. Comment field is optional.\nfor (var field in data) {\n    var value = data[field];\n    if (value === null) delete data[field]\n}\nmsg.original = data;\nmsg.protengaUser = data.user\ndelete data.user;\n//combine data and metadata\ndata = {...data, ...metadata};\nmsg.payload = data;\nmsg.masterData = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 240,
        "y": 820,
        "wires": [
            [
                "9dd268de.abbb08"
            ]
        ]
    },
    {
        "id": "9dd268de.abbb08",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "record master data",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 250,
        "y": 860,
        "wires": [
            [
                "cbf9e308.c475a",
                "58b9b9c7.233318"
            ]
        ]
    },
    {
        "id": "a0baf024.770f4",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 280,
        "y": 1040,
        "wires": []
    },
    {
        "id": "1b3ee24d.91896e",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Submission were accepted.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 1000,
        "wires": [
            [
                "a0baf024.770f4"
            ]
        ]
    },
    {
        "id": "58b9b9c7.233318",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "req.params.form",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "egg-trap-in",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "egg-collection-trap-in",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "egg-trap-out",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "egg-collection-trap-out",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "egg-collection-basic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "attendance",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "process-check-in-out",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "neonate-collection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup-basic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grow-out-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grow-out-harvest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nursery-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nursery-checkout",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-complete",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 17,
        "x": 470,
        "y": 900,
        "wires": [
            [
                "15a8feeb.f45681"
            ],
            [
                "15a8feeb.f45681"
            ],
            [
                "eb33d38c.32324"
            ],
            [
                "eb33d38c.32324"
            ],
            [
                "a48220b4.8e632",
                "5a6f3526.0d213c"
            ],
            [
                "806781de.b8845"
            ],
            [
                "e5cd35f9.ebab48"
            ],
            [
                "8c75ca12.660b48",
                "5a6f3526.0d213c"
            ],
            [
                "46b8973d.ae40c8",
                "5a6f3526.0d213c"
            ],
            [
                "46b8973d.ae40c8",
                "5a6f3526.0d213c",
                "64316f39.761c1"
            ],
            [
                "11114d3b.920753"
            ],
            [
                "aac1f1c0.369aa"
            ],
            [
                "de58f27b.c95d6"
            ],
            [
                "cf64000b.830ca",
                "7b09ed18.6e4904"
            ],
            [
                "7206af9c.dc1ab"
            ],
            [
                "cf788df4.8b745"
            ],
            [
                "4820b8b5.93eb88"
            ]
        ]
    },
    {
        "id": "389588f6.ed4fc8",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "processing form?",
        "property": "processingForm",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 960,
        "wires": [
            [
                "1b3ee24d.91896e"
            ]
        ]
    },
    {
        "id": "15a8feeb.f45681",
        "type": "subflow:16945ecf.1ccd51",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 770,
        "y": 760,
        "wires": [
            [
                "a48220b4.8e632",
                "6f627446.5dbdec"
            ]
        ]
    },
    {
        "id": "eb33d38c.32324",
        "type": "subflow:de627760.7d84c8",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 770,
        "y": 800,
        "wires": [
            [
                "a48220b4.8e632"
            ],
            [
                "6f627446.5dbdec"
            ]
        ]
    },
    {
        "id": "a48220b4.8e632",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "to Dashboard",
        "links": [
            "7dd76497.68c2bc",
            "d5cf9174.d3583"
        ],
        "x": 1035,
        "y": 860,
        "wires": []
    },
    {
        "id": "cbf9e308.c475a",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "checks for further processing forms",
        "func": "let forms = [\n    'egg-trap-in', \n    'egg-trap-out',\n    'egg-collection-trap-in',\n    'egg-collection-trap-out'\n]\n\nmsg.processingForm = forms.includes(msg.req.params.form)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 920,
        "wires": [
            [
                "389588f6.ed4fc8"
            ]
        ]
    },
    {
        "id": "806781de.b8845",
        "type": "subflow:1d31ea65.003676",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 710,
        "y": 840,
        "wires": [
            [
                "81f34411.b1bd38"
            ]
        ]
    },
    {
        "id": "97ddb7f2.b09688",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "dailyIndex",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            },
            {
                "t": "set",
                "p": "totalIn",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            },
            {
                "t": "set",
                "p": "totalOut",
                "pt": "flow",
                "to": "0",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 1220,
        "wires": [
            []
        ]
    },
    {
        "id": "bdea8f89.9494d",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 150,
        "y": 640,
        "wires": [
            [
                "34342991.74b1a6"
            ]
        ]
    },
    {
        "id": "418aaad8.398484",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.original = msg.payload;\n\nmsg.payload = { \"selector\": {\n    \"docType\": \"blueprint\",\n    \"tenant\": msg.req.params.tenant,\n    \"productionLine\":msg.req.params.line,\n    \"workstationForm\": msg.req.params.form\n     }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 560,
        "wires": [
            [
                "bdea8f89.9494d"
            ]
        ]
    },
    {
        "id": "34342991.74b1a6",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.form = msg.payload.docs[0]\nmsg.payload = msg.original;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 640,
        "wires": [
            [
                "2b15a75.3056658"
            ]
        ]
    },
    {
        "id": "2d11acb2.311894",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Reset Daily index at 00:00",
        "info": "",
        "x": 380,
        "y": 1180,
        "wires": []
    },
    {
        "id": "e5cd35f9.ebab48",
        "type": "subflow:a2be8459.a2cc78",
        "z": "3517e109.8c2a3e",
        "name": "process process check in/out",
        "env": [],
        "x": 700,
        "y": 880,
        "wires": [
            [
                "81f34411.b1bd38"
            ]
        ]
    },
    {
        "id": "5a6f3526.0d213c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Submission were accepted.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1830,
        "y": 1100,
        "wires": [
            [
                "3d814b05.08a6e4",
                "81f34411.b1bd38"
            ]
        ]
    },
    {
        "id": "3d814b05.08a6e4",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 2020,
        "y": 1100,
        "wires": []
    },
    {
        "id": "5298ec6.8a5ca14",
        "type": "moment",
        "z": "3517e109.8c2a3e",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 220,
        "y": 520,
        "wires": [
            [
                "418aaad8.398484"
            ]
        ]
    },
    {
        "id": "2b15a75.3056658",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "req.params.form",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "egg-collection-trap-out",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "egg-collection-trap-in",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup-basic",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grow-out-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grow-out-harvest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nursery-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nursery-checkout",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-complete",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 11,
        "x": 510,
        "y": 640,
        "wires": [
            [
                "34f8f0a.c31281"
            ],
            [
                "ffd968cf.d9ff48"
            ],
            [
                "40f0914e.c32ff"
            ],
            [
                "40f0914e.c32ff"
            ],
            [
                "50b154b.5c01bac"
            ],
            [
                "23538df7.efd5c2"
            ],
            [
                "c893e2c5.cdf9d"
            ],
            [
                "da6532b.d52e5d"
            ],
            [
                "60485709.f850e8"
            ],
            [
                "e0ab0b3d.306638"
            ],
            [
                "18ee2ae8.d4ffd5"
            ]
        ]
    },
    {
        "id": "cf112391.44d8b",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "egg-collection",
        "index": "egg-collection",
        "x": 3002,
        "y": 220,
        "wires": [
            [
                "6ccfcf29.b4ec2"
            ]
        ]
    },
    {
        "id": "2cfa4dc3.87ab32",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "msg.eggTrap = msg.payload;\nlet query = { key: [] }\nquery.key.push(msg.req.params.tenant);\nquery.key.push(msg.payload.eggTrapId);\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2862,
        "y": 220,
        "wires": [
            [
                "cf112391.44d8b"
            ]
        ]
    },
    {
        "id": "5f91db79.95f7c4",
        "type": "split",
        "z": "3517e109.8c2a3e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2742,
        "y": 220,
        "wires": [
            [
                "2cfa4dc3.87ab32"
            ]
        ]
    },
    {
        "id": "4e59447b.177d7c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Prepare for split",
        "func": "msg.original = msg.payload\nmsg.payload = msg.payload.eggTrapList\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2592,
        "y": 220,
        "wires": [
            [
                "5f91db79.95f7c4"
            ]
        ]
    },
    {
        "id": "de8ced9e.aa67e",
        "type": "join",
        "z": "3517e109.8c2a3e",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 3522,
        "y": 180,
        "wires": [
            [
                "99ecd8a9.9e34c8"
            ]
        ]
    },
    {
        "id": "26d3836c.e5f21c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Assign mating chamber",
        "func": "let payload = msg.eggTrap\npayload.matingChamber =msg.payload[0].value.matingChamber;\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3342,
        "y": 180,
        "wires": [
            [
                "de8ced9e.aa67e"
            ]
        ]
    },
    {
        "id": "6ccfcf29.b4ec2",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3142,
        "y": 220,
        "wires": [
            [
                "26d3836c.e5f21c"
            ],
            [
                "1c6b813a.36ed4f"
            ],
            [
                "4cba5544.31745c"
            ]
        ]
    },
    {
        "id": "81cafb98.2b5a88",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 3532,
        "y": 260,
        "wires": []
    },
    {
        "id": "4cba5544.31745c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"The egg trap does not have an egg trap in\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3342,
        "y": 260,
        "wires": [
            [
                "81cafb98.2b5a88"
            ]
        ]
    },
    {
        "id": "99ecd8a9.9e34c8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Check all egg traps have same mating chamber",
        "func": "let matingChamber = msg.payload[0].matingChamber;\nlet totalOut = flow.get('totalOut') || 0;\nfor(let eggTrap of msg.payload){\n    if(eggTrap.matingChamber != matingChamber){\n        msg.haveDifferent = true;\n        break;\n    }\n    totalOut = totalOut + eggTrap.finalWeight;\n}\nif(!msg.haveDifferent){\n    flow.set('totalOut', totalOut);\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3492,
        "y": 120,
        "wires": [
            [
                "c1732228.8a177"
            ]
        ]
    },
    {
        "id": "c1732228.8a177",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "haveDifferent",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3762,
        "y": 120,
        "wires": [
            [
                "d1b6ee04.08c23"
            ],
            [
                "51748324.83b70c"
            ]
        ]
    },
    {
        "id": "11289894.5d7437",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 3992,
        "y": 60,
        "wires": []
    },
    {
        "id": "d1b6ee04.08c23",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Egg trap list contains egg trap from other mating chamber\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3782,
        "y": 60,
        "wires": [
            [
                "11289894.5d7437"
            ]
        ]
    },
    {
        "id": "51748324.83b70c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Prepare payload",
        "func": "msg.original.matingChamber = msg.payload[0].matingChamber;\nmsg.original.eggTrapList = msg.payload;\nmsg.payload = msg.original;\nlet totalOut = flow.get('totalOut') || 0;\nlet totalIn = flow.get('totalIn') || 0;\nmsg.payload.totalEggSum = Math.round((totalOut - totalIn) * 10) / 10 ;\nif(msg.payload.totalEggSum < 0){\n    msg.payload.totalEggSum = 0;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3832,
        "y": 200,
        "wires": [
            [
                "63118017.ba86a"
            ]
        ]
    },
    {
        "id": "1c6b813a.36ed4f",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 egg trap found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3342,
        "y": 220,
        "wires": [
            [
                "845e4992.fe7bb8"
            ]
        ]
    },
    {
        "id": "845e4992.fe7bb8",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3532,
        "y": 220,
        "wires": []
    },
    {
        "id": "ffd968cf.d9ff48",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Calculate total in",
        "func": "let totalIn = flow.get('totalIn') || 0;\nfor(let eggTrap of msg.payload.eggTrapList){\n    totalIn = totalIn + eggTrap.initialWeight;\n}\nflow.set('totalIn', totalIn);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 890,
        "y": 580,
        "wires": [
            [
                "451d5e57.47e3d"
            ]
        ]
    },
    {
        "id": "66e984b5.fb878c",
        "type": "switch",
        "z": "74e69b13.a82ff4",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 350,
        "y": 160,
        "wires": [
            [
                "5768de45.ee62b"
            ],
            [
                "d03b8516.401858"
            ],
            [
                "6ad8333a.dbf2dc"
            ]
        ]
    },
    {
        "id": "f1e3336e.b1ace",
        "type": "http response",
        "z": "74e69b13.a82ff4",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 800,
        "y": 120,
        "wires": []
    },
    {
        "id": "43423db4.2d0e04",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Populate matingChamber in egg collection trap out",
        "info": "",
        "x": 2852,
        "y": 160,
        "wires": []
    },
    {
        "id": "63118017.ba86a",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "prepare master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 3997,
        "y": 200,
        "wires": []
    },
    {
        "id": "e4bd7dfc.2969f",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "populate mating chamber",
        "links": [
            "34f8f0a.c31281"
        ],
        "x": 2357,
        "y": 220,
        "wires": [
            [
                "4e59447b.177d7c"
            ]
        ]
    },
    {
        "id": "34f8f0a.c31281",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "populate mating chamber",
        "links": [
            "e4bd7dfc.2969f"
        ],
        "x": 655,
        "y": 580,
        "wires": []
    },
    {
        "id": "40f0914e.c32ff",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "set expected batchId",
        "links": [
            "38a6aef6.fa7c42",
            "31ada63.4da3e5a",
            "367002ee.e7be0e"
        ],
        "x": 695,
        "y": 600,
        "wires": []
    },
    {
        "id": "6450b038.a9169",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "prepare master data",
        "links": [
            "63118017.ba86a",
            "257c6da4.9b30b2",
            "22e56176.8c34be",
            "9588a5d2.412418",
            "9312a79d.0014b8",
            "3e37871e.6e65f8",
            "70c1143d.fc843c",
            "51e5e1a9.dc7d4",
            "259d9fa2.e8541",
            "451d5e57.47e3d",
            "e25dfbe5.827728",
            "35f2371b.2c1428",
            "e245e253.6a88f",
            "1fda1da6.b31a82",
            "4206f1b.525831",
            "66f5d34a.c8b0ec",
            "67a6479a.53a268",
            "75474902.50d0e8",
            "6655827a.9eb7cc",
            "b8ac9fc5.4743b",
            "57da022a.e7705c",
            "4df38e9a.797ea",
            "d9a1b13c.28d84",
            "d013d1d.406f93"
        ],
        "x": 75,
        "y": 820,
        "wires": [
            [
                "2f632499.29de5c"
            ]
        ]
    },
    {
        "id": "e2886f7d.1a373",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Skip Form",
        "func": "let productionLine = msg.req.params.line;\nlet workstationForm = msg.req.params.form;\nlet skipForms = {\n    \"farming\":[\"attendance\"]\n}\nif(skipForms[productionLine]){\nif(skipForms[productionLine].includes(workstationForm)){\n    msg.skipForms = true;\n}\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2532,
        "y": 560,
        "wires": [
            [
                "404eb98d.ebfc78"
            ]
        ]
    },
    {
        "id": "404eb98d.ebfc78",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "skipForms",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2672,
        "y": 560,
        "wires": [
            [
                "79643d94.62d244"
            ],
            [
                "3e37871e.6e65f8"
            ]
        ]
    },
    {
        "id": "8db8ca5f.6ee2e8",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "attendance action?",
        "property": "original.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "CHECK_IN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CHECK_OUT",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CHECK_IN_LUNCH",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CHECK_OUT_LUNCH",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 5,
        "x": 3132,
        "y": 500,
        "wires": [
            [
                "12ab92c2.4570cd"
            ],
            [
                "4517c37f.d303bc"
            ],
            [],
            [
                "98c491e6.7d521"
            ],
            [
                "1719e81e.1d8628"
            ]
        ]
    },
    {
        "id": "bbe9e6ec.83fdd8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.original = msg.payload;\nmsg.protengaUser = msg.token\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2942,
        "y": 520,
        "wires": [
            [
                "8db8ca5f.6ee2e8"
            ]
        ]
    },
    {
        "id": "b63987b.59fbf78",
        "type": "subflow:9baa67b7.6ef658",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 3572,
        "y": 460,
        "wires": [
            [
                "e5a75cdf.aa8e7"
            ]
        ]
    },
    {
        "id": "79643d94.62d244",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "req.params.form",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "attendance",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2812,
        "y": 540,
        "wires": [
            [
                "bbe9e6ec.83fdd8"
            ],
            []
        ]
    },
    {
        "id": "12ab92c2.4570cd",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "normal",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3342,
        "y": 460,
        "wires": [
            [
                "b63987b.59fbf78"
            ]
        ]
    },
    {
        "id": "98c491e6.7d521",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lunch",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3342,
        "y": 540,
        "wires": [
            [
                "7cdc2ba.20e63d4"
            ]
        ]
    },
    {
        "id": "e5a75cdf.aa8e7",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3792,
        "y": 440,
        "wires": [
            [
                "d8df91fc.337f3"
            ],
            [
                "cd5a9337.38941"
            ],
            [
                "c6109f18.4e0b2"
            ]
        ]
    },
    {
        "id": "9588a5d2.412418",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "prepare master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 4555,
        "y": 520,
        "wires": []
    },
    {
        "id": "6f13163f.0a9ae8",
        "type": "subflow:9baa67b7.6ef658",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 3572,
        "y": 500,
        "wires": [
            [
                "1e4e7669.771dfa"
            ]
        ]
    },
    {
        "id": "4517c37f.d303bc",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "normal",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3342,
        "y": 500,
        "wires": [
            [
                "6f13163f.0a9ae8"
            ]
        ]
    },
    {
        "id": "1e4e7669.771dfa",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3792,
        "y": 500,
        "wires": [
            [
                "c6109f18.4e0b2"
            ],
            [
                "ca1df87c.a7dd48"
            ],
            [
                "3bf695cd.8ee6ca"
            ]
        ]
    },
    {
        "id": "7cdc2ba.20e63d4",
        "type": "subflow:9baa67b7.6ef658",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 3572,
        "y": 540,
        "wires": [
            [
                "cd9b64a7.912df8"
            ]
        ]
    },
    {
        "id": "1719e81e.1d8628",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "lunch",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3342,
        "y": 580,
        "wires": [
            [
                "892da734.69de48"
            ]
        ]
    },
    {
        "id": "892da734.69de48",
        "type": "subflow:9baa67b7.6ef658",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 3572,
        "y": 580,
        "wires": [
            [
                "c317530f.804e9"
            ]
        ]
    },
    {
        "id": "cd9b64a7.912df8",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3792,
        "y": 560,
        "wires": [
            [
                "d8df91fc.337f3"
            ],
            [
                "cd5a9337.38941"
            ],
            [
                "c6109f18.4e0b2"
            ]
        ]
    },
    {
        "id": "c317530f.804e9",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3792,
        "y": 620,
        "wires": [
            [
                "c6109f18.4e0b2"
            ],
            [
                "ca1df87c.a7dd48"
            ],
            [
                "3bf695cd.8ee6ca"
            ]
        ]
    },
    {
        "id": "a80fbb4d.5f0768",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "check skip form",
        "links": [
            "18ee2ae8.d4ffd5"
        ],
        "x": 2357,
        "y": 560,
        "wires": [
            [
                "e2886f7d.1a373"
            ]
        ]
    },
    {
        "id": "18ee2ae8.d4ffd5",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "check skip form",
        "links": [
            "a80fbb4d.5f0768"
        ],
        "x": 975,
        "y": 740,
        "wires": []
    },
    {
        "id": "3e37871e.6e65f8",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "prepare master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 2797,
        "y": 600,
        "wires": []
    },
    {
        "id": "d8df91fc.337f3",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'You have check-in, do you mean to check-out?'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4092,
        "y": 420,
        "wires": [
            [
                "8e07ded2.516f"
            ]
        ]
    },
    {
        "id": "8e07ded2.516f",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 4282,
        "y": 420,
        "wires": []
    },
    {
        "id": "cd5a9337.38941",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4092,
        "y": 460,
        "wires": [
            [
                "397fecf5.0b8124"
            ]
        ]
    },
    {
        "id": "397fecf5.0b8124",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 4282,
        "y": 460,
        "wires": []
    },
    {
        "id": "ca1df87c.a7dd48",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4092,
        "y": 580,
        "wires": [
            [
                "178e6dca.c07312"
            ]
        ]
    },
    {
        "id": "178e6dca.c07312",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 4282,
        "y": 580,
        "wires": []
    },
    {
        "id": "3bf695cd.8ee6ca",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'You cannot check-out without check-in, do you mean to check-in?'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4092,
        "y": 620,
        "wires": [
            [
                "a3e41f1f.95fe3"
            ]
        ]
    },
    {
        "id": "a3e41f1f.95fe3",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 4282,
        "y": 620,
        "wires": []
    },
    {
        "id": "d90911d4.2457f",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Prevent write to database for attendance form",
        "info": "",
        "x": 2592,
        "y": 500,
        "wires": []
    },
    {
        "id": "c6109f18.4e0b2",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4082,
        "y": 520,
        "wires": [
            [
                "e00f751.4a05c88"
            ]
        ]
    },
    {
        "id": "31ebb25e.b27a9e",
        "type": "http response",
        "z": "74e69b13.a82ff4",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 760,
        "y": 200,
        "wires": []
    },
    {
        "id": "6ad8333a.dbf2dc",
        "type": "function",
        "z": "74e69b13.a82ff4",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Cant find select option\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 200,
        "wires": [
            [
                "31ebb25e.b27a9e"
            ]
        ]
    },
    {
        "id": "d03b8516.401858",
        "type": "function",
        "z": "74e69b13.a82ff4",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "54b74ddd.549614"
            ]
        ]
    },
    {
        "id": "54b74ddd.549614",
        "type": "http response",
        "z": "74e69b13.a82ff4",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 760,
        "y": 160,
        "wires": []
    },
    {
        "id": "8c75ca12.660b48",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "links": [
            "f906724.1724d9"
        ],
        "x": 995,
        "y": 920,
        "wires": []
    },
    {
        "id": "46b8973d.ae40c8",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "links": [
            "287b9a0.17e8b66"
        ],
        "x": 1115,
        "y": 940,
        "wires": []
    },
    {
        "id": "cf64000b.830ca",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "links": [
            "233325c7.39c59a"
        ],
        "x": 995,
        "y": 1000,
        "wires": []
    },
    {
        "id": "ace96859.342198",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload.expectedBatchId = msg.expectedBatchId;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2440,
        "y": 780,
        "wires": [
            [
                "a421203f.8bb38"
            ]
        ]
    },
    {
        "id": "175fffe9.7f373",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 2730,
        "y": 780,
        "wires": [
            [
                "486fd3f6.da3b8c"
            ]
        ]
    },
    {
        "id": "a421203f.8bb38",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "msg.original = msg.payload;\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"breedingGrowOutSetupRackId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2590,
        "y": 780,
        "wires": [
            [
                "175fffe9.7f373"
            ]
        ]
    },
    {
        "id": "486fd3f6.da3b8c",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2430,
        "y": 840,
        "wires": [
            [
                "be56181a.bd5408"
            ],
            [
                "d04facfc.2cd99"
            ],
            [
                "f92451cb.c441f"
            ]
        ]
    },
    {
        "id": "54953f72.62dfd",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 2900,
        "y": 940,
        "wires": []
    },
    {
        "id": "f92451cb.c441f",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2670,
        "y": 940,
        "wires": [
            [
                "54953f72.62dfd"
            ]
        ]
    },
    {
        "id": "d04facfc.2cd99",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2670,
        "y": 880,
        "wires": [
            [
                "cb4757c4.8e3588"
            ]
        ]
    },
    {
        "id": "cb4757c4.8e3588",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 2880,
        "y": 880,
        "wires": []
    },
    {
        "id": "6b7c94e1.7d483c",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "Grow out setup",
        "links": [
            "50b154b.5c01bac"
        ],
        "x": 2355,
        "y": 740,
        "wires": [
            [
                "cc778684.2681f8"
            ]
        ]
    },
    {
        "id": "50b154b.5c01bac",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "Grow out setup",
        "links": [
            "6b7c94e1.7d483c",
            "77a8410.90486c"
        ],
        "x": 735,
        "y": 620,
        "wires": []
    },
    {
        "id": "70c1143d.fc843c",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "prepare master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 4475,
        "y": 740,
        "wires": []
    },
    {
        "id": "5768de45.ee62b",
        "type": "function",
        "z": "74e69b13.a82ff4",
        "name": "",
        "func": "let value = msg.payload[0].value;\nconst rackId = msg.original.formValue.breedingGrowOutSetupRackId\nmsg.payload = {}\nif(value.options[rackId]){\n    if(value.options[rackId].growthChamberId && value.options[rackId].batchIdList){\n        msg.notFound = false;\n        msg.payload.fieldKey = msg.original.fieldKey\n        if(msg.original.fieldKey == \"growthChamberId\"){\n            msg.payload.fieldValue =value.options[rackId].growthChamberId;\n        }\n        else if(msg.original.fieldKey == \"batchId\"){\n            msg.payload.fieldValue =value.options[rackId].batchIdList;\n        }\n    }\n    else{\n        msg.notFound = true;\n    }\n}\nelse{\n    msg.notFound = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 100,
        "wires": [
            [
                "5e9c881f.e1f948"
            ]
        ]
    },
    {
        "id": "8fb2ab50.a73328",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "Grow out harvest",
        "links": [
            "23538df7.efd5c2"
        ],
        "x": 2355,
        "y": 1080,
        "wires": [
            [
                "2089735c.62192c"
            ]
        ]
    },
    {
        "id": "23538df7.efd5c2",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "Grow out harvest",
        "links": [
            "8fb2ab50.a73328",
            "11af3409.37881c"
        ],
        "x": 775,
        "y": 640,
        "wires": []
    },
    {
        "id": "c893e2c5.cdf9d",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "pupation emergence setup",
        "links": [
            "d7c890f6.7bf7c"
        ],
        "x": 815,
        "y": 660,
        "wires": []
    },
    {
        "id": "451d5e57.47e3d",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "prepare master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 1025,
        "y": 580,
        "wires": []
    },
    {
        "id": "cc778684.2681f8",
        "type": "moment",
        "z": "3517e109.8c2a3e",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "5",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "expectedBatchId",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 2540,
        "y": 740,
        "wires": [
            [
                "ace96859.342198"
            ]
        ]
    },
    {
        "id": "81f34411.b1bd38",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "To Slack API",
        "links": [
            "4474b340.522a4c",
            "16660b8c.6fb9a4",
            "6e4a1171.dbf84"
        ],
        "x": 1835,
        "y": 880,
        "wires": []
    },
    {
        "id": "6f627446.5dbdec",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "To Slack API",
        "links": [
            "4474b340.522a4c",
            "16660b8c.6fb9a4",
            "6e4a1171.dbf84"
        ],
        "x": 1015,
        "y": 760,
        "wires": []
    },
    {
        "id": "dcf096a3.685838",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 2970,
        "y": 780,
        "wires": [
            [
                "c7613b5d.20d358"
            ]
        ]
    },
    {
        "id": "b5e58316.94307",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"growthChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2870,
        "y": 840,
        "wires": [
            [
                "dcf096a3.685838"
            ]
        ]
    },
    {
        "id": "c7613b5d.20d358",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3050,
        "y": 840,
        "wires": [
            [
                "2a0185c5.51593a"
            ],
            [
                "faa71d2d.ea77"
            ],
            [
                "2580e91d.a92136"
            ]
        ]
    },
    {
        "id": "f52c9e28.bd2e3",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "occupied",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3650,
        "y": 800,
        "wires": [
            [
                "7ba91f95.e68cf"
            ],
            [
                "766a548d.17bafc"
            ]
        ]
    },
    {
        "id": "c501c02c.ae9c5",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 4010,
        "y": 740,
        "wires": [
            [
                "6319b8d7.974218"
            ]
        ]
    },
    {
        "id": "766a548d.17bafc",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message (Rack Occupied)",
        "func": "msg.payload = {\n    \"message\": msg.errorMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3860,
        "y": 880,
        "wires": [
            [
                "e232a0ec.e8bb8"
            ]
        ]
    },
    {
        "id": "be56181a.bd5408",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2670,
        "y": 840,
        "wires": [
            [
                "b5e58316.94307"
            ]
        ]
    },
    {
        "id": "2a0185c5.51593a",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3230,
        "y": 800,
        "wires": [
            [
                "658aafa.996d15"
            ]
        ]
    },
    {
        "id": "e232a0ec.e8bb8",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 4140,
        "y": 880,
        "wires": []
    },
    {
        "id": "49d54d04.8242c4",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3500,
        "y": 940,
        "wires": []
    },
    {
        "id": "2580e91d.a92136",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3290,
        "y": 940,
        "wires": [
            [
                "49d54d04.8242c4"
            ]
        ]
    },
    {
        "id": "faa71d2d.ea77",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3290,
        "y": 880,
        "wires": [
            [
                "4bbf4129.e5f62"
            ]
        ]
    },
    {
        "id": "4bbf4129.e5f62",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3500,
        "y": 880,
        "wires": []
    },
    {
        "id": "7ba91f95.e68cf",
        "type": "split",
        "z": "3517e109.8c2a3e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3710,
        "y": 740,
        "wires": [
            [
                "73cd8e88.43c2c"
            ]
        ]
    },
    {
        "id": "73cd8e88.43c2c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3840,
        "y": 740,
        "wires": [
            [
                "c501c02c.ae9c5"
            ]
        ]
    },
    {
        "id": "6319b8d7.974218",
        "type": "join",
        "z": "3517e109.8c2a3e",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 4150,
        "y": 740,
        "wires": [
            [
                "dc802115.be194"
            ]
        ]
    },
    {
        "id": "1cbae419.c0f98c",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Check Grow out Chamber and Rack Occupied",
        "info": "",
        "x": 2590,
        "y": 700,
        "wires": []
    },
    {
        "id": "4d860e64.fd54e",
        "type": "cloudantplus in",
        "z": "74e69b13.a82ff4",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 190,
        "y": 160,
        "wires": [
            [
                "66e984b5.fb878c"
            ]
        ]
    },
    {
        "id": "5e9c881f.e1f948",
        "type": "switch",
        "z": "74e69b13.a82ff4",
        "name": "",
        "property": "notFound",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 100,
        "wires": [
            [
                "1b12a5a8.8dff3a"
            ],
            [
                "f1e3336e.b1ace"
            ]
        ]
    },
    {
        "id": "965ac10a.ea431",
        "type": "http response",
        "z": "74e69b13.a82ff4",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1040,
        "y": 80,
        "wires": []
    },
    {
        "id": "1b12a5a8.8dff3a",
        "type": "function",
        "z": "74e69b13.a82ff4",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\":\"Cant find growth chamber Id and batchId for this rack.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 80,
        "wires": [
            [
                "965ac10a.ea431"
            ]
        ]
    },
    {
        "id": "2089735c.62192c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "msg.original = msg.payload;\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"breedingGrowOutSetupRackId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2550,
        "y": 1080,
        "wires": [
            [
                "7f107289.9862ec"
            ]
        ]
    },
    {
        "id": "7f107289.9862ec",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 2810,
        "y": 1080,
        "wires": [
            [
                "3d7048c6.955d38"
            ]
        ]
    },
    {
        "id": "3d7048c6.955d38",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2470,
        "y": 1140,
        "wires": [
            [
                "bf0211fb.0513"
            ],
            [
                "94d87c2d.bfef8"
            ],
            [
                "53749ef2.0a593"
            ]
        ]
    },
    {
        "id": "bf0211fb.0513",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2710,
        "y": 1140,
        "wires": [
            [
                "150ba7a0.357118"
            ]
        ]
    },
    {
        "id": "94d87c2d.bfef8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 1180,
        "wires": [
            [
                "daeca313.d99b4"
            ]
        ]
    },
    {
        "id": "53749ef2.0a593",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2710,
        "y": 1240,
        "wires": [
            [
                "425790.dd6ac87"
            ]
        ]
    },
    {
        "id": "425790.dd6ac87",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 2940,
        "y": 1240,
        "wires": []
    },
    {
        "id": "daeca313.d99b4",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 2920,
        "y": 1180,
        "wires": []
    },
    {
        "id": "150ba7a0.357118",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"growthChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2910,
        "y": 1140,
        "wires": [
            [
                "80e0b49e.8ecf08"
            ]
        ]
    },
    {
        "id": "80e0b49e.8ecf08",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 3010,
        "y": 1080,
        "wires": [
            [
                "6f2ad3f6.13e96c"
            ]
        ]
    },
    {
        "id": "6f2ad3f6.13e96c",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3090,
        "y": 1140,
        "wires": [
            [
                "7c2bf44c.6a0fcc"
            ],
            [
                "d249c0d8.9bb2f"
            ],
            [
                "d155b27d.6df02"
            ]
        ]
    },
    {
        "id": "d155b27d.6df02",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3290,
        "y": 1220,
        "wires": [
            [
                "7e235517.a4db4c"
            ]
        ]
    },
    {
        "id": "d249c0d8.9bb2f",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3290,
        "y": 1160,
        "wires": [
            [
                "27fb904a.a7cb1"
            ]
        ]
    },
    {
        "id": "27fb904a.a7cb1",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3480,
        "y": 1160,
        "wires": []
    },
    {
        "id": "7e235517.a4db4c",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3480,
        "y": 1220,
        "wires": []
    },
    {
        "id": "7c2bf44c.6a0fcc",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3270,
        "y": 1100,
        "wires": [
            [
                "62830912.86b718"
            ]
        ]
    },
    {
        "id": "f470268d.69dbd8",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 3670,
        "y": 1160,
        "wires": [
            [
                "78ca8fd0.551f8"
            ]
        ]
    },
    {
        "id": "f709239b.2462c",
        "type": "split",
        "z": "3517e109.8c2a3e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3630,
        "y": 1100,
        "wires": [
            [
                "682516d7.4fff68"
            ]
        ]
    },
    {
        "id": "682516d7.4fff68",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3780,
        "y": 1100,
        "wires": [
            [
                "f470268d.69dbd8"
            ]
        ]
    },
    {
        "id": "78ca8fd0.551f8",
        "type": "join",
        "z": "3517e109.8c2a3e",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 3810,
        "y": 1160,
        "wires": [
            [
                "71954fd6.9357c"
            ]
        ]
    },
    {
        "id": "e25dfbe5.827728",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "prepare master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 3795,
        "y": 1220,
        "wires": []
    },
    {
        "id": "71954fd6.9357c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3680,
        "y": 1220,
        "wires": [
            [
                "e25dfbe5.827728"
            ]
        ]
    },
    {
        "id": "e9423af5.2c4c38",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Reset Grow out Chamber and Rack",
        "info": "",
        "x": 2560,
        "y": 1040,
        "wires": []
    },
    {
        "id": "da6532b.d52e5d",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "nursery setup",
        "links": [
            "92feedfe.8ebf7",
            "de5f85ca.1c01a8"
        ],
        "x": 855,
        "y": 680,
        "wires": []
    },
    {
        "id": "60485709.f850e8",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "nursery output",
        "links": [
            "f9f8f621.fb2778",
            "31460478.68fd2c"
        ],
        "x": 895,
        "y": 700,
        "wires": []
    },
    {
        "id": "f9f8f621.fb2778",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "nursery output",
        "links": [
            "60485709.f850e8"
        ],
        "x": 2355,
        "y": 2180,
        "wires": [
            [
                "5a7e39b7.066f28"
            ]
        ]
    },
    {
        "id": "56e67790.35fbc8",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2810,
        "y": 2180,
        "wires": [
            [
                "d415a75b.f6fc28"
            ]
        ]
    },
    {
        "id": "d415a75b.f6fc28",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2970,
        "y": 2180,
        "wires": [
            [
                "e9f84208.9ba48"
            ]
        ]
    },
    {
        "id": "65f82c8c.1e1454",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Check Nursery Rack Occupied",
        "info": "",
        "x": 2550,
        "y": 1860,
        "wires": []
    },
    {
        "id": "bb0b6e79.b2bb5",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Reset Nursery Rack",
        "info": "",
        "x": 2510,
        "y": 2140,
        "wires": []
    },
    {
        "id": "c370530f.8b9fe",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const preChamber = msg.preChamber;\nconst chamber = msg.chamber;\nconst chamberId = msg.original.pupationChamberId;\nconst rackId = msg.original.pupationRackID;\nconst rack = msg.rack;\nvar exceedCapacity = false;\nvar rackOccupied = false;\nvar chamberOccupied = false;\nvar availableNumber;\nvar notValid = false;\nvar inAnotherPupationChamber = false;\nvar inPupationChamber;\nif(chamber.options[chamberId].status == \"OCCUPIED\"){\n    chamberOccupied = true;\n}\nelse{\n    chamberOccupied = false;\n    \n    // if(!chamber.options[chamberId].batchIdList){\n    //     chamber.options[chamberId].batchIdList =[]\n    // }\n    // for(let batchId of msg.original.batchId){\n    //     if(!chamber.options[chamberId].batchIdList.includes(batchId)){\n    //         chamber.options[chamberId].batchIdList.push(batchId)\n    //     }\n    // }\n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList =[]\n    }\n    if(!chamber.options[chamberId].rackIdList.includes(rackId)){\n            chamber.options[chamberId].rackIdList.push(rackId)\n            chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n    }\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n}\n\n\n//from prePupaeChamber to pupae, assuming only one setupId per rack\nif(rack.options[rackId].prePupaeChamberId){\n    node.warn(\"pre to pupa process\")\n    \n    rack.options[rackId].pupationChamberId = chamberId;\n    var preChamberId = rack.options[rackId].prePupaeChamberId\n    preChamber.options[preChamberId].occupiedCapacity = preChamber.options[preChamberId].occupiedCapacity -1;\n    preChamber.options[preChamberId].rackIdList.splice(preChamber.options[preChamberId].rackIdList.indexOf(rackId));\n    if(preChamber.options[preChamberId].occupiedCapacity == 0){\n        preChamber.options[preChamberId].status = \"AVAILABLE\"\n    }\n    else{\n        preChamber.options[preChamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n    \n        // if(!rack.options[rackId].batchIdList){\n        //   rack.options[rackId].batchIdList =[]\n        // }\n        \n         if(!rack.options[rackId].setupDateId){\n          rack.options[rackId].setupDateId =[]\n        }\n        \n        //  if(!rack.options[rackId].setupDateId){\n        //   rack.options[rackId].setupDateId = {}\n        // }\n        \n         let found = false;\n            for(let setupDateIdDB of rack.options[rackId].setupDateId) {\n                if(setupDateIdDB == msg.setupDateId){\n                    found = true;\n                }\n            }\n            if(!found) {\n                rack.options[rackId].setupDateId.push(msg.setupDateId)\n            }\n        \n        // rack.options[rackId].setupDateId[msg.setupDateId] = msg.setupDateId\n        \n        // Sprint 14 - No more batchId field, but kept it for reference\n        // if (msg.original.batchId) for(let batchId of msg.original.batchId){\n        //     if(!rack.options[rackId].batchIdList.includes(batchId)){\n        //         rack.options[rackId].batchIdList.push(batchId)\n        //     }\n        // }\n    \n    rack.options[rackId].occupiedCapacity = parseFloat(msg.original.trayCount);\n    if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n        exceedCapacity = true\n        availableNumber = rack.options[rackId].capacity;\n    }\n    else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n        rack.options[rackId].status = \"OCCUPIED\"\n    }\n    else{\n        rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n    }    \n    delete rack.options[rackId].prePupaeChamberId;\n}\nelse if(rack.options[rackId].pupationChamberId){\n    //add tray to this rack (PUPA chamber)\n    node.warn(\"add tray to pupa\")\n    \n    if(rack.options[rackId].status == \"OCCUPIED\"){\n        rackOccupied = true;\n    }\n    else{\n        rackOccupied = false;\n        if(rack.options[rackId].pupationChamberId != chamberId){\n            inAnotherPupationChamber = true;\n            inPupationChamber = rack.options[rackId].pupationChamberId\n        }\n        if(!rack.options[rackId].batchIdList){\n           rack.options[rackId].batchIdList =[]\n        }\n        \n         if(!rack.options[rackId].setupDateId){\n           rack.options[rackId].setupDateId =[]\n        }\n        \n        // Sprint 14 - No more batchId field, but kept it for reference\n        // if (msg.original.batchId) for(let batchId of msg.original.batchId){\n        //     if(!rack.options[rackId].batchIdList.includes(batchId)){\n        //         rack.options[rackId].batchIdList.push(batchId)\n        //     }\n        // }\n        let found = false;\n            for(let setupDateIdDB of rack.options[rackId].setupDateId) {\n                if(setupDateIdDB == msg.setupDateId){\n                    found = true;\n                }\n            }\n            if(!found) {\n                rack.options[rackId].setupDateId.push(msg.setupDateId)\n            }\n            \n            \n        rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n        if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n            exceedCapacity = true\n            availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n        }\n        else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n            rack.options[rackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n    \n    }\n    \n}\nelse{\n    //not from prepupae chamber and not in pupation chamber\n    notValid = true;\n}\n\n\n\n    \n    // rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n    // if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n    //     exceedCapacity = true\n    //     availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n    // }\n    // else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n    //     rack.options[rackId].status = \"OCCUPIED\"\n    // }\n    // else{\n    //     rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n    // }\n    \n\n\n\nmsg.error = false;\nif(notValid){\n    msg.error = true;\n    msg.errMsg = \"The rack is not from PrePupae Chamber and not in Pupation Chamber.\"\n}\nelse if(inAnotherPupationChamber){\n    msg.error = true;\n    msg.errMsg = \"The rack is in another Pupation Chamber. Do you mean: \" + inPupationChamber;\n}\nelse if(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(rackOccupied && chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack and Chamber are occupied\";\n}\nelse if(rackOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack is occupied\";\n}\nelse if(chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Chamber is occupied\";\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.preChamber = preChamber;\nmsg.payload = [\"rack\", \"chamber\", \"preChamber\"]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4020,
        "y": 1580,
        "wires": [
            []
        ]
    },
    {
        "id": "67aae4b1.c7ca1c",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Reset Pupation Emergence Setup Detail Rack",
        "info": "",
        "x": 2510,
        "y": 2400,
        "wires": []
    },
    {
        "id": "e0ab0b3d.306638",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "from Form Submission for Pupation Emergence Setup Detail",
        "links": [
            "5c244165.6b68a",
            "88bb3926.ec4218"
        ],
        "x": 935,
        "y": 720,
        "wires": [],
        "inputLabels": [
            "test"
        ]
    },
    {
        "id": "834f58d2.411c58",
        "type": "cronplus",
        "z": "3517e109.8c2a3e",
        "name": "",
        "outputField": "payload",
        "timeZone": "Asia/Kuala_Lumpur",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "updateNewData",
                "topic": "updateNewData",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 0 * * ? *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 250,
        "y": 1220,
        "wires": [
            [
                "97ddb7f2.b09688"
            ]
        ]
    },
    {
        "id": "a9999430.cbb0d8",
        "type": "template",
        "z": "e737de17.09143",
        "name": "query-form",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/query-form\",\n  \"views\": {\n    \"total_element_by_form\": {\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && doc.submission_timestamp){\\n    emit([doc.tenant, doc.workstationForm], doc.daily_index);\\n  }\\n  \\n}\",\n      \"reduce\": \"_count\"\n    },\n    \"total_element_by_submission_timestamp\": {\n      \"reduce\": \"_count\",\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && doc.submission_timestamp){\\n    emit([doc.tenant, doc.submission_timestamp], doc.daily_index);\\n  }\\n  \\n}\"\n    },\n    \"total_element_by_2_key\": {\n      \"reduce\": \"_count\",\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && doc.submission_timestamp){\\n    emit([doc.tenant, doc.workstationForm, doc.submission_timestamp], doc.daily_index);\\n  }\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 710,
        "y": 1200,
        "wires": [
            [
                "7f6cca7b.0ec3d4"
            ]
        ]
    },
    {
        "id": "47c36359.e13d4c",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "to fetch existing data",
        "info": "",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "c89ae922.540208",
        "type": "http in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "url": "/api/:tenant/forms/:line/:form/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "2cf43c19.43b084"
            ]
        ]
    },
    {
        "id": "771133df.5023dc",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "dataRecord",
        "index": "findByDeletedFalse",
        "x": 250,
        "y": 200,
        "wires": [
            [
                "6aaaeb91.e62ff4"
            ]
        ]
    },
    {
        "id": "aca3aed8.1e40f",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 260,
        "y": 280,
        "wires": []
    },
    {
        "id": "8f138694.1bbae8",
        "type": "http in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "url": "api/:tenant/forms/:line/:form",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 550,
        "y": 80,
        "wires": [
            [
                "cbb9570e.0b8ff8"
            ]
        ]
    },
    {
        "id": "8af6a78c.aac868",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "got id being sent?",
        "func": "if (msg.payload || msg.payload._id) {\n    msg.hasId = true\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 160,
        "wires": [
            [
                "d82cd18a.7f5ff"
            ]
        ]
    },
    {
        "id": "d82cd18a.7f5ff",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "hasId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 200,
        "wires": [
            [
                "a73a4c3f.59e8d"
            ],
            [
                "568d7e24.f29c2"
            ]
        ]
    },
    {
        "id": "568d7e24.f29c2",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 620,
        "y": 320,
        "wires": []
    },
    {
        "id": "a2cb7a11.cd8b58",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 610,
        "y": 240,
        "wires": [
            [
                "c90a0025.aaf95"
            ]
        ]
    },
    {
        "id": "c90a0025.aaf95",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 620,
        "y": 280,
        "wires": []
    },
    {
        "id": "19c3aa90.ffcbb5",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "update existing data",
        "info": "",
        "x": 590,
        "y": 40,
        "wires": []
    },
    {
        "id": "5ed78f09.c2935",
        "type": "http in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "url": "api/:tenant/forms/:line/:form/:id",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 930,
        "y": 80,
        "wires": [
            [
                "8bf764d9.e90148"
            ]
        ]
    },
    {
        "id": "cab83bfd.07c158",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1010,
        "y": 280,
        "wires": [
            [
                "97f13391.95bd"
            ]
        ]
    },
    {
        "id": "97f13391.95bd",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1020,
        "y": 320,
        "wires": []
    },
    {
        "id": "f5b92af9.24a5b8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload.deleted = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 240,
        "wires": [
            [
                "cab83bfd.07c158"
            ]
        ]
    },
    {
        "id": "9ee68e4a.23e8b",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 1010,
        "y": 200,
        "wires": [
            [
                "3c282c14.98c024"
            ]
        ]
    },
    {
        "id": "68bd0c8.bb510f4",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "req.params.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1000,
        "y": 160,
        "wires": [
            [
                "9ee68e4a.23e8b"
            ]
        ]
    },
    {
        "id": "ea26c05b.7aa12",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "query",
        "func": "msg.payload = {\n    key: msg.req.params.id\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 160,
        "wires": [
            [
                "771133df.5023dc"
            ]
        ]
    },
    {
        "id": "6aaaeb91.e62ff4",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 240,
        "wires": [
            [
                "aca3aed8.1e40f"
            ]
        ]
    },
    {
        "id": "efe71b42.ef61a8",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "soft delete existing data",
        "info": "",
        "x": 980,
        "y": 40,
        "wires": []
    },
    {
        "id": "2cf43c19.43b084",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "3517e109.8c2a3e",
        "name": "",
        "x": 260,
        "y": 120,
        "wires": [
            [
                "ea26c05b.7aa12"
            ]
        ]
    },
    {
        "id": "cbb9570e.0b8ff8",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "3517e109.8c2a3e",
        "name": "",
        "x": 620,
        "y": 120,
        "wires": [
            [
                "8af6a78c.aac868"
            ]
        ]
    },
    {
        "id": "8bf764d9.e90148",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "3517e109.8c2a3e",
        "name": "",
        "x": 1020,
        "y": 120,
        "wires": [
            [
                "68bd0c8.bb510f4"
            ]
        ]
    },
    {
        "id": "ec36479a.66a368",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "insectdata db",
        "info": "",
        "x": 190,
        "y": 100,
        "wires": []
    },
    {
        "id": "d3e1ad54.1b38d",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "steps to inserting design docs",
        "info": " * insert the design doc name at \"design names\" inject node\n * insert the design doc name at \"design names\" switch node\n * insert template\n * done (with or without rev)",
        "x": 140,
        "y": 40,
        "wires": []
    },
    {
        "id": "6daf5b29.209934",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "template here",
        "info": "",
        "x": 450,
        "y": 100,
        "wires": []
    },
    {
        "id": "7b7d19af.45ee88",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.untouched = {...msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 480,
        "wires": [
            [
                "edc2cf3d.cac24"
            ]
        ]
    },
    {
        "id": "edb806ea.a3ff28",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "query",
        "func": "let query = {}\nquery.key = []\nquery.key.push(\"001\")\nquery.key.push(\"pupationRackID\")\n\nmsg.original = msg.payload\nmsg.payload = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2530,
        "y": 2480,
        "wires": [
            [
                "31c254aa.50f12c"
            ]
        ]
    },
    {
        "id": "88bb3926.ec4218",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "to Reset Pupation Emergence Setup Detail Rack",
        "links": [
            "e0ab0b3d.306638"
        ],
        "x": 2355,
        "y": 2440,
        "wires": [
            [
                "edb806ea.a3ff28"
            ]
        ]
    },
    {
        "id": "31c254aa.50f12c",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 2370,
        "y": 2560,
        "wires": [
            [
                "3bcd1306.2c775c"
            ]
        ]
    },
    {
        "id": "3bcd1306.2c775c",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2510,
        "y": 2560,
        "wires": [
            [
                "21c57258.729c6e"
            ],
            [
                "a36b0773.236b48"
            ],
            [
                "65a899ce.a7b288"
            ]
        ]
    },
    {
        "id": "21c57258.729c6e",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2690,
        "y": 2520,
        "wires": [
            [
                "6f94d953.3eb448"
            ]
        ]
    },
    {
        "id": "a36b0773.236b48",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 2580,
        "wires": [
            []
        ]
    },
    {
        "id": "65a899ce.a7b288",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2730,
        "y": 2640,
        "wires": [
            []
        ]
    },
    {
        "id": "6f94d953.3eb448",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "query",
        "func": "let query = {}\nquery.key = []\nquery.key.push(\"001\")\nquery.key.push(\"pupationChamberId\")\n\nmsg.payload = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2830,
        "y": 2520,
        "wires": [
            [
                "fe0ef1e8.6759f"
            ]
        ]
    },
    {
        "id": "fe0ef1e8.6759f",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 2970,
        "y": 2520,
        "wires": [
            [
                "d7cf3c8c.d2ea4"
            ]
        ]
    },
    {
        "id": "d7cf3c8c.d2ea4",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2990,
        "y": 2580,
        "wires": [
            [
                "59123ae2.4eb464"
            ],
            [
                "dd4e7ca7.492ce"
            ],
            [
                "ea9bc2dd.a4f14"
            ]
        ]
    },
    {
        "id": "59123ae2.4eb464",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 2560,
        "wires": [
            [
                "c918c77.7bc2238"
            ]
        ]
    },
    {
        "id": "dd4e7ca7.492ce",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3210,
        "y": 2600,
        "wires": [
            []
        ]
    },
    {
        "id": "ea9bc2dd.a4f14",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3210,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "ff544832.bd96e8",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3530,
        "y": 2520,
        "wires": [
            [
                "ba770e93.aaef"
            ],
            [
                "374bc4e5.99f62c"
            ]
        ]
    },
    {
        "id": "ba770e93.aaef",
        "type": "split",
        "z": "3517e109.8c2a3e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3590,
        "y": 2480,
        "wires": [
            [
                "f4a34ebe.6674d"
            ]
        ]
    },
    {
        "id": "374bc4e5.99f62c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3630,
        "y": 2580,
        "wires": [
            [
                "bbf99a82.aaeb58"
            ]
        ]
    },
    {
        "id": "f4a34ebe.6674d",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3740,
        "y": 2480,
        "wires": [
            [
                "8fdfd366.47611"
            ]
        ]
    },
    {
        "id": "8fdfd366.47611",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 3890,
        "y": 2480,
        "wires": [
            [
                "99b627c5.fb58d8"
            ]
        ]
    },
    {
        "id": "99b627c5.fb58d8",
        "type": "join",
        "z": "3517e109.8c2a3e",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4030,
        "y": 2480,
        "wires": [
            [
                "10bd300e.98e24"
            ]
        ]
    },
    {
        "id": "10bd300e.98e24",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4180,
        "y": 2480,
        "wires": [
            [
                "4206f1b.525831"
            ]
        ]
    },
    {
        "id": "4206f1b.525831",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "to master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 4315,
        "y": 2480,
        "wires": []
    },
    {
        "id": "bbf99a82.aaeb58",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 3860,
        "y": 2580,
        "wires": []
    },
    {
        "id": "d92dba19.eda338",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "req.params.form",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "attendance",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "process-check-in-out",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grow-out-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grow-out-harvest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nursery-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nursery-checkout",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-complete",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 330,
        "y": 2060,
        "wires": [
            [
                "ffe5264e.5646e8"
            ],
            [
                "d1f3c46.4581738"
            ],
            [
                "72187add.6790c4"
            ],
            [
                "7d700c14.699ec4"
            ],
            [
                "ca0422b9.2e4a"
            ],
            [
                "f9d8e5ca.2713f8"
            ],
            [
                "64c691aa.9c49c"
            ],
            [
                "bf5a1a3d.1b29e8"
            ],
            [
                "76f4706b.aff33"
            ],
            [
                "a105b22a.22b6b"
            ]
        ]
    },
    {
        "id": "72187add.6790c4",
        "type": "subflow:3b1bcef5.c78bb2",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 710,
        "y": 1980,
        "wires": [
            [
                "a105b22a.22b6b"
            ]
        ]
    },
    {
        "id": "f77ff8a7.c426b8",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "Query",
        "func": "msg.oldData = {...msg.payload};\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"breedingGrowOutSetupRackId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 80,
        "wires": [
            [
                "a412b685.e00038"
            ]
        ]
    },
    {
        "id": "a412b685.e00038",
        "type": "cloudantplus in",
        "z": "7b3f907.b36877",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 530,
        "y": 80,
        "wires": [
            [
                "44e7042f.cfe01c"
            ]
        ]
    },
    {
        "id": "9c344076.56a9f",
        "type": "cloudantplus in",
        "z": "7b3f907.b36877",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 730,
        "y": 80,
        "wires": [
            [
                "54b4a57a.0a58ec"
            ]
        ]
    },
    {
        "id": "4eb50ca5.dc2fb4",
        "type": "join",
        "z": "7b3f907.b36877",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1810,
        "y": 160,
        "wires": [
            [
                "5c6a53.9e0f85ac"
            ]
        ]
    },
    {
        "id": "f9fd9106.89b4d",
        "type": "subflow:7b3f907.b36877",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 590,
        "y": 2320,
        "wires": [
            []
        ]
    },
    {
        "id": "1565d410.18f4ac",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "Get Old submission data",
        "func": "msg.original = msg.payload;\nmsg.payload = msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 40,
        "wires": [
            [
                "8b704ece.b7282"
            ]
        ]
    },
    {
        "id": "8b704ece.b7282",
        "type": "cloudantplus in",
        "z": "7b3f907.b36877",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 410,
        "y": 40,
        "wires": [
            [
                "f77ff8a7.c426b8"
            ]
        ]
    },
    {
        "id": "cd7fd75c.3a7ae8",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "update check form",
        "links": [
            "a73a4c3f.59e8d"
        ],
        "x": 55,
        "y": 2060,
        "wires": [
            [
                "fb2a46ef.b1f318"
            ]
        ]
    },
    {
        "id": "a73a4c3f.59e8d",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "update check form",
        "links": [
            "cd7fd75c.3a7ae8"
        ],
        "x": 815,
        "y": 240,
        "wires": []
    },
    {
        "id": "ced3ddaf.20c6b",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "Update data",
        "links": [
            "a105b22a.22b6b",
            "e13f1b1a.92cda8",
            "da590a8d.7572c8"
        ],
        "x": 435,
        "y": 240,
        "wires": [
            [
                "a2cb7a11.cd8b58"
            ]
        ]
    },
    {
        "id": "a105b22a.22b6b",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "Update data",
        "links": [
            "ced3ddaf.20c6b"
        ],
        "x": 1255,
        "y": 2060,
        "wires": []
    },
    {
        "id": "ca0422b9.2e4a",
        "type": "subflow:5b95e5c7.2321dc",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 700,
        "y": 2060,
        "wires": [
            [
                "a105b22a.22b6b"
            ]
        ]
    },
    {
        "id": "ba796303.5a041",
        "type": "function",
        "z": "85e7a6d5.86d078",
        "name": "Query",
        "func": "msg.oldData = {...msg.payload};\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"breedingNurserySetupRackId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "fa1060e2.6473e"
            ]
        ]
    },
    {
        "id": "fa1060e2.6473e",
        "type": "cloudantplus in",
        "z": "85e7a6d5.86d078",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "9ecaa9bd.a849f8"
            ]
        ]
    },
    {
        "id": "9ecaa9bd.a849f8",
        "type": "switch",
        "z": "85e7a6d5.86d078",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "f7d02326.1de04"
            ],
            [
                "35da2d5.8adc4d2"
            ],
            [
                "f3e0a60e.e6dac8"
            ]
        ]
    },
    {
        "id": "f7d02326.1de04",
        "type": "change",
        "z": "85e7a6d5.86d078",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "6c894738.fbedb8"
            ]
        ]
    },
    {
        "id": "35da2d5.8adc4d2",
        "type": "function",
        "z": "85e7a6d5.86d078",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "f3e0a60e.e6dac8",
        "type": "function",
        "z": "85e7a6d5.86d078",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "6c894738.fbedb8",
        "type": "function",
        "z": "85e7a6d5.86d078",
        "name": "",
        "func": "const rack = msg.rack;\nconst rackIdList = msg.original.breedingNurserySetupRackId;\nconst oldRackIdList = msg.oldData.breedingNurserySetupRackId;\nconst batchIdList = msg.original.batchId;\nvar trayOut = 0;\nmsg.trayOutTele = false;\nfor(let rackId of rackIdList){\n    if(rack.options[rackId]){\n        for(let batchId of batchIdList){\n            if(rack.options[rackId].batchIdList){\n                if(rack.options[rackId].batchIdList[batchId]){\n                    rack.options[rackId].occupiedCapacity = parseFloat(rack.options[rackId].occupiedCapacity) - parseFloat(rack.options[rackId].batchIdList[batchId]);\n                    trayOut = trayOut + parseFloat(rack.options[rackId].batchIdList[batchId]);\n                    if(rack.options[rackId].occupiedCapacity == 0){\n                        rack.options[rackId].status = \"AVAILABLE\"\n                    }\n                    else{\n                        rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n                    }\n                    delete rack.options[rackId].batchIdList[batchId]\n                }\n            }\n           \n        }\n    }\n}\n\nif(msg.original.nurseryTraysOutCount == trayOut){\n    msg.trayOutTele = true;\n}\nmsg.trayInDB = trayOut;\nmsg.payload = rack;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 140,
        "wires": [
            [
                "95be4616.1a12c8"
            ]
        ]
    },
    {
        "id": "95be4616.1a12c8",
        "type": "switch",
        "z": "85e7a6d5.86d078",
        "name": "",
        "property": "trayOutTele",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 140,
        "wires": [
            [
                "b5704298.d90dd"
            ],
            [
                "53464743.bdc678"
            ]
        ]
    },
    {
        "id": "b5704298.d90dd",
        "type": "cloudantplus out",
        "z": "85e7a6d5.86d078",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 970,
        "y": 120,
        "wires": [
            [
                "47befacf.9a1d14"
            ]
        ]
    },
    {
        "id": "47befacf.9a1d14",
        "type": "change",
        "z": "85e7a6d5.86d078",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1150,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "53464743.bdc678",
        "type": "function",
        "z": "85e7a6d5.86d078",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Tray out count incorrect, tray in rack with the batch ID: \"+ msg.trayInDB\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 180,
        "wires": [
            [
                "8116e3a.cba242"
            ]
        ]
    },
    {
        "id": "8116e3a.cba242",
        "type": "http response",
        "z": "85e7a6d5.86d078",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1260,
        "y": 180,
        "wires": []
    },
    {
        "id": "25e1045.24a4efc",
        "type": "subflow:85e7a6d5.86d078",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 580,
        "y": 2360,
        "wires": []
    },
    {
        "id": "7cebd4fb.08295c",
        "type": "function",
        "z": "85e7a6d5.86d078",
        "name": "Get Old submission data",
        "func": "msg.original = msg.payload;\nmsg.payload = msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 40,
        "wires": [
            [
                "6c41f1e3.1e4e3"
            ]
        ]
    },
    {
        "id": "6c41f1e3.1e4e3",
        "type": "cloudantplus in",
        "z": "85e7a6d5.86d078",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 450,
        "y": 40,
        "wires": [
            [
                "ba796303.5a041"
            ]
        ]
    },
    {
        "id": "11114d3b.920753",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload = msg.original;\nmsg.payload.incomplete = true;\nmsg.payload.growOutSetupId= msg.cloudant.id;\ndelete msg.payload.dataRecord;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1360,
        "y": 1020,
        "wires": [
            [
                "ac31a5bd.6a4948"
            ]
        ]
    },
    {
        "id": "ac31a5bd.6a4948",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1530,
        "y": 1020,
        "wires": [
            [
                "5a6f3526.0d213c"
            ]
        ]
    },
    {
        "id": "44e7042f.cfe01c",
        "type": "switch",
        "z": "7b3f907.b36877",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 190,
        "y": 140,
        "wires": [
            [
                "9d1b78fc.4058f8"
            ],
            [
                "346ba5db.fafffa"
            ],
            [
                "7d8d57aa.7e2f18"
            ]
        ]
    },
    {
        "id": "9d1b78fc.4058f8",
        "type": "change",
        "z": "7b3f907.b36877",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 140,
        "wires": [
            [
                "742f17e9.046918"
            ]
        ]
    },
    {
        "id": "346ba5db.fafffa",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 180,
        "wires": [
            [
                "d2e26bfb.69d528"
            ]
        ]
    },
    {
        "id": "7d8d57aa.7e2f18",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 240,
        "wires": [
            [
                "52f17036.dc5be"
            ]
        ]
    },
    {
        "id": "52f17036.dc5be",
        "type": "http response",
        "z": "7b3f907.b36877",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 660,
        "y": 240,
        "wires": []
    },
    {
        "id": "d2e26bfb.69d528",
        "type": "http response",
        "z": "7b3f907.b36877",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 640,
        "y": 180,
        "wires": []
    },
    {
        "id": "742f17e9.046918",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"growthChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 140,
        "wires": [
            [
                "9c344076.56a9f"
            ]
        ]
    },
    {
        "id": "54b4a57a.0a58ec",
        "type": "switch",
        "z": "7b3f907.b36877",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 810,
        "y": 140,
        "wires": [
            [
                "4925f288.81ca0c"
            ],
            [
                "e14826af.849d58"
            ],
            [
                "e24e2a55.bb07e8"
            ]
        ]
    },
    {
        "id": "e24e2a55.bb07e8",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 220,
        "wires": [
            [
                "13640fd7.fe466"
            ]
        ]
    },
    {
        "id": "e14826af.849d58",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 160,
        "wires": [
            [
                "19a48036.2b766"
            ]
        ]
    },
    {
        "id": "19a48036.2b766",
        "type": "http response",
        "z": "7b3f907.b36877",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1200,
        "y": 160,
        "wires": []
    },
    {
        "id": "13640fd7.fe466",
        "type": "http response",
        "z": "7b3f907.b36877",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1200,
        "y": 220,
        "wires": []
    },
    {
        "id": "4925f288.81ca0c",
        "type": "change",
        "z": "7b3f907.b36877",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 100,
        "wires": [
            [
                "92591b90.9f3ec8"
            ]
        ]
    },
    {
        "id": "92591b90.9f3ec8",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "",
        "func": "const chamberId = msg.original.growthChamberId;\nconst oldChamberId = msg.oldData.growthChamberId;\nconst rack = msg.rack;\nconst oldBatchId = msg.oldData.batchId\nconst rackId = msg.original.breedingGrowOutSetupRackId;\nconst oldRackId = msg.oldData.breedingGrowOutSetupRackId;\nconst chamber = msg.chamber;\nmsg.err = false;\nif(chamber.options[oldChamberId].status === \"OCCUPIED\"){\n    msg.err = true;\n    msg.errMsg = \"Previous Chamber occupied\";\n}\nelse{\n    if(!chamber.options[oldChamberId].rackIdList){\n        chamber.options[oldChamberId].rackIdList ={}\n    }\n    chamber.options[oldChamberId].rackIdList[oldRackId] = \n    {\n        label: rack.options[oldRackId].label,\n        batchIdList: oldBatchId\n    }\n     chamber.options[oldChamberId].occupiedCapacity = chamber.options[oldChamberId].occupiedCapacity +1\n        if(chamber.options[oldChamberId].occupiedCapacity == chamber.options[oldChamberId].capacity){\n            chamber.options[oldChamberId].status = \"OCCUPIED\"\n        }\n        else if(chamber.options[oldChamberId].occupiedCapacity == 0){\n            chamber.options[oldChamberId].status = \"AVAILABLE\"\n        }\n        else{\n            chamber.options[oldChamberId].status = \"PARTIALLY_OCCUPIED\"\n        }\n}\nif(chamber.options[chamberId].rackIdList[rackId]){\n    delete chamber.options[chamberId].rackIdList[rackId]\n\n    chamber.options[chamberId].occupiedCapacity = chamber.options[chamberId].occupiedCapacity -1 < 0? 0:chamber.options[chamberId].occupiedCapacity -1;\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else if(chamber.options[chamberId].occupiedCapacity == 0){\n        chamber.options[chamberId].status = \"AVAILABLE\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n    \n}\nelse{\n    msg.err = true;\n    msg.errMsg = \"Rack not found in this chamber\"\n}\n\nrack.options[oldRackId].status = \"OCCUPIED\"\nrack.options[oldRackId].growthChamberId = oldChamberId;\nrack.options[oldRackId].batchIdList = oldBatchId;\n\nrack.options[rackId].status = \"AVAILABLE\"\ndelete rack.options[rackId].batchIdList\ndelete rack.options[rackId].growthChamberId\n\n\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 100,
        "wires": [
            [
                "be1e8518.d6cbc8"
            ]
        ]
    },
    {
        "id": "78a03748.40c758",
        "type": "cloudantplus out",
        "z": "7b3f907.b36877",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1670,
        "y": 160,
        "wires": [
            [
                "4eb50ca5.dc2fb4"
            ]
        ]
    },
    {
        "id": "f9eeca26.353858",
        "type": "split",
        "z": "7b3f907.b36877",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1610,
        "y": 100,
        "wires": [
            [
                "e5cebac9.1a3fa8"
            ]
        ]
    },
    {
        "id": "e5cebac9.1a3fa8",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1740,
        "y": 100,
        "wires": [
            [
                "78a03748.40c758"
            ]
        ]
    },
    {
        "id": "5c6a53.9e0f85ac",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "",
        "func": "msg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1720,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "be1e8518.d6cbc8",
        "type": "switch",
        "z": "7b3f907.b36877",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 100,
        "wires": [
            [
                "f9eeca26.353858"
            ],
            [
                "7e5c1959.00a148"
            ]
        ]
    },
    {
        "id": "7e5c1959.00a148",
        "type": "function",
        "z": "7b3f907.b36877",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1450,
        "y": 200,
        "wires": [
            [
                "d50c3e1c.f2ff8"
            ]
        ]
    },
    {
        "id": "d50c3e1c.f2ff8",
        "type": "http response",
        "z": "7b3f907.b36877",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1440,
        "y": 280,
        "wires": []
    },
    {
        "id": "de58f27b.c95d6",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "let data = msg.masterData\n\ndata._id = msg.payload.id\ndata._rev = msg.payload.rev\ndata.processIncomplete = true\n\nmsg.payload = data\n\n// msg.payload = msg.original;\n// msg.payload.incomplete = true;\n// msg.payload.nurserySetupId= msg.cloudant.id;\n// delete msg.payload.dataRecord;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1100,
        "wires": [
            [
                "4eaaeac6.3a29e4"
            ]
        ]
    },
    {
        "id": "4eaaeac6.3a29e4",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1510,
        "y": 1100,
        "wires": [
            [
                "5a6f3526.0d213c"
            ]
        ]
    },
    {
        "id": "f9d8e5ca.2713f8",
        "type": "subflow:a87207ef.fd5e68",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 670,
        "y": 2100,
        "wires": [
            [
                "a105b22a.22b6b"
            ]
        ]
    },
    {
        "id": "64c691aa.9c49c",
        "type": "subflow:90996413.448b78",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 720,
        "y": 2140,
        "wires": [
            [
                "a105b22a.22b6b"
            ]
        ]
    },
    {
        "id": "aac1f1c0.369aa",
        "type": "subflow:6cce5602.b9c5a8",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 1060,
        "wires": [
            [
                "5a6f3526.0d213c"
            ]
        ]
    },
    {
        "id": "2853499b.5c98f6",
        "type": "function",
        "z": "a6b9fb77.65b748",
        "name": "",
        "func": "query = {}\nquery.key = [msg.original.tenant, msg.original.pupationRackID, msg.original.batchId]\nmsg.payload = query;\nmsg.pupationEmergenceSetupId = msg.cloudant.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 180,
        "wires": [
            [
                "c1d7369e.b9aed8"
            ]
        ]
    },
    {
        "id": "c1d7369e.b9aed8",
        "type": "cloudantplus in",
        "z": "a6b9fb77.65b748",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "pupation-setup",
        "x": 410,
        "y": 180,
        "wires": [
            [
                "3c9f25aa.f9bd8a"
            ]
        ]
    },
    {
        "id": "3c9f25aa.f9bd8a",
        "type": "function",
        "z": "a6b9fb77.65b748",
        "name": "",
        "func": "msg.incompleteFound =false;\nif(msg.payload){\n    if(msg.payload[0]){\n        let formValue = msg.payload[0].value;\n        formValue.incomplete = false;\n        formValue.pupationEmergenceSetupId = msg.pupationEmergenceSetupId;\n        msg.payload = formValue;\n        msg.incompleteFound = true;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 180,
        "wires": [
            [
                "2bccc3ad.dd8f9c"
            ]
        ]
    },
    {
        "id": "2bccc3ad.dd8f9c",
        "type": "switch",
        "z": "a6b9fb77.65b748",
        "name": "",
        "property": "incompleteFound",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 180,
        "wires": [
            [
                "4fb41cb2.802e04"
            ],
            [
                "17a6ce02.f37d62"
            ]
        ]
    },
    {
        "id": "4fb41cb2.802e04",
        "type": "cloudantplus out",
        "z": "a6b9fb77.65b748",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 830,
        "y": 120,
        "wires": [
            [
                "17a6ce02.f37d62"
            ]
        ]
    },
    {
        "id": "64316f39.761c1",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "node.warn(msg)\n\nmsg.payload = msg.original;\nmsg.payload.incomplete = true;\nmsg.payload.pupationSetupDetailId= msg.cloudant.id;\ndelete msg.payload.dataRecord;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 1140,
        "wires": [
            [
                "34d345cc.4ee6aa"
            ]
        ]
    },
    {
        "id": "34d345cc.4ee6aa",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1510,
        "y": 1140,
        "wires": [
            [
                "5a6f3526.0d213c"
            ]
        ]
    },
    {
        "id": "7206af9c.dc1ab",
        "type": "subflow:a6b9fb77.65b748",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 1460,
        "y": 1180,
        "wires": [
            [
                "5a6f3526.0d213c"
            ]
        ]
    },
    {
        "id": "cf788df4.8b745",
        "type": "subflow:2d333c58.be1b84",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 1480,
        "y": 1220,
        "wires": [
            [
                "5a6f3526.0d213c"
            ]
        ]
    },
    {
        "id": "17a6ce02.f37d62",
        "type": "function",
        "z": "a6b9fb77.65b748",
        "name": "",
        "func": "msg.payload = msg.original;\nmsg.payload.incomplete = true;\nmsg.payload.pupationEmergenceSetupId= msg.pupationEmergenceSetupId;\ndelete msg.payload.dataRecord;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 200,
        "wires": [
            [
                "31d0955d.c7f4da"
            ]
        ]
    },
    {
        "id": "31d0955d.c7f4da",
        "type": "cloudantplus out",
        "z": "a6b9fb77.65b748",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1130,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "bf5a1a3d.1b29e8",
        "type": "subflow:3869881b.e92898",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 760,
        "y": 2180,
        "wires": [
            [
                "a105b22a.22b6b"
            ]
        ]
    },
    {
        "id": "76f4706b.aff33",
        "type": "subflow:889b2901.b7a768",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 670,
        "y": 2220,
        "wires": [
            [
                "a105b22a.22b6b"
            ]
        ]
    },
    {
        "id": "ffe5264e.5646e8",
        "type": "subflow:e98ab834.68c228",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 720,
        "y": 1900,
        "wires": [
            [
                "a105b22a.22b6b"
            ]
        ]
    },
    {
        "id": "d1f3c46.4581738",
        "type": "subflow:da75c902.1b7f18",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 750,
        "y": 1940,
        "wires": [
            [
                "a105b22a.22b6b"
            ]
        ]
    },
    {
        "id": "d7da9e66.f2768",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Update Generated Data and Asset",
        "info": "",
        "x": 240,
        "y": 1880,
        "wires": []
    },
    {
        "id": "7d700c14.699ec4",
        "type": "subflow:4bf465ff.30673c",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 730,
        "y": 2020,
        "wires": [
            [
                "a105b22a.22b6b"
            ]
        ]
    },
    {
        "id": "3e2098ba.308838",
        "type": "function",
        "z": "c196ec9c.55a0f",
        "name": "query",
        "func": "let form = msg.workstationForm;\nlet line = msg.productionLine;\nlet tenant = msg.tenant;\nlet query = {\n    \"selector\": {\n        \"tenant\": tenant,\n        \"productionLine\": line,\n        \"workstationForm\": form,\n        \"docType\": \"blueprint\"\n    },\n    \"fields\": [],\n    \"sort\": [],\n    \"skip\": 0,\n    \"execution_stats\": true\n}\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "3ce2213e.5bc7be"
            ]
        ]
    },
    {
        "id": "3ce2213e.5bc7be",
        "type": "cloudantplus in",
        "z": "c196ec9c.55a0f",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "blueprint",
        "index": "blueprint",
        "x": 210,
        "y": 160,
        "wires": [
            [
                "7ae906f0.dc9328"
            ]
        ]
    },
    {
        "id": "7ae906f0.dc9328",
        "type": "switch",
        "z": "c196ec9c.55a0f",
        "name": "hasResult?",
        "property": "payload.execution_stats.results_returned",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 200,
        "wires": [
            [
                "843af7c9.40f6e8"
            ],
            [
                "9d4e001b.4a9d2"
            ]
        ]
    },
    {
        "id": "9d4e001b.4a9d2",
        "type": "function",
        "z": "c196ec9c.55a0f",
        "name": "errMsg",
        "func": "msg.payload = {\n    \"message\": \"No such blueprint found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 240,
        "wires": [
            [
                "de223112.33b01"
            ]
        ]
    },
    {
        "id": "de223112.33b01",
        "type": "http response",
        "z": "c196ec9c.55a0f",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 220,
        "y": 280,
        "wires": []
    },
    {
        "id": "46b7090d.671478",
        "type": "function",
        "z": "c196ec9c.55a0f",
        "name": "set fieldKeys for fieldArray",
        "func": "msg.metadataKeyList = []\n\nfor (let field of msg.payload.template) {\n    if (field.fieldArray && field.fieldArray.fieldGroup) {\n        for (let nestedField of field.fieldArray.fieldGroup) {\n            if (nestedField.metadata) msg.metadataKeyList.push(nestedField.key)\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "a8569a1f.1d37c8"
            ]
        ]
    },
    {
        "id": "843af7c9.40f6e8",
        "type": "change",
        "z": "c196ec9c.55a0f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.docs[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 120,
        "wires": [
            [
                "46b7090d.671478"
            ]
        ]
    },
    {
        "id": "a8569a1f.1d37c8",
        "type": "function",
        "z": "c196ec9c.55a0f",
        "name": "set fieldKeys for fieldGroup",
        "func": "for (let field of msg.payload.template) {\n    if (field.fieldGroup) {\n        for (let nestedField of field.fieldGroup) {\n            if (nestedField.metadata) msg.metadataKeyList.push(nestedField.key)\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 200,
        "wires": [
            [
                "890cfe8c.6cae1"
            ]
        ]
    },
    {
        "id": "890cfe8c.6cae1",
        "type": "function",
        "z": "c196ec9c.55a0f",
        "name": "set fieldKeys for other than above",
        "func": "let hardCodedMetadata = [\"daily_index\", \"device_ip\",\"facility_id\",\n\"user_name\", \"user_id\", \"form_id\", \"form_version\", \"processDocument\",\n\"description\", \"device_id\", \"_id\", \"_rev\"];\nfor (let field of msg.payload.template) {\n    if (field.metadata) msg.metadataKeyList.push(field.key)\n}\nmsg.metadataKeyList.push(...hardCodedMetadata);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9ed5703f.385a7",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 220,
        "wires": [
            [
                "815a7bc0.252778"
            ]
        ]
    },
    {
        "id": "fdd567bf.e75978",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.submission_timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.submission_timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "2aa3bc56.7b7e34"
            ]
        ]
    },
    {
        "id": "692dc9d2.fd1dd8",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.in_submitted_date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.in_submitted_date",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 380,
        "wires": [
            [
                "5a1f85b5.e95cbc"
            ]
        ]
    },
    {
        "id": "8596a24a.95d0c",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.in_timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.in_timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 460,
        "wires": [
            [
                "8096d054.17e78"
            ]
        ]
    },
    {
        "id": "2aa3bc56.7b7e34",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "in_submitted_date",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 420,
        "wires": [
            [
                "692dc9d2.fd1dd8"
            ],
            [
                "5a1f85b5.e95cbc"
            ]
        ]
    },
    {
        "id": "5a1f85b5.e95cbc",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "in_timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 500,
        "wires": [
            [
                "8596a24a.95d0c"
            ],
            [
                "8096d054.17e78"
            ]
        ]
    },
    {
        "id": "8b842951.8a0da8",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.out_submitted_date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.out_submitted_date",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 540,
        "wires": [
            [
                "8ebb1043.72833"
            ]
        ]
    },
    {
        "id": "8096d054.17e78",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "out_submitted_date",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 580,
        "wires": [
            [
                "8b842951.8a0da8"
            ],
            [
                "8ebb1043.72833"
            ]
        ]
    },
    {
        "id": "2ab3676f.0cb648",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.out_timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.out_timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 620,
        "wires": [
            [
                "85ed7f17.44c2e"
            ]
        ]
    },
    {
        "id": "8ebb1043.72833",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "out_timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 660,
        "wires": [
            [
                "2ab3676f.0cb648"
            ],
            [
                "85ed7f17.44c2e"
            ]
        ]
    },
    {
        "id": "e2b41d6e.488ca",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.start_timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.start_timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 700,
        "wires": [
            [
                "d7ba4411.2e5e08"
            ]
        ]
    },
    {
        "id": "85ed7f17.44c2e",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "start_timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 740,
        "wires": [
            [
                "e2b41d6e.488ca"
            ],
            [
                "d7ba4411.2e5e08"
            ]
        ]
    },
    {
        "id": "2c0116d3.35806a",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.start_submitted_date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.start_submitted_date",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 780,
        "wires": [
            [
                "2e8483ba.dbb78c"
            ]
        ]
    },
    {
        "id": "d7ba4411.2e5e08",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "start_submitted_date",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 820,
        "wires": [
            [
                "2c0116d3.35806a"
            ],
            [
                "2e8483ba.dbb78c"
            ]
        ]
    },
    {
        "id": "48b92e1c.04ec7",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.end_timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.end_timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 860,
        "wires": [
            [
                "21c5b7c4.b830c8"
            ]
        ]
    },
    {
        "id": "2e8483ba.dbb78c",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "end_timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 900,
        "wires": [
            [
                "48b92e1c.04ec7"
            ],
            [
                "21c5b7c4.b830c8"
            ]
        ]
    },
    {
        "id": "eeadaf11.31b59",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.end_submitted_date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.end_submitted_date",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 940,
        "wires": [
            [
                "f460d20e.8684f"
            ]
        ]
    },
    {
        "id": "21c5b7c4.b830c8",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "end_submitted_date",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 980,
        "wires": [
            [
                "eeadaf11.31b59"
            ],
            [
                "f460d20e.8684f"
            ]
        ]
    },
    {
        "id": "5c2789fa.dd96f8",
        "type": "function",
        "z": "84269f38.920f2",
        "name": "",
        "func": "\nif(Array.isArray(msg.payload.batchId)){\n    var batchIdList = \"\"\n    for(let i=0; i<msg.payload.batchId.length;i++){\n        if(i ===0){\n            batchIdList = batchIdList +msg.payload.batchId[i]\n        }\n        else{\n            batchIdList = batchIdList +\"\\, \"+msg.payload.batchId[i]\n        }\n    }\n    batchIdList = batchIdList +\"\"\n    msg.payload.batchId = batchIdList\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "f460d20e.8684f",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "batchId",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 1060,
        "wires": [
            [
                "5c2789fa.dd96f8"
            ],
            []
        ]
    },
    {
        "id": "2bc322c1.891e9e",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 260,
        "wires": [
            [
                "9ed5703f.385a7"
            ],
            [
                "815a7bc0.252778"
            ]
        ]
    },
    {
        "id": "815a7bc0.252778",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 340,
        "wires": [
            [
                "fdd567bf.e75978"
            ],
            [
                "2aa3bc56.7b7e34"
            ]
        ]
    },
    {
        "id": "754ce0ea.51fbe",
        "type": "switch",
        "z": "84269f38.920f2",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "ts",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 180,
        "wires": [
            [
                "505d484e.8050d8"
            ],
            [
                "2bc322c1.891e9e"
            ]
        ]
    },
    {
        "id": "f0c150f1.5c1d5",
        "type": "moment",
        "z": "84269f38.920f2",
        "name": "",
        "topic": "",
        "input": "payload.ts",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm:ss",
        "locale": "en-US",
        "output": "payload.ts",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 560,
        "y": 140,
        "wires": [
            [
                "2bc322c1.891e9e"
            ]
        ]
    },
    {
        "id": "505d484e.8050d8",
        "type": "function",
        "z": "84269f38.920f2",
        "name": "",
        "func": "msg.payload.ts = msg.payload.ts * 1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 140,
        "wires": [
            [
                "f0c150f1.5c1d5"
            ]
        ]
    },
    {
        "id": "6340916e.fdd0e",
        "type": "comment",
        "z": "84269f38.920f2",
        "name": "this subflow will convert known timestamo fields to desire format",
        "info": "",
        "x": 250,
        "y": 40,
        "wires": []
    },
    {
        "id": "1aaef716.826999",
        "type": "comment",
        "z": "84269f38.920f2",
        "name": "subflow getting big, read desc here",
        "info": "subflow getting unmaintainable. suggest to chain last switch statement to a better solution for formatting in the future if new datetime field introduces.",
        "x": 640,
        "y": 40,
        "wires": []
    },
    {
        "id": "4b4c81f2.6e38",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "environmentdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "sortTimestamp",
        "index": "by-device-location",
        "x": 1090,
        "y": 920,
        "wires": [
            [
                "85b74d01.4aa6d"
            ]
        ]
    },
    {
        "id": "b10f5403.90fc98",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "api/:tenant/forms/dashboard-sensor/:sensor",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 1000,
        "y": 840,
        "wires": [
            [
                "52b9065b.e6e888"
            ]
        ]
    },
    {
        "id": "52b9065b.e6e888",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "query",
        "func": "let sensor = msg.req.params.sensor\nlet location = msg.req.query.location || null\nlet startkey = [sensor]\nlet endkey = [sensor]\n\n// location\nif (location) {\n    startkey.push(location)\n    endkey.push(location)\n} else {\n    startkey.push({})\n}\n\n// timestamp\nstartkey.push({})\n\nmsg.payload = {\n    startkey,\n    endkey,\n    descending: true,\n    limit: 5\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1130,
        "y": 880,
        "wires": [
            [
                "4b4c81f2.6e38"
            ]
        ]
    },
    {
        "id": "9a468c31.b23ce",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1120,
        "y": 1120,
        "wires": []
    },
    {
        "id": "dd41856.b32ff78",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "structure data",
        "func": "let timestamp = 0\nlet params = []\nlet units = {\n    \"pres\":\"pascal\",\n    \"gas\" : \"gas unit\",\n    \"IAQ\" : \"IAQ unit\",\n    \"iaqA\": \"iaqA unit\",\n    \"temp\": \"celcius\",\n    \"hum\" : \"hum unit\",\n    \"eqco2\": \"eqco2 unit\",\n    \"VOC\" : \"VOC unit\"\n}\n\nif (msg.envDataPayload.length > 0) {\n    // payload[0] because that is the latest data\n    let data = msg.envDataPayload[0].value\n    let nonParams = ['_id', '_rev', 'ID', 'ts', 'location']\n    \n    for (let key in data) {\n        if (key === 'ts') {\n            timestamp = data[key]\n        }\n\n        if (!nonParams.includes(key)) {\n            let param = {}\n            param['parameter'] = key\n            param['value'] = data[key]\n            \n            if (msg.payload.docs.length > 0) {\n                let template = msg.payload.docs[0].template;\n                param['unit'] = template[key] || key\n            } else {\n                param['unit'] = units[key] || key    \n            }\n\n            params.push(param)\n        }\n    }\n}\n\nmsg.payload = {\n    timestamp,\n    params\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1040,
        "wires": [
            [
                "a7705d4b.84458",
                "7982eba1.6628a4"
            ]
        ]
    },
    {
        "id": "b21ba3f.e405a6",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "Specific to Sensor ID",
        "info": "",
        "x": 1080,
        "y": 800,
        "wires": []
    },
    {
        "id": "edc2cf3d.cac24",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 620,
        "y": 480,
        "wires": [
            [
                "5298ec6.8a5ca14"
            ]
        ]
    },
    {
        "id": "40ec11f0.ef42c",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.workstationForm",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "attendance",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "process-check-in-out",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grow-out-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grow-out-harvest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nursery-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nursery-checkout",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-complete",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 10,
        "x": 330,
        "y": 2520,
        "wires": [
            [
                "e3c06501.36aa48"
            ],
            [
                "d2546d1.de76a9"
            ],
            [
                "9a2f72d9.855fb"
            ],
            [
                "884210a7.f3cfb"
            ],
            [
                "135989a1.36cf46"
            ],
            [
                "884210a7.f3cfb"
            ],
            [
                "e7f7d07e.6a81b"
            ],
            [
                "884210a7.f3cfb"
            ],
            [
                "884210a7.f3cfb"
            ],
            [
                "95990f48.a6459"
            ]
        ]
    },
    {
        "id": "a0e08f4f.c8cbf",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 880,
        "y": 2620,
        "wires": []
    },
    {
        "id": "884210a7.f3cfb",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Process completed, cannot delete this submission.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 2620,
        "wires": [
            [
                "a0e08f4f.c8cbf"
            ]
        ]
    },
    {
        "id": "e3c06501.36aa48",
        "type": "subflow:340d7d68.d117b2",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 680,
        "y": 2420,
        "wires": [
            [
                "95990f48.a6459"
            ]
        ]
    },
    {
        "id": "d2546d1.de76a9",
        "type": "subflow:fb81e8b7.35b228",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 680,
        "y": 2460,
        "wires": [
            [
                "95990f48.a6459"
            ]
        ]
    },
    {
        "id": "9a2f72d9.855fb",
        "type": "subflow:6b49a642.175118",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 680,
        "y": 2500,
        "wires": [
            [
                "95990f48.a6459"
            ]
        ]
    },
    {
        "id": "135989a1.36cf46",
        "type": "subflow:d4b8ee96.b716",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 670,
        "y": 2540,
        "wires": [
            [
                "95990f48.a6459"
            ]
        ]
    },
    {
        "id": "e7f7d07e.6a81b",
        "type": "subflow:6781483d.926718",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 700,
        "y": 2580,
        "wires": [
            [
                "95990f48.a6459"
            ]
        ]
    },
    {
        "id": "95990f48.a6459",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "to delete",
        "links": [
            "6d1e0006.33909"
        ],
        "x": 995,
        "y": 2500,
        "wires": []
    },
    {
        "id": "c7147ade.8947d8",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "from delete",
        "links": [
            "3c282c14.98c024"
        ],
        "x": 55,
        "y": 2520,
        "wires": [
            [
                "99f42801.79e3b8"
            ]
        ]
    },
    {
        "id": "6d1e0006.33909",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "from asset",
        "links": [
            "95990f48.a6459"
        ],
        "x": 895,
        "y": 240,
        "wires": [
            [
                "f5b92af9.24a5b8"
            ]
        ]
    },
    {
        "id": "3c282c14.98c024",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "manage asset",
        "links": [
            "c7147ade.8947d8"
        ],
        "x": 1135,
        "y": 200,
        "wires": []
    },
    {
        "id": "6874eb4c.d8eaf4",
        "type": "function",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "func": "let query = {}\n\nquery.id = msg.req.query._id // Required for subflow\nquery.key = msg.req.query._id // Old implementation, still using\n\nmsg.payload = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 160,
        "wires": [
            [
                "c29c411c.6b99b"
            ]
        ]
    },
    {
        "id": "76e1d4ec.7e48cc",
        "type": "cloudantplus in",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "grow-out-setup-id",
        "x": 570,
        "y": 80,
        "wires": [
            [
                "452618b6.0978b8"
            ]
        ]
    },
    {
        "id": "69608cf0.8217a4",
        "type": "function",
        "z": "7e9f6a8.8c1a694",
        "name": "set incomplete",
        "func": "msg.incomplete = msg.payload[0].value.incomplete;\nmsg.incompleteEntry = msg.payload[0].value;\nmsg.update = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "452618b6.0978b8",
        "type": "switch",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 140,
        "wires": [
            [
                "69608cf0.8217a4"
            ],
            []
        ]
    },
    {
        "id": "de2840f1.53633",
        "type": "cloudantplus in",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "nursery-setup-id",
        "x": 570,
        "y": 120,
        "wires": [
            [
                "452618b6.0978b8"
            ]
        ]
    },
    {
        "id": "4e4f7487.bfd9cc",
        "type": "cloudantplus in",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "pupation-setup-id",
        "x": 570,
        "y": 160,
        "wires": [
            [
                "452618b6.0978b8"
            ]
        ]
    },
    {
        "id": "c29c411c.6b99b",
        "type": "switch",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "property": "req.query.form",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "grow-out-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nursery-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grow-out-harvest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "nursery-checkout",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-complete",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 8,
        "x": 350,
        "y": 200,
        "wires": [
            [
                "76e1d4ec.7e48cc"
            ],
            [
                "de2840f1.53633"
            ],
            [
                "4e4f7487.bfd9cc"
            ],
            [
                "fd4d965f.285128"
            ],
            [
                "a5d0fb66.606f28"
            ],
            [
                "a5d0fb66.606f28"
            ],
            [
                "a5d0fb66.606f28"
            ],
            [
                "65028a82.928c24"
            ]
        ]
    },
    {
        "id": "fd4d965f.285128",
        "type": "cloudantplus in",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "pupation-emergence-setup-id",
        "x": 570,
        "y": 200,
        "wires": [
            [
                "452618b6.0978b8"
            ]
        ]
    },
    {
        "id": "5fad8a88.505964",
        "type": "function",
        "z": "7e9f6a8.8c1a694",
        "name": "set to process completed",
        "func": "msg.update = true;\nmsg.incomplete = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 850,
        "y": 440,
        "wires": [
            [
                "75321f05.4dd66"
            ]
        ]
    },
    {
        "id": "7b39fa1d.017514",
        "type": "inject",
        "z": "dc8c4370.78e2",
        "name": "design names",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "[\"blueprint\",\"mustache\",\"sensorDevice\",\"deviceStatus\",\"farmAsset\",\"templateFormSubmission\",\"template\"]",
        "payloadType": "json",
        "x": 180,
        "y": 1240,
        "wires": [
            [
                "595aaab0.95c804"
            ]
        ],
        "info": "# Design names\n\nAdd an array of design document names\nto check. Add these names to the split node\nand provide a template containing the code"
    },
    {
        "id": "3771c4d.c12f93c",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for PUT",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/insectconfig/_design/\"+msg.topic;\nmsg.method=\"PUT\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 1560,
        "wires": [
            [
                "b7e2fe89.7d5ae"
            ]
        ]
    },
    {
        "id": "dda20ec.1c1b0f",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "blueprint",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/blueprint\",\n  \"_rev\": \"24-c06081e4acd6375364dcfaf68b96e0a0\",\n  \"views\": {\n    \"blueprint\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType==\\\"blueprint\\\")\\n  emit([doc.tenant, doc.productionLine, doc.workstationForm], doc);\\n}\"\n    },\n    \"byTenantAndTemplateType\": {\n      \"map\": \"function (doc) {\\n  if (doc.docType === 'blueprint' && doc.templateType) emit([doc.tenant, doc.templateType], doc);\\n}\"\n    },\n    \"byTenantAndTemplateTypeEmpty\": {\n      \"map\": \"function (doc) {\\n  if (doc.docType === 'blueprint' && !doc.templateType) emit(doc.tenant, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 460,
        "y": 1240,
        "wires": [
            [
                "8cb8a084.b4753"
            ]
        ]
    },
    {
        "id": "595aaab0.95c804",
        "type": "split",
        "z": "dc8c4370.78e2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 210,
        "y": 1280,
        "wires": [
            [
                "b0a8357a.fa9268"
            ]
        ]
    },
    {
        "id": "4ff4da37.98ff64",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 790,
        "y": 1400,
        "wires": [
            [
                "5f227c93.b8ec14"
            ]
        ]
    },
    {
        "id": "5f227c93.b8ec14",
        "type": "debug",
        "z": "dc8c4370.78e2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 810,
        "y": 1440,
        "wires": []
    },
    {
        "id": "2dca6a7b.0bbed6",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for GET",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/insectconfig/_design/\"+msg.topic;\nmsg.method=\"GET\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 1440,
        "wires": [
            [
                "2037c4a6.9f9e9c"
            ]
        ]
    },
    {
        "id": "2037c4a6.9f9e9c",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 190,
        "y": 1480,
        "wires": [
            [
                "913dcda5.899b2"
            ]
        ]
    },
    {
        "id": "b0a8357a.fa9268",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 190,
        "y": 1320,
        "wires": [
            [
                "a486cd47.9c1e2"
            ]
        ]
    },
    {
        "id": "8cb8a084.b4753",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "func": "if (msg.existingDoc || msg.existingDoc._rev) {\n    msg.hasRev = true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1240,
        "wires": [
            [
                "cf0820b0.bb8a8"
            ]
        ]
    },
    {
        "id": "cf0820b0.bb8a8",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "property": "hasRev",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 1280,
        "wires": [
            [
                "6245d479.7de6cc"
            ],
            [
                "f85b67aa.53dad8"
            ]
        ]
    },
    {
        "id": "913dcda5.899b2",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "existingDoc",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 160,
        "y": 1520,
        "wires": [
            [
                "3771c4d.c12f93c"
            ]
        ]
    },
    {
        "id": "6245d479.7de6cc",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload._rev",
                "pt": "msg",
                "to": "existingDoc._rev",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 1320,
        "wires": [
            [
                "4ff4da37.98ff64"
            ]
        ]
    },
    {
        "id": "b7e2fe89.7d5ae",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "design names",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "blueprint",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "mustache",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensorDevice",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "deviceStatus",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "farmAsset",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "templateFormSubmission",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "template",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 7,
        "x": 180,
        "y": 1640,
        "wires": [
            [
                "dda20ec.1c1b0f"
            ],
            [
                "28a9c72.b2c6a38"
            ],
            [
                "9e414c21.3606f"
            ],
            [
                "99bac066.86779"
            ],
            [
                "f3c862b2.8b64f"
            ],
            [
                "894d8151.3c537"
            ],
            [
                "2d4e3fd4.8dd0c"
            ]
        ]
    },
    {
        "id": "9a9f949e.d70988",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "insectconfig db",
        "info": "",
        "x": 180,
        "y": 1200,
        "wires": []
    },
    {
        "id": "f85b67aa.53dad8",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload._rev",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 750,
        "y": 1360,
        "wires": [
            [
                "4ff4da37.98ff64"
            ]
        ]
    },
    {
        "id": "ff7dfb3b.72f4a8",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "template here",
        "info": "",
        "x": 450,
        "y": 1200,
        "wires": []
    },
    {
        "id": "a486cd47.9c1e2",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "should delay?",
        "property": "ENVIRONMENT",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "production",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 1360,
        "wires": [
            [
                "dcfd430e.2fb4"
            ],
            [
                "2dca6a7b.0bbed6"
            ]
        ]
    },
    {
        "id": "dcfd430e.2fb4",
        "type": "delay",
        "z": "dc8c4370.78e2",
        "name": "",
        "pauseType": "rate",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 190,
        "y": 1400,
        "wires": [
            [
                "2dca6a7b.0bbed6"
            ]
        ]
    },
    {
        "id": "28a9c72.b2c6a38",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "mustache",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/mustache\",\n  \"views\": {\n    \"mustache\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType == \\\"mustache\\\")\\n  emit([doc.tenant, doc.productionLine, doc.workstationForm, doc.templateType], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 460,
        "y": 1280,
        "wires": [
            [
                "8cb8a084.b4753"
            ]
        ]
    },
    {
        "id": "c939f9c7.91d818",
        "type": "link in",
        "z": "13812a6.98277d6",
        "name": "to Select Option with Template Type",
        "links": [
            "4fecbddd.d32b34"
        ],
        "x": 215,
        "y": 140,
        "wires": [
            [
                "23fae7b1.9c61e8"
            ]
        ]
    },
    {
        "id": "23fae7b1.9c61e8",
        "type": "switch",
        "z": "13812a6.98277d6",
        "name": "",
        "property": "req.query._id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 140,
        "wires": [
            [
                "a7c24f40.a0794"
            ],
            [
                "c5b225f3.c7c6b8"
            ]
        ]
    },
    {
        "id": "3b1d7e2f.272db2",
        "type": "switch",
        "z": "13812a6.98277d6",
        "name": "",
        "property": "req.params.key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensorDeviceId",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensorDeviceLocation",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 480,
        "wires": [
            [
                "97e047ff.b46e48"
            ],
            [
                "aae98656.7bb688"
            ],
            [
                "14e7de1e.dbeac2"
            ]
        ]
    },
    {
        "id": "179bd3f0.b26d8c",
        "type": "http response",
        "z": "13812a6.98277d6",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 640,
        "y": 520,
        "wires": []
    },
    {
        "id": "ac709f6c.9f1de",
        "type": "link in",
        "z": "25e5a6ec.1bd6ca",
        "name": "to Forms API with Template Type - Create Ops",
        "links": [
            "ae2fe75a.a38d28"
        ],
        "x": 175,
        "y": 80,
        "wires": [
            [
                "f75e945.80e6668"
            ]
        ]
    },
    {
        "id": "ae2fe75a.a38d28",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "from Forms API",
        "links": [
            "ac709f6c.9f1de"
        ],
        "x": 595,
        "y": 1100,
        "wires": []
    },
    {
        "id": "ecfddfe.cd2772",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Handles template type on other flow page",
        "info": "",
        "x": 580,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4820b8b5.93eb88",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "original",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "templateType",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 1120,
        "wires": [
            [
                "ae2fe75a.a38d28"
            ],
            [
                "5a6f3526.0d213c"
            ]
        ]
    },
    {
        "id": "8b3bee2c.f30bc",
        "type": "http response",
        "z": "2811332b.6f138c",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 540,
        "y": 220,
        "wires": []
    },
    {
        "id": "b95c1dd1.a2e8",
        "type": "cloudantplus in",
        "z": "13812a6.98277d6",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByProvisionedEmpty-deviceClass",
        "x": 630,
        "y": 440,
        "wires": [
            [
                "57c8262.aa126d8"
            ]
        ]
    },
    {
        "id": "1f2ba3fc.42eb4c",
        "type": "http response",
        "z": "13812a6.98277d6",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 960,
        "y": 440,
        "wires": []
    },
    {
        "id": "57c8262.aa126d8",
        "type": "function",
        "z": "13812a6.98277d6",
        "name": "structure",
        "func": "let options = []\n\nfor (let payload of msg.payload) {\n    let deviceName = payload.value.deviceName\n    let deviceId = payload.value.deviceId \n    \n    options.push({\n        label: deviceName + ': ' + deviceId,\n        value: payload.value.deviceId\n    })\n}\n\nmsg.payload = options\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 440,
        "wires": [
            [
                "1f2ba3fc.42eb4c"
            ]
        ]
    },
    {
        "id": "fb31a570.aafa58",
        "type": "cloudantplus in",
        "z": "2811332b.6f138c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByProvisionedEmpty",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "3b427ca5.658474"
            ]
        ]
    },
    {
        "id": "a8c6fd8c.59e12",
        "type": "function",
        "z": "2811332b.6f138c",
        "name": "query",
        "func": "msg.parentDataId = msg.payload // Old\nmsg.masterDataId = msg.payload // New\nmsg.payload = {key: msg.original.sensorDeviceId}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "fb31a570.aafa58"
            ]
        ]
    },
    {
        "id": "64f9d208.7328ac",
        "type": "function",
        "z": "2811332b.6f138c",
        "name": "structure",
        "func": "// Provision the device and create proper device name\n\nlet originalDeviceLocation = msg.original.sensorDeviceLocation\n\nlet deviceConfig = msg.payload[0].value\nlet deviceLocation = msg.original.sensorDeviceLocation\nlet deviceClassInitial = msg.original.sensorDeviceClassInitial\nlet deviceNameSuffix = msg.original.sensorDeviceNameSuffix\nlet deviceAlias = msg.original.sensorDeviceAlias\nlet deviceName\n\n// Cannot have dash (-) in naming\ndeviceLocation = replacer(deviceLocation, '-', '_')\ndeviceClassInitial = replacer(deviceClassInitial, '-', '_')\ndeviceNameSuffix = replacer(deviceNameSuffix, '-', '_')\n\n// Name it as <location>-<device_class>-<suffix>\ndeviceName = deviceLocation + '-'\ndeviceName = deviceName + deviceClassInitial + '-'\ndeviceName = deviceName + deviceNameSuffix\n\ndeviceConfig['deviceName'] = deviceName\ndeviceConfig['location'] = originalDeviceLocation\ndeviceConfig['provisioned'] = true\ndeviceConfig['deviceAlias'] = deviceAlias\n\nmsg.deviceConfig = deviceConfig\nmsg.payload = deviceConfig\nreturn msg;\n\nfunction replacer(data, a, b) {\n    return data.split('-').join('_')\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 200,
        "y": 220,
        "wires": [
            [
                "9462c83.6354338"
            ]
        ]
    },
    {
        "id": "9462c83.6354338",
        "type": "cloudantplus out",
        "z": "2811332b.6f138c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 370,
        "y": 220,
        "wires": [
            [
                "8b3bee2c.f30bc",
                "d169974c.d5e6f8"
            ]
        ]
    },
    {
        "id": "9e414c21.3606f",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "sensorDevice",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/sensorDevice\",\n  \"_rev\": \"54-aac13b2141b96ed602c23dfe39fd9e85\",\n  \"views\": {\n    \"findByDeviceId\": {\n      \"map\": \"function (doc) {\\n  if (doc.docType === 'sensorDevice') emit(doc.deviceId, doc);\\n}\"\n    },\n    \"findByProvisionedEmpty\": {\n      \"map\": \"function (doc) {\\n  if (doc.docType === 'sensorDevice' && !doc.provisioned) emit(doc.deviceId, doc);\\n}\"\n    },\n    \"findByProvisionedEmpty-deviceClass\": {\n      \"map\": \"function (doc) {\\n  if (doc.docType === 'sensorDevice' && !doc.provisioned) emit(doc.deviceClass, doc);\\n}\"\n    },\n    \"findByProvisioned\": {\n      \"map\": \"function (doc) {\\n  if (doc.docType === 'sensorDevice' && doc.provisioned) emit(doc.deviceId, doc);\\n}\"\n    },\n    \"findByParentDataId\": {\n      \"map\": \"function (doc) {\\n  if (doc.docType === 'sensorDevice') emit(doc.parentDataId, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 480,
        "y": 1320,
        "wires": [
            [
                "8cb8a084.b4753"
            ]
        ]
    },
    {
        "id": "14e7de1e.dbeac2",
        "type": "function",
        "z": "13812a6.98277d6",
        "name": "structure",
        "func": "msg.payload = {message: 'Required missing field - sensorDeviceId'}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 520,
        "wires": [
            [
                "179bd3f0.b26d8c"
            ]
        ]
    },
    {
        "id": "7a6d1aab.dd7614",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Handles template type on other flow page",
        "info": "",
        "x": 600,
        "y": 1320,
        "wires": []
    },
    {
        "id": "17029410.68744c",
        "type": "link in",
        "z": "25e5a6ec.1bd6ca",
        "name": "to Forms API with Template Type - Default Value Ops",
        "links": [
            "6563e1e0.64e3c"
        ],
        "x": 175,
        "y": 200,
        "wires": [
            [
                "5c1ee6d.145cc18"
            ]
        ]
    },
    {
        "id": "672266d4.9f48a8",
        "type": "switch",
        "z": "37c11998.4fe1a6",
        "name": "",
        "property": "payload.templateType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 310,
        "y": 160,
        "wires": [
            [
                "1df79cf6.017a53"
            ]
        ]
    },
    {
        "id": "1df79cf6.017a53",
        "type": "link out",
        "z": "37c11998.4fe1a6",
        "name": "",
        "links": [
            "4c3f7e01.32bef",
            "73d341df.95c9b",
            "73e77ee2.a3a19",
            "7884bab5.678f24"
        ],
        "x": 415,
        "y": 160,
        "wires": []
    },
    {
        "id": "8c1d4161.7507",
        "type": "comment",
        "z": "37c11998.4fe1a6",
        "name": "Support for different templateType",
        "info": "",
        "x": 400,
        "y": 120,
        "wires": []
    },
    {
        "id": "fb2a46ef.b1f318",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "templateType",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 2060,
        "wires": [
            [
                "1abbec1e.2dd6e4"
            ],
            [
                "d92dba19.eda338"
            ]
        ]
    },
    {
        "id": "1abbec1e.2dd6e4",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "from Forms API update endpoint",
        "links": [
            "73812e42.01f0f"
        ],
        "x": 295,
        "y": 1960,
        "wires": []
    },
    {
        "id": "234d1ac3.cd47d6",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Handles template type on other flow page",
        "info": "",
        "x": 260,
        "y": 1920,
        "wires": []
    },
    {
        "id": "31acb2c9.db5e5e",
        "type": "comment",
        "z": "25e5a6ec.1bd6ca",
        "name": "Update Ops",
        "info": "",
        "x": 230,
        "y": 420,
        "wires": []
    },
    {
        "id": "d85544fe.f845a8",
        "type": "comment",
        "z": "7fc5df76.10c99",
        "name": "Support for different templateType",
        "info": "",
        "x": 400,
        "y": 80,
        "wires": []
    },
    {
        "id": "73812e42.01f0f",
        "type": "link in",
        "z": "25e5a6ec.1bd6ca",
        "name": "to Forms API with Template Type - Update Ops",
        "links": [
            "1abbec1e.2dd6e4"
        ],
        "x": 175,
        "y": 460,
        "wires": [
            [
                "6b8dec18.b890c4"
            ]
        ]
    },
    {
        "id": "c1dcdb80.7b5c18",
        "type": "switch",
        "z": "7fc5df76.10c99",
        "name": "",
        "property": "payload.templateType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 310,
        "y": 120,
        "wires": [
            [
                "24e86997.8196e6"
            ]
        ]
    },
    {
        "id": "24e86997.8196e6",
        "type": "link out",
        "z": "7fc5df76.10c99",
        "name": "",
        "links": [
            "a3866ca8.a8a9d"
        ],
        "x": 415,
        "y": 120,
        "wires": []
    },
    {
        "id": "29506980.ab9856",
        "type": "comment",
        "z": "7fc5df76.10c99",
        "name": "Update Ops - device",
        "info": "",
        "x": 350,
        "y": 200,
        "wires": []
    },
    {
        "id": "a3866ca8.a8a9d",
        "type": "link in",
        "z": "7fc5df76.10c99",
        "name": "",
        "links": [
            "24e86997.8196e6"
        ],
        "x": 195,
        "y": 240,
        "wires": [
            [
                "6301f592.df587c"
            ]
        ]
    },
    {
        "id": "35565d58.765d62",
        "type": "cloudantplus in",
        "z": "7fc5df76.10c99",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "sensorDevice",
        "index": "findByDeviceId",
        "x": 470,
        "y": 240,
        "wires": [
            [
                "5ae6bdef.30ede4"
            ]
        ]
    },
    {
        "id": "6301f592.df587c",
        "type": "function",
        "z": "7fc5df76.10c99",
        "name": "query",
        "func": "msg.original = {...msg.payload}\nmsg.payload = msg.payload._id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 240,
        "wires": [
            [
                "35565d58.765d62"
            ]
        ]
    },
    {
        "id": "5ae6bdef.30ede4",
        "type": "function",
        "z": "7fc5df76.10c99",
        "name": "query",
        "func": "msg.parentData = msg.payload\nmsg.payload = {key: msg.parentData.sensorDeviceId}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 240,
        "wires": [
            [
                "dc7fc6eb.a82c48"
            ]
        ]
    },
    {
        "id": "bf81d2d3.bcd8d",
        "type": "http response",
        "z": "7fc5df76.10c99",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 660,
        "y": 440,
        "wires": []
    },
    {
        "id": "dc7fc6eb.a82c48",
        "type": "cloudantplus in",
        "z": "7fc5df76.10c99",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByDeviceId",
        "x": 790,
        "y": 240,
        "wires": [
            [
                "318545e3.2d4d9a"
            ]
        ]
    },
    {
        "id": "e994f798.5d5868",
        "type": "cloudantplus in",
        "z": "d9875fbc.357c8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByProvisioned",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "5b419536.38833c"
            ]
        ]
    },
    {
        "id": "99bac066.86779",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "deviceStatus",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/deviceStatus\",\n  \"views\": {\n    \"deviceLastCom\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType == \\\"deviceLastCom\\\")\\n  emit(doc.docType, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 470,
        "y": 1360,
        "wires": [
            [
                "8cb8a084.b4753"
            ]
        ]
    },
    {
        "id": "24cc6ddb.3f7f72",
        "type": "http response",
        "z": "b64a879b.6b9f18",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 820,
        "y": 2200,
        "wires": []
    },
    {
        "id": "8d01855e.807068",
        "type": "function",
        "z": "b64a879b.6b9f18",
        "name": "hasAccessTrueOrFalse",
        "func": "let arrayRole = msg.req.query.role.split(',');\nfor (var i = 0; i < arrayRole.length; i++) {\n    if (msg.token.level == arrayRole[i]) {\n        msg.payload = {\n            \"role\": arrayRole[i],\n            \"hasAccess\": true\n        }\n        return msg;\n    }\n}\n\nmsg.payload = {\n        \"role\": msg.token.level,\n        \"hasAccess\": false\n    }\n    \nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 2200,
        "wires": [
            [
                "24cc6ddb.3f7f72"
            ]
        ]
    },
    {
        "id": "661841a0.45e37",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "b64a879b.6b9f18",
        "name": "",
        "env": [],
        "x": 400,
        "y": 2200,
        "wires": [
            [
                "8d01855e.807068"
            ]
        ]
    },
    {
        "id": "54ee2980.9a4228",
        "type": "http in",
        "z": "b64a879b.6b9f18",
        "name": "",
        "url": "/api/user/role",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 2200,
        "wires": [
            [
                "661841a0.45e37"
            ]
        ]
    },
    {
        "id": "8ca5bd59.632e6",
        "type": "comment",
        "z": "b64a879b.6b9f18",
        "name": "Checks given user role",
        "info": "",
        "x": 220,
        "y": 2160,
        "wires": []
    },
    {
        "id": "fb85eeee.0d7a5",
        "type": "cloudantplus in",
        "z": "13812a6.98277d6",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByProvisionedEmpty",
        "x": 1290,
        "y": 300,
        "wires": [
            [
                "85e5770c.e87dd8"
            ]
        ]
    },
    {
        "id": "85e5770c.e87dd8",
        "type": "function",
        "z": "13812a6.98277d6",
        "name": "structure",
        "func": "if (msg.payload) for (let payload of msg.payload) {\n    msg.options.push({\n        label: payload.value.deviceId,\n        value: payload.value.deviceId\n    })\n}\n\nmsg.payload = msg.options\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1460,
        "y": 300,
        "wires": [
            [
                "30fbcfb9.10c9b"
            ]
        ]
    },
    {
        "id": "fbec6645.0188d8",
        "type": "function",
        "z": "13812a6.98277d6",
        "name": "query",
        "func": "msg.payload = msg.payload._id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 300,
        "wires": [
            [
                "50314efe.122ba"
            ]
        ]
    },
    {
        "id": "30fbcfb9.10c9b",
        "type": "http response",
        "z": "13812a6.98277d6",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1620,
        "y": 300,
        "wires": []
    },
    {
        "id": "318545e3.2d4d9a",
        "type": "switch",
        "z": "7fc5df76.10c99",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 950,
        "y": 240,
        "wires": [
            [
                "f96ca97a.52d158"
            ],
            [
                "2e0dff3a.5b5e4"
            ]
        ]
    },
    {
        "id": "f96ca97a.52d158",
        "type": "function",
        "z": "7fc5df76.10c99",
        "name": "structure",
        "func": "msg.payload = {message: \"Device not found\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1100,
        "y": 220,
        "wires": [
            [
                "8a72648d.27ef68"
            ]
        ]
    },
    {
        "id": "8a72648d.27ef68",
        "type": "http response",
        "z": "7fc5df76.10c99",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1260,
        "y": 220,
        "wires": []
    },
    {
        "id": "7e5d24d1.73e22c",
        "type": "link in",
        "z": "7fc5df76.10c99",
        "name": "",
        "links": [
            "2e0dff3a.5b5e4"
        ],
        "x": 195,
        "y": 340,
        "wires": [
            [
                "b120661b.f69fa8"
            ]
        ]
    },
    {
        "id": "2e0dff3a.5b5e4",
        "type": "link out",
        "z": "7fc5df76.10c99",
        "name": "",
        "links": [
            "7e5d24d1.73e22c"
        ],
        "x": 1055,
        "y": 260,
        "wires": []
    },
    {
        "id": "3b4f1ff.ac9a0e",
        "type": "comment",
        "z": "7fc5df76.10c99",
        "name": "Update Ops - misprovision then provision device",
        "info": "",
        "x": 440,
        "y": 300,
        "wires": []
    },
    {
        "id": "b120661b.f69fa8",
        "type": "function",
        "z": "7fc5df76.10c99",
        "name": "structure",
        "func": "msg.payload = msg.payload[0].value\n\ndelete msg.payload.parentDataId\ndelete msg.payload.provisioned\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 340,
        "wires": [
            [
                "49ab7c2a.5666e4"
            ]
        ]
    },
    {
        "id": "49ab7c2a.5666e4",
        "type": "cloudantplus out",
        "z": "7fc5df76.10c99",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "5dcbc5c1.82e41c"
            ]
        ]
    },
    {
        "id": "e3f9b203.0b5df",
        "type": "cloudantplus out",
        "z": "7fc5df76.10c99",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1150,
        "y": 340,
        "wires": [
            [
                "f8b29951.969e58"
            ]
        ]
    },
    {
        "id": "8f305730.ff6978",
        "type": "comment",
        "z": "13812a6.98277d6",
        "name": "Update Ops - Device Options",
        "info": "- parentDataId also known as master record",
        "x": 320,
        "y": 260,
        "wires": []
    },
    {
        "id": "72b2116a.c3427",
        "type": "cloudantplus in",
        "z": "13812a6.98277d6",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByDeviceId",
        "x": 950,
        "y": 300,
        "wires": [
            [
                "8192c80e.f43f38"
            ]
        ]
    },
    {
        "id": "8192c80e.f43f38",
        "type": "function",
        "z": "13812a6.98277d6",
        "name": "structure",
        "func": "let parentData = msg.payload[0].value\n\nmsg.options = [\n    {\n        label: parentData.deviceId,\n        value: parentData.deviceId\n    }\n]\nmsg.payload = {key: msg.deviceInfo.workstationForm}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 300,
        "wires": [
            [
                "fb85eeee.0d7a5"
            ]
        ]
    },
    {
        "id": "9798621a.cf9cc",
        "type": "link in",
        "z": "13812a6.98277d6",
        "name": "",
        "links": [
            "e88e47a8.87fb58",
            "a7c24f40.a0794"
        ],
        "x": 215,
        "y": 300,
        "wires": [
            [
                "d52fe42a.bcc988"
            ]
        ]
    },
    {
        "id": "5dcbc5c1.82e41c",
        "type": "function",
        "z": "7fc5df76.10c99",
        "name": "query",
        "func": "msg.payload = {key: msg.original.sensorDeviceId}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 340,
        "wires": [
            [
                "63e72ad4.cfb034"
            ]
        ]
    },
    {
        "id": "63e72ad4.cfb034",
        "type": "cloudantplus in",
        "z": "7fc5df76.10c99",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByDeviceId",
        "x": 810,
        "y": 340,
        "wires": [
            [
                "af703014.3c97b"
            ]
        ]
    },
    {
        "id": "f8b29951.969e58",
        "type": "link out",
        "z": "7fc5df76.10c99",
        "name": "",
        "links": [
            "1dd8afda.8366d"
        ],
        "x": 1275,
        "y": 340,
        "wires": []
    },
    {
        "id": "1dd8afda.8366d",
        "type": "link in",
        "z": "7fc5df76.10c99",
        "name": "",
        "links": [
            "f8b29951.969e58"
        ],
        "x": 195,
        "y": 440,
        "wires": [
            [
                "fda1ad6c.f9c18"
            ]
        ]
    },
    {
        "id": "e437f9b7.31b298",
        "type": "comment",
        "z": "7fc5df76.10c99",
        "name": "Update Ops - Update the parent data",
        "info": "",
        "x": 400,
        "y": 400,
        "wires": []
    },
    {
        "id": "fda1ad6c.f9c18",
        "type": "function",
        "z": "7fc5df76.10c99",
        "name": "structure",
        "func": "let payload = {...msg.original}\n\npayload['sensorDeviceName'] = msg.deviceConfig.deviceName\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 440,
        "wires": [
            [
                "92264224.a106f"
            ]
        ]
    },
    {
        "id": "92264224.a106f",
        "type": "cloudantplus out",
        "z": "7fc5df76.10c99",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 490,
        "y": 440,
        "wires": [
            [
                "bf81d2d3.bcd8d"
            ]
        ]
    },
    {
        "id": "99f42801.79e3b8",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "req.query",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "templateType",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 2520,
        "wires": [
            [
                "8aad74eb.d3c0a8"
            ],
            [
                "40ec11f0.ef42c"
            ]
        ]
    },
    {
        "id": "8aad74eb.d3c0a8",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "from Forms API - Delete endpoint",
        "links": [
            "14703e2b.cb3a32"
        ],
        "x": 295,
        "y": 2420,
        "wires": []
    },
    {
        "id": "a0cefd80.f5afa",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Handles template type on other flow page",
        "info": "",
        "x": 280,
        "y": 2380,
        "wires": []
    },
    {
        "id": "14703e2b.cb3a32",
        "type": "link in",
        "z": "25e5a6ec.1bd6ca",
        "name": "to Forms API with Template Type - Delete Ops",
        "links": [
            "8aad74eb.d3c0a8"
        ],
        "x": 175,
        "y": 940,
        "wires": [
            [
                "914c5bfb.94b7d8"
            ]
        ]
    },
    {
        "id": "b10278fa.8ae2f8",
        "type": "comment",
        "z": "25e5a6ec.1bd6ca",
        "name": "Delete Ops",
        "info": "",
        "x": 300,
        "y": 860,
        "wires": []
    },
    {
        "id": "32ae62b8.554a9e",
        "type": "comment",
        "z": "25e5a6ec.1bd6ca",
        "name": "Delete Ops - Support for different templateType",
        "info": "",
        "x": 420,
        "y": 900,
        "wires": []
    },
    {
        "id": "914c5bfb.94b7d8",
        "type": "switch",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "property": "payload.templateType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 940,
        "wires": [
            [
                "3e317c86.b94794"
            ]
        ]
    },
    {
        "id": "3e317c86.b94794",
        "type": "link out",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "links": [
            "e6ed25e4.2fb188"
        ],
        "x": 395,
        "y": 940,
        "wires": []
    },
    {
        "id": "e6ed25e4.2fb188",
        "type": "link in",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "links": [
            "3e317c86.b94794"
        ],
        "x": 175,
        "y": 1060,
        "wires": [
            [
                "35452107.9ab7ae"
            ]
        ]
    },
    {
        "id": "6d7cd29e.dde85c",
        "type": "comment",
        "z": "25e5a6ec.1bd6ca",
        "name": "Delete Ops - templateType=device",
        "info": "",
        "x": 380,
        "y": 1020,
        "wires": []
    },
    {
        "id": "386d392.c7519c6",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "api/:tenant/forms/monitor-grow-out-chamber",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 2320,
        "wires": [
            [
                "30b720f2.bd753"
            ]
        ]
    },
    {
        "id": "30b720f2.bd753",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "// let query = {\n//     \"selector\": {\n//         \"docType\":\"select-option\",\n//         \"type\": msg.req.params.key,\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\nlet query = {}\nquery[\"key\"] = [msg.req.params.tenant, \"growthChamberId\"]\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 2320,
        "wires": [
            [
                "fa63f61a.2a2618"
            ]
        ]
    },
    {
        "id": "fa63f61a.2a2618",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 670,
        "y": 2320,
        "wires": [
            [
                "b0f4411c.d9ace"
            ]
        ]
    },
    {
        "id": "4384dff3.cb2c9",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "const chamber = msg.payload[0].value;\nvar resultList = []\nfor(let key in chamber.options){\n    var option = chamber.options[key]\n    var output = {}\n    output.value = key;\n    output.label = option.label;\n    output.rackIdList = []\n    for(let key1 in option.rackIdList){\n        var rack = option.rackIdList[key1]\n        rack.value = key1;\n        output.rackIdList.push(rack)\n    }\n    resultList.push(output);\n}\nmsg.payload = resultList;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 2300,
        "wires": [
            [
                "24251d33.161dc2"
            ]
        ]
    },
    {
        "id": "b0f4411c.d9ace",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 830,
        "y": 2320,
        "wires": [
            [
                "4384dff3.cb2c9"
            ],
            [
                "6232c9a1.d66498"
            ],
            [
                "2492c88a.d0c3e8"
            ]
        ]
    },
    {
        "id": "6232c9a1.d66498",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 2360,
        "wires": [
            [
                "46f043b9.fd933c"
            ]
        ]
    },
    {
        "id": "2492c88a.d0c3e8",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 2420,
        "wires": [
            [
                "bec087f1.028a78"
            ]
        ]
    },
    {
        "id": "bec087f1.028a78",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1300,
        "y": 2420,
        "wires": []
    },
    {
        "id": "46f043b9.fd933c",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1280,
        "y": 2360,
        "wires": []
    },
    {
        "id": "24251d33.161dc2",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1200,
        "y": 2300,
        "wires": []
    },
    {
        "id": "4a22563f.089b48",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "Growth Chamber Monitor",
        "info": "",
        "x": 150,
        "y": 2280,
        "wires": []
    },
    {
        "id": "89a13b85.d339e8",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "api/:tenant/dashboard/monitor-grow-out-chamber/rack",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 2600,
        "wires": [
            [
                "dc066892.a8d228"
            ]
        ]
    },
    {
        "id": "bb8065ea.13c428",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "grow-out-setup",
        "x": 340,
        "y": 2660,
        "wires": [
            [
                "8701898b.4bfe38"
            ]
        ]
    },
    {
        "id": "dcd63476.870298",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "let rack = msg.payload[0].value;\nmsg.payload = rack.growOutSetupId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 2640,
        "wires": [
            [
                "f9ae8f42.bf416"
            ]
        ]
    },
    {
        "id": "8701898b.4bfe38",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 2660,
        "wires": [
            [
                "dcd63476.870298"
            ],
            [
                "fe3af854.64b658"
            ],
            [
                "79ccb60c.da6218"
            ]
        ]
    },
    {
        "id": "79ccb60c.da6218",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.payload = {\n    \"message\": \"Rack not found\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 2720,
        "wires": [
            [
                "bd5c9a79.319b18"
            ]
        ]
    },
    {
        "id": "bd5c9a79.319b18",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 180,
        "y": 2760,
        "wires": []
    },
    {
        "id": "fe3af854.64b658",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.payload = {\n    \"message\": \"Multiple Racks found\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 2720,
        "wires": [
            [
                "6290f299.5ef8cc"
            ]
        ]
    },
    {
        "id": "6290f299.5ef8cc",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 420,
        "y": 2760,
        "wires": []
    },
    {
        "id": "f9ae8f42.bf416",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 740,
        "y": 2680,
        "wires": [
            [
                "9e1bd7d7.7d74a8"
            ]
        ]
    },
    {
        "id": "9e1bd7d7.7d74a8",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 2740,
        "wires": [
            [
                "60042003.9e9a7"
            ],
            [
                "9c20569f.8c8878"
            ]
        ]
    },
    {
        "id": "9c20569f.8c8878",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.payload = {\n    \"message\": \"Rack not found\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 2780,
        "wires": [
            [
                "e71967bc.9afa58"
            ]
        ]
    },
    {
        "id": "e71967bc.9afa58",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 720,
        "y": 2820,
        "wires": []
    },
    {
        "id": "5939cef3.be15f",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 910,
        "y": 2800,
        "wires": []
    },
    {
        "id": "60042003.9e9a7",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Delete unused field",
        "func": "delete msg.payload._rev\ndelete msg.payload._id\ndelete msg.payload.tenant\ndelete msg.payload.workstationForm\ndelete msg.payload.productionLine\ndelete msg.payload.dataRecord\ndelete msg.payload.daily_index\ndelete msg.payload.user_id\ndelete msg.payload.form_id\ndelete msg.payload.form_version\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 930,
        "y": 2740,
        "wires": [
            [
                "5939cef3.be15f"
            ]
        ]
    },
    {
        "id": "dd0ebc94.54171",
        "type": "cloudantplus in",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByDeviceId",
        "x": 450,
        "y": 1060,
        "wires": [
            [
                "23166f1.70fc29"
            ]
        ]
    },
    {
        "id": "35452107.9ab7ae",
        "type": "function",
        "z": "25e5a6ec.1bd6ca",
        "name": "query",
        "func": "msg.parentData = {...msg.payload}\nmsg.payload = {key: msg.parentData.sensorDeviceId}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 290,
        "y": 1060,
        "wires": [
            [
                "dd0ebc94.54171"
            ]
        ]
    },
    {
        "id": "23166f1.70fc29",
        "type": "switch",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 1060,
        "wires": [
            [
                "73d31b9d.9eb504"
            ],
            [
                "9f1f43ce.7175c"
            ]
        ]
    },
    {
        "id": "73d31b9d.9eb504",
        "type": "function",
        "z": "25e5a6ec.1bd6ca",
        "name": "structure",
        "func": "msg.payload = {message: \"This form do have device assigned to it.\"}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 1040,
        "wires": [
            [
                "73885405.609aac"
            ]
        ]
    },
    {
        "id": "73885405.609aac",
        "type": "http response",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 920,
        "y": 1040,
        "wires": []
    },
    {
        "id": "81782a2.5f0f5d8",
        "type": "comment",
        "z": "25e5a6ec.1bd6ca",
        "name": "Delete Ops - Misprovision device",
        "info": "",
        "x": 370,
        "y": 1140,
        "wires": []
    },
    {
        "id": "fef96b56.477f68",
        "type": "function",
        "z": "25e5a6ec.1bd6ca",
        "name": "structure",
        "func": "msg.payload = msg.payload[0].value\n\ndelete msg.payload.parentDataId\ndelete msg.payload.provisioned\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 1180,
        "wires": [
            [
                "bd56244c.c41278"
            ]
        ]
    },
    {
        "id": "bd56244c.c41278",
        "type": "cloudantplus out",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 470,
        "y": 1180,
        "wires": [
            [
                "a89b15bb.340808"
            ]
        ]
    },
    {
        "id": "9f1f43ce.7175c",
        "type": "link out",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "links": [
            "5a578d27.7fb424"
        ],
        "x": 715,
        "y": 1080,
        "wires": []
    },
    {
        "id": "5a578d27.7fb424",
        "type": "link in",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "links": [
            "9f1f43ce.7175c"
        ],
        "x": 175,
        "y": 1180,
        "wires": [
            [
                "fef96b56.477f68"
            ]
        ]
    },
    {
        "id": "9ec85a26.a8e368",
        "type": "http response",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 640,
        "y": 1280,
        "wires": []
    },
    {
        "id": "a96aabc0.93b808",
        "type": "link in",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "links": [
            "a89b15bb.340808"
        ],
        "x": 175,
        "y": 1280,
        "wires": [
            [
                "32d889d4.258de6"
            ]
        ]
    },
    {
        "id": "721e7c8c.070ea4",
        "type": "comment",
        "z": "25e5a6ec.1bd6ca",
        "name": "Delete Ops - Update the parent data",
        "info": "",
        "x": 380,
        "y": 1240,
        "wires": []
    },
    {
        "id": "32d889d4.258de6",
        "type": "function",
        "z": "25e5a6ec.1bd6ca",
        "name": "structure",
        "func": "msg.payload = {...msg.parentData}\nmsg.payload['deleted'] = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 1280,
        "wires": [
            [
                "6dc6ac5a.932c24"
            ]
        ]
    },
    {
        "id": "6dc6ac5a.932c24",
        "type": "cloudantplus out",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 470,
        "y": 1280,
        "wires": [
            [
                "9ec85a26.a8e368"
            ]
        ]
    },
    {
        "id": "a89b15bb.340808",
        "type": "link out",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "links": [
            "a96aabc0.93b808"
        ],
        "x": 595,
        "y": 1180,
        "wires": []
    },
    {
        "id": "c20d19a.a3138e8",
        "type": "comment",
        "z": "6b99fc65.0259d4",
        "name": "Post with validating that form attribute exists",
        "info": "",
        "x": 250,
        "y": 520,
        "wires": []
    },
    {
        "id": "b1530ce9.06702",
        "type": "comment",
        "z": "6b99fc65.0259d4",
        "name": "Raw data post",
        "info": "",
        "x": 160,
        "y": 400,
        "wires": []
    },
    {
        "id": "a9394bbb.bb8258",
        "type": "switch",
        "z": "6b99fc65.0259d4",
        "name": "",
        "property": "payload.ID",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "C82ECCD108F0",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "EVM2",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 300,
        "wires": [
            [
                "49b06e79.f17db",
                "73007e49.cd227",
                "3c8f4a5f.c65216",
                "6cf4af9.bafdb5",
                "79965b75.b7d694",
                "c6881b63.72d218",
                "f94ef118.b0aec",
                "2349e327.07320c",
                "51ae6b5c.37f0b4",
                "802e7c82.4e0bd"
            ],
            []
        ]
    },
    {
        "id": "49b06e79.f17db",
        "type": "change",
        "z": "6b99fc65.0259d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.location",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "3c8f4a5f.c65216",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "",
        "func": "var ts = msg.payload.ts;\nts = ts + 28800;\nts = ts * 1000;\n\nmsg.payload = new Date(ts);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "73007e49.cd227",
        "type": "change",
        "z": "6b99fc65.0259d4",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.ID",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1240,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "79965b75.b7d694",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "",
        "func": "var humArr = flow.get(\"hum\") || [];\nvar currentHum = msg.payload.hum;\nhumArr.push(currentHum)\nif(humArr.length>5){\n    humArr.shift();\n}\nflow.set(\"hum\", humArr);\nvar avg = humArr.reduce((a,b)=>(a+b)) / humArr.length;\n\nmsg.payload = {}\nmsg.payload.value = parseFloat(currentHum.toFixed(1));\nmsg.payload.differentValue = parseFloat((currentHum - avg).toFixed(2));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "c6881b63.72d218",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "",
        "func": "var presArr = flow.get(\"pres\") || [];\nvar currentPres = msg.payload.pres;\npresArr.push(currentPres)\nif(presArr.length>5){\n    presArr.shift();\n}\nflow.set(\"pres\", presArr);\nvar avg = presArr.reduce((a,b)=>(a+b)) / presArr.length;\n\nmsg.payload = {}\nmsg.payload.value = parseFloat(currentPres.toFixed(1));\nmsg.payload.differentValue = parseFloat((currentPres - avg).toFixed(2));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 320,
        "wires": [
            []
        ]
    },
    {
        "id": "f94ef118.b0aec",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "",
        "func": "var gasArr = flow.get(\"gas\") || [];\nvar currentGas = msg.payload.gas;\ngasArr.push(currentGas)\nif(gasArr.length>5){\n    gasArr.shift();\n}\nflow.set(\"gas\", gasArr);\nvar avg = gasArr.reduce((a,b)=>(a+b)) / gasArr.length;\n\nmsg.payload = {}\nmsg.payload.value = parseFloat(currentGas.toFixed(1));\nmsg.payload.differentValue = parseFloat((currentGas - avg).toFixed(2));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "2349e327.07320c",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "",
        "func": "var iaqArr = flow.get(\"iaq\") || [];\nvar currentIaq = msg.payload.iaqA;\niaqArr.push(currentIaq)\nif(iaqArr.length>5){\n    iaqArr.shift();\n}\nflow.set(\"iaq\", iaqArr);\nvar avg = iaqArr.reduce((a,b)=>(a+b)) / iaqArr.length;\n\nmsg.payload = {}\nmsg.payload.value = parseFloat(currentIaq.toFixed(1));\nmsg.payload.differentValue = parseFloat((currentIaq - avg).toFixed(2));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "51ae6b5c.37f0b4",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "",
        "func": "var eqco2Arr = flow.get(\"eqco2\") || [];\nvar currentEqco2 = msg.payload.eqco2;\neqco2Arr.push(currentEqco2)\nif(eqco2Arr.length>5){\n    eqco2Arr.shift();\n}\nflow.set(\"eqco2\", eqco2Arr);\nvar avg = eqco2Arr.reduce((a,b)=>(a+b)) / eqco2Arr.length;\n\nmsg.payload = {}\nmsg.payload.value = parseFloat(currentEqco2.toFixed(1));\nmsg.payload.differentValue = parseFloat((currentEqco2 - avg).toFixed(2));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "802e7c82.4e0bd",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "",
        "func": "var vocArr = flow.get(\"voc\") || [];\nvar currentVoc = msg.payload.VOC;\nvocArr.push(currentVoc)\nif(vocArr.length>5){\n    vocArr.shift();\n}\nflow.set(\"voc\", vocArr);\nvar avg = vocArr.reduce((a,b)=>(a+b)) / vocArr.length;\n\nmsg.payload = {}\nmsg.payload.value = parseFloat(currentVoc.toFixed(1));\nmsg.payload.differentValue = parseFloat((currentVoc - avg).toFixed(2));\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "6cf4af9.bafdb5",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "",
        "func": "const setpoint = 30;\nconst maxScore = 100;\nconst minScore = 0;\n\nvar temp4Arr = flow.get(\"temp4\") || [];\nvar temp200Arr = flow.get(\"temp200\") || [];\nvar currentTemp = msg.payload.temp;\n\nvar different = Math.abs(currentTemp - setpoint);\nvar score = 0;\nif(different<=1){\n    score = maxScore - minScore;\n}\nelse if(different<=5){\n    score = 0.5*(maxScore - minScore);\n}\nelse if(different<=10){\n    score = 0.2*(maxScore - minScore);\n}\nelse{\n    score = 0;\n}\n\ntemp4Arr.push(score);\ntemp200Arr.push(score);\nif(temp4Arr.length>4){\n    temp4Arr.shift();\n}\nif(temp200Arr.length>200){\n    temp200Arr.shift();\n}\nflow.set(\"temp4\", temp4Arr)\nflow.set(\"temp200\", temp200Arr)\n\nvar avg4 = temp4Arr.reduce((a,b)=>(a+b)) / temp4Arr.length;\nvar avg200 = temp200Arr.reduce((a,b)=>(a+b)) / temp200Arr.length;\n\nscoreRatio = ((avg4 - avg200)/avg200)*100;\n\n\nmsg.payload = {}\nmsg.payload.value = parseFloat(currentTemp.toFixed(1));\nmsg.payload.differentValue = parseFloat(scoreRatio.toFixed(2));\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "fb212dc9.fcd24",
        "type": "http in",
        "z": "6b99fc65.0259d4",
        "name": "",
        "url": "/bootup",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 150,
        "y": 780,
        "wires": [
            [
                "6b4d3713.6ecca8"
            ]
        ]
    },
    {
        "id": "6b4d3713.6ecca8",
        "type": "json",
        "z": "6b99fc65.0259d4",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 780,
        "wires": [
            [
                "58cdbb3b.a96f74"
            ]
        ]
    },
    {
        "id": "17b426cc.d8eb89",
        "type": "http in",
        "z": "6b99fc65.0259d4",
        "name": "",
        "url": "config/:id",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 980,
        "wires": [
            [
                "443bd69.fdd5128"
            ]
        ]
    },
    {
        "id": "5e3b4046.26a48",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "202 response",
        "func": "msg.payload = global.get(\"recipe\") ||  {\nversion: 1,\nrelay1: { on_second : 600 , off_second : 600 },\nrelay2: { on_second : 600 , off_second : 600 },\nrelay3: { on_second : 600 , off_second : 600 },\n};\nreturn msg;\n\n// {\n// version: 2,\n// day0: { \n//   // Trigger sensor1 when hit 50C, rearm at 45C, will turn on relay=1 and turn off relay=2\n//   // Below 45C, will turn OFF relay=1 and turn ON relay=2\n//   sensor1: { trigger: 50, rearm: 45, \n//         task1: { relay: 1, action: 1 },\n//         task2: { relay: 2, action: 0 }\n//   },\n//   sensor2: { trigger: 20, rearm: 35, \n//         task1: { relay: 3, action: 1 }\n//   },\n//   sensor3: { trigger: 90, rearm: 80, \n//         task1: { alert: 1, action: 0 }\n//   },\n//   },\n// day1: { },\n// day2: { }\n\n// }",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 900,
        "wires": [
            [
                "b7091dfd.55b62"
            ]
        ]
    },
    {
        "id": "b7091dfd.55b62",
        "type": "http response",
        "z": "6b99fc65.0259d4",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 560,
        "y": 900,
        "wires": []
    },
    {
        "id": "185879e3.bc4956",
        "type": "comment",
        "z": "6b99fc65.0259d4",
        "name": "the device will get config file when first boot up",
        "info": "",
        "x": 250,
        "y": 860,
        "wires": []
    },
    {
        "id": "65c21f95.c0962",
        "type": "comment",
        "z": "6b99fc65.0259d4",
        "name": "device to post boot up status",
        "info": "",
        "x": 200,
        "y": 740,
        "wires": []
    },
    {
        "id": "c5a70f70.b5089",
        "type": "http in",
        "z": "6b99fc65.0259d4",
        "name": "",
        "url": "/config",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 850,
        "y": 860,
        "wires": [
            [
                "d52235b.61754c8",
                "185a8716.36a8e9",
                "616eb5d4.6b065c"
            ]
        ]
    },
    {
        "id": "d52235b.61754c8",
        "type": "debug",
        "z": "6b99fc65.0259d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1150,
        "y": 800,
        "wires": []
    },
    {
        "id": "9faf6caf.149a8",
        "type": "http response",
        "z": "6b99fc65.0259d4",
        "name": "",
        "statusCode": "201",
        "headers": {},
        "x": 1200,
        "y": 860,
        "wires": []
    },
    {
        "id": "185a8716.36a8e9",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "all OK",
        "func": "msg.payload = {\n  \"status\" : \"ok\"  \n};\nmsg.statusCode = 201;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1050,
        "y": 860,
        "wires": [
            [
                "9faf6caf.149a8"
            ]
        ]
    },
    {
        "id": "616eb5d4.6b065c",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "set recipe from put",
        "func": "global.set(\"recipe\",msg.payload);\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1110,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "32b94786.d8d428",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "debug recipe",
        "func": "\nmsg.payload = global.get(\"recipe\") ||  {\nversion: 1,\nrelay1: { on_second : 9 , off_second : 19 },\nrelay2: { on_second : 5 , off_second : 5 },\nrelay3: { on_second : 60 , off_second : 30 },\n};\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 980,
        "wires": [
            [
                "fb1b2ee2.a3043"
            ]
        ]
    },
    {
        "id": "b8ed23d6.bd03a",
        "type": "inject",
        "z": "6b99fc65.0259d4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 800,
        "y": 980,
        "wires": [
            [
                "32b94786.d8d428"
            ]
        ]
    },
    {
        "id": "fb1b2ee2.a3043",
        "type": "debug",
        "z": "6b99fc65.0259d4",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1170,
        "y": 980,
        "wires": []
    },
    {
        "id": "1b34c2b2.6aa7bd",
        "type": "comment",
        "z": "6b99fc65.0259d4",
        "name": "user update the config setting over here",
        "info": "{\n    \"version\": 1,\n    \"relay1\": {\n        \"on_second\": 90,\n        \"off_second\": 19\n    },\n    \"relay2\": {\n        \"on_second\": 5,\n        \"off_second\": 5\n    },\n    \"relay3\": {\n        \"on_second\": 60,\n        \"off_second\": 30\n    }\n}",
        "x": 850,
        "y": 800,
        "wires": []
    },
    {
        "id": "d5a35451.9b6668",
        "type": "comment",
        "z": "6b99fc65.0259d4",
        "name": "Get the Recipe Config, otherwise null",
        "info": "",
        "x": 1190,
        "y": 600,
        "wires": []
    },
    {
        "id": "58cdbb3b.a96f74",
        "type": "link out",
        "z": "6b99fc65.0259d4",
        "name": "from POST /bootup",
        "links": [
            "924dbcc9.2f74b"
        ],
        "x": 435,
        "y": 780,
        "wires": []
    },
    {
        "id": "59d440f0.c2cac",
        "type": "comment",
        "z": "6b99fc65.0259d4",
        "name": "Store the device for provision, otherwise do nothing",
        "info": "",
        "x": 610,
        "y": 740,
        "wires": []
    },
    {
        "id": "9e5e3558.cc0328",
        "type": "switch",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "property": "empty",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 400,
        "wires": [
            [
                "dbf76f8d.57863"
            ],
            [
                "69d66f34.c7dce"
            ]
        ]
    },
    {
        "id": "b52986fd.c32658",
        "type": "function",
        "z": "5a50dcc5.c18a24",
        "name": "Query",
        "func": "msg.original = msg.payload;\nmsg.empty = false\nquery = {}\n\nif (msg.payload.fieldKey && msg.payload.fieldKey != 'undefined') {\n    query.key = [];\n    query.key.push(msg.req.params.tenant)\n    query.key.push(msg.payload.fieldKey)\n    msg.payload = query;\n} else {\n    msg.payload = []\n    msg.empty = true;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 400,
        "wires": [
            [
                "9e5e3558.cc0328"
            ]
        ]
    },
    {
        "id": "dbf76f8d.57863",
        "type": "cloudantplus in",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 490,
        "y": 380,
        "wires": [
            [
                "5e825e00.e6fe5"
            ]
        ]
    },
    {
        "id": "befedc6e.0babd",
        "type": "link in",
        "z": "5a50dcc5.c18a24",
        "name": "Get batchId",
        "links": [
            "8ee7030b.da7c5"
        ],
        "x": 75,
        "y": 400,
        "wires": [
            [
                "b52986fd.c32658"
            ]
        ]
    },
    {
        "id": "5e825e00.e6fe5",
        "type": "function",
        "z": "5a50dcc5.c18a24",
        "name": "List Batch IDs in Nursery Rack ID(s)",
        "func": "// Racks from user input\nlet nurseryRackStrs = msg.original.fieldValue\nlet nurseryRacks = nurseryRackStrs ? nurseryRackStrs.split(\",\") : null\n\n// Racks from database\nlet nurseryRackObjs = msg.payload[0].value.options\n\nlet batchIds = []\n\nfor (let nurseryRack of nurseryRacks) {\n    let nurseryRackObj = nurseryRackObjs[nurseryRack]\n    let batchIdObjs = nurseryRackObj.batchIdList\n    \n    for (let key in batchIdObjs) {\n        batchIds.push({label: key, value: key})\n    }\n}\n\nmsg.payload = batchIds\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 380,
        "wires": [
            [
                "82831906.e6f0c8"
            ]
        ]
    },
    {
        "id": "82831906.e6f0c8",
        "type": "http response",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 1000,
        "y": 380,
        "wires": []
    },
    {
        "id": "acd9ebad.eef2e8",
        "type": "function",
        "z": "5a50dcc5.c18a24",
        "name": "List Batch IDs that falls within 5 ±1days",
        "func": "var fieldValues = []\nif( msg.original.fieldValue){\n    fieldValues = msg.original.fieldValue.split(\",\");\n}\n\nvar batchIdList = []\nvar output = []\nif(msg.payload.length>0){\n   var rack = msg.payload[0].value;\n    for(let value of fieldValues){\n        if(rack.options[value]){\n            if(rack.options[value].batchIdList){\n                for(let key in rack.options[value].batchIdList){\n                    if(key >= msg.batchId6 && key <= msg.batchId4){\n                        if(!batchIdList.includes(key)){\n                            batchIdList.push(key)\n                            output.push({\n                                label: key,\n                                value: key\n                            })\n                        }\n                    }\n                }\n            }\n        }\n    } \n}\n\n\nmsg.payload = output\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "77b25c33.bfa194",
        "type": "comment",
        "z": "5a50dcc5.c18a24",
        "name": "Return Batch IDs for Nursery Output form",
        "info": "",
        "x": 300,
        "y": 340,
        "wires": []
    },
    {
        "id": "48b6cd88.a46724",
        "type": "link out",
        "z": "6b99fc65.0259d4",
        "name": "from POST /insectdata",
        "links": [
            "c0b816ef.005778",
            "17301661.13df1a",
            "78f0a32c.24038c",
            "387c555f.ffba4a",
            "12cff174.06939f"
        ],
        "x": 455,
        "y": 980,
        "wires": []
    },
    {
        "id": "561c7e35.67889",
        "type": "comment",
        "z": "6b99fc65.0259d4",
        "name": "Get the Recipe Config, otherwise null",
        "info": "",
        "x": 470,
        "y": 940,
        "wires": []
    },
    {
        "id": "6f20161e.7b7358",
        "type": "comment",
        "z": "37c11998.4fe1a6",
        "name": "Default Value Ops",
        "info": "",
        "x": 350,
        "y": 80,
        "wires": []
    },
    {
        "id": "5c1ee6d.145cc18",
        "type": "subflow:37c11998.4fe1a6",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "env": [],
        "x": 390,
        "y": 200,
        "wires": []
    },
    {
        "id": "f75e945.80e6668",
        "type": "subflow:2811332b.6f138c",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "env": [],
        "x": 420,
        "y": 80,
        "wires": []
    },
    {
        "id": "68781316.38bf9c",
        "type": "cloudantplus in",
        "z": "37c11998.4fe1a6",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByDeviceId",
        "x": 610,
        "y": 200,
        "wires": [
            [
                "524471b2.75453"
            ]
        ]
    },
    {
        "id": "ff5505f1.56c228",
        "type": "function",
        "z": "37c11998.4fe1a6",
        "name": "query",
        "func": "let deviceId = msg.payload.formValue.sensorDeviceId\nlet errors = []\n\nif (!deviceId) errors.push(\"Field required: formValue.sensorDeviceId\")\n\nmsg.original = msg.payload\nmsg.payload = {key: msg.payload.formValue.sensorDeviceId}\nmsg.errors = errors\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 220,
        "wires": [
            [
                "8ba04ae.e86d9b8"
            ]
        ]
    },
    {
        "id": "73e77ee2.a3a19",
        "type": "link in",
        "z": "37c11998.4fe1a6",
        "name": "",
        "links": [
            "1df79cf6.017a53"
        ],
        "x": 195,
        "y": 220,
        "wires": [
            [
                "ff5505f1.56c228"
            ]
        ]
    },
    {
        "id": "524471b2.75453",
        "type": "function",
        "z": "37c11998.4fe1a6",
        "name": "structure",
        "func": "let deviceConfig = msg.payload[0].value\nlet fieldValue = null\n\nif (msg.original.fieldKey === 'sensorDeviceName') {\n    fieldValue = deviceConfig.deviceName\n}\nif (msg.original.fieldKey === 'sensorDeviceClass') {\n    fieldValue = deviceConfig.deviceClass\n}\n\nmsg.payload = {fieldValue}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 200,
        "wires": [
            [
                "6e141b8a.b34e64"
            ]
        ]
    },
    {
        "id": "6e141b8a.b34e64",
        "type": "http response",
        "z": "37c11998.4fe1a6",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 940,
        "y": 200,
        "wires": []
    },
    {
        "id": "c82fd3c4.055cd",
        "type": "comment",
        "z": "13812a6.98277d6",
        "name": "Create Ops - Device Options",
        "info": "",
        "x": 320,
        "y": 400,
        "wires": []
    },
    {
        "id": "8cb505ab.4daf68",
        "type": "link in",
        "z": "13812a6.98277d6",
        "name": "",
        "links": [
            "c5b225f3.c7c6b8"
        ],
        "x": 215,
        "y": 480,
        "wires": [
            [
                "3b1d7e2f.272db2"
            ]
        ]
    },
    {
        "id": "c5b225f3.c7c6b8",
        "type": "link out",
        "z": "13812a6.98277d6",
        "name": "",
        "links": [
            "8cb505ab.4daf68",
            "eef13d2d.ac3d9"
        ],
        "x": 435,
        "y": 160,
        "wires": []
    },
    {
        "id": "97e047ff.b46e48",
        "type": "function",
        "z": "13812a6.98277d6",
        "name": "query",
        "func": "// Use Form Name as the Class Name\n// Apply only for templateType=device\nmsg.payload = {key: msg.payload.form}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 440,
        "wires": [
            [
                "b95c1dd1.a2e8"
            ]
        ]
    },
    {
        "id": "94f7b4f.585ab48",
        "type": "cloudantplus in",
        "z": "13812a6.98277d6",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 350,
        "y": 640,
        "wires": [
            [
                "f789e083.7b00a"
            ]
        ]
    },
    {
        "id": "f789e083.7b00a",
        "type": "function",
        "z": "13812a6.98277d6",
        "name": "structure",
        "func": "let options = []\n\nfor (let chamberType of msg.payload) {\n    let locations = chamberType.value.options\n    \n    for (let locationId in locations) {\n        let locationInfo = locations[locationId]\n        \n        options.push({\n            label: locationInfo.label,\n            value: locationId\n        })\n    }\n}\n\nmsg.payload = options\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 640,
        "wires": [
            [
                "e0568d56.8445"
            ]
        ]
    },
    {
        "id": "e0568d56.8445",
        "type": "http response",
        "z": "13812a6.98277d6",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 680,
        "y": 640,
        "wires": []
    },
    {
        "id": "f3c862b2.8b64f",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "farmAsset",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/farmAsset\",\n  \"_rev\": \"10-bd85348b4c5ef062191bc8ba68b75c3c\",\n  \"views\": {\n    \"byCategoryChamber-type\": {\n      \"map\": \"function (doc) {\\n  var chamberAssetTypes = ['growthChamberId', 'matingChamber', 'prePupaeChamberId', 'pupationChamberId']\\n  if (doc.docType === 'select-option-list' && chamberAssetTypes.includes(doc.type)) emit(doc.type, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 460,
        "y": 1400,
        "wires": [
            [
                "8cb8a084.b4753"
            ]
        ]
    },
    {
        "id": "3b427ca5.658474",
        "type": "function",
        "z": "2811332b.6f138c",
        "name": "errors",
        "func": "let errors = []\n\nif (msg.payload.length === 0) {\n    errors.push('Device ID not found')\n}\n\nmsg.errors = errors\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 100,
        "wires": [
            [
                "47f5a568.f1a90c"
            ]
        ]
    },
    {
        "id": "70cf94db.46feac",
        "type": "link out",
        "z": "2811332b.6f138c",
        "name": "",
        "links": [
            "694674f5.f85a7c"
        ],
        "x": 755,
        "y": 120,
        "wires": []
    },
    {
        "id": "694674f5.f85a7c",
        "type": "link in",
        "z": "2811332b.6f138c",
        "name": "",
        "links": [
            "70cf94db.46feac"
        ],
        "x": 75,
        "y": 220,
        "wires": [
            [
                "64f9d208.7328ac"
            ]
        ]
    },
    {
        "id": "47f5a568.f1a90c",
        "type": "switch",
        "z": "2811332b.6f138c",
        "name": "",
        "property": "errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 100,
        "wires": [
            [
                "5dae9f5d.b0661"
            ],
            [
                "70cf94db.46feac"
            ]
        ]
    },
    {
        "id": "cadb7266.c8e3e",
        "type": "function",
        "z": "2811332b.6f138c",
        "name": "structure",
        "func": "msg.payload = {message: msg.errors[0]}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 340,
        "wires": [
            [
                "4adb669f.ce94a8"
            ]
        ]
    },
    {
        "id": "4adb669f.ce94a8",
        "type": "http response",
        "z": "2811332b.6f138c",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 700,
        "y": 340,
        "wires": []
    },
    {
        "id": "7c47a48f.e842cc",
        "type": "cloudantplus out",
        "z": "2811332b.6f138c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": false,
        "operation": "delete",
        "x": 370,
        "y": 340,
        "wires": [
            [
                "cadb7266.c8e3e"
            ]
        ]
    },
    {
        "id": "fe4637be.e3feb8",
        "type": "function",
        "z": "2811332b.6f138c",
        "name": "structure",
        "func": "msg.payload = {\n    _id: msg.parentDataId.id, \n    _rev: msg.parentDataId.rev\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 340,
        "wires": [
            [
                "7c47a48f.e842cc"
            ]
        ]
    },
    {
        "id": "5dae9f5d.b0661",
        "type": "link out",
        "z": "2811332b.6f138c",
        "name": "",
        "links": [
            "26ff0165.ff7d6e"
        ],
        "x": 755,
        "y": 80,
        "wires": []
    },
    {
        "id": "26ff0165.ff7d6e",
        "type": "link in",
        "z": "2811332b.6f138c",
        "name": "",
        "links": [
            "5dae9f5d.b0661"
        ],
        "x": 75,
        "y": 340,
        "wires": [
            [
                "fe4637be.e3feb8"
            ]
        ]
    },
    {
        "id": "65d4be54.e0def",
        "type": "comment",
        "z": "2811332b.6f138c",
        "name": "Delete the parent data",
        "info": "",
        "x": 240,
        "y": 300,
        "wires": []
    },
    {
        "id": "3498bc27.220d54",
        "type": "comment",
        "z": "2811332b.6f138c",
        "name": "Modify deviceConfig",
        "info": "",
        "x": 230,
        "y": 180,
        "wires": []
    },
    {
        "id": "50314efe.122ba",
        "type": "cloudantplus in",
        "z": "13812a6.98277d6",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "sensorDevice",
        "index": "findByDeviceId",
        "x": 630,
        "y": 300,
        "wires": [
            [
                "188bbb55.19a375"
            ]
        ]
    },
    {
        "id": "188bbb55.19a375",
        "type": "function",
        "z": "13812a6.98277d6",
        "name": "query",
        "func": "msg.deviceInfo = msg.payload\nmsg.payload = {key: msg.payload.sensorDeviceId}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 300,
        "wires": [
            [
                "72b2116a.c3427"
            ]
        ]
    },
    {
        "id": "cf6221c8.ac501",
        "type": "comment",
        "z": "13812a6.98277d6",
        "name": "Get all chamber assets",
        "info": "",
        "x": 300,
        "y": 600,
        "wires": []
    },
    {
        "id": "aae98656.7bb688",
        "type": "link out",
        "z": "13812a6.98277d6",
        "name": "",
        "links": [
            "25bcad6f.8efa12",
            "7e48ccb9.9b4e14"
        ],
        "x": 435,
        "y": 480,
        "wires": []
    },
    {
        "id": "25bcad6f.8efa12",
        "type": "link in",
        "z": "13812a6.98277d6",
        "name": "",
        "links": [
            "aae98656.7bb688",
            "5f3c41b8.97b1e",
            "2ead05a5.8f3a5a"
        ],
        "x": 215,
        "y": 640,
        "wires": [
            [
                "94f7b4f.585ab48"
            ]
        ]
    },
    {
        "id": "2d34d0.07770b3",
        "type": "switch",
        "z": "13812a6.98277d6",
        "name": "",
        "property": "req.params.key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensorDeviceLocation",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 340,
        "wires": [
            [
                "5f3c41b8.97b1e"
            ]
        ]
    },
    {
        "id": "25d938d7.16a208",
        "type": "link in",
        "z": "13812a6.98277d6",
        "name": "",
        "links": [
            "e88e47a8.87fb58",
            "a7c24f40.a0794"
        ],
        "x": 215,
        "y": 340,
        "wires": [
            [
                "2d34d0.07770b3"
            ]
        ]
    },
    {
        "id": "5f3c41b8.97b1e",
        "type": "link out",
        "z": "13812a6.98277d6",
        "name": "",
        "links": [
            "25bcad6f.8efa12",
            "7e48ccb9.9b4e14"
        ],
        "x": 435,
        "y": 340,
        "wires": []
    },
    {
        "id": "d52fe42a.bcc988",
        "type": "switch",
        "z": "13812a6.98277d6",
        "name": "",
        "property": "req.params.key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensorDeviceId",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 330,
        "y": 300,
        "wires": [
            [
                "fbec6645.0188d8"
            ]
        ]
    },
    {
        "id": "a7c24f40.a0794",
        "type": "link out",
        "z": "13812a6.98277d6",
        "name": "",
        "links": [
            "9798621a.cf9cc",
            "25d938d7.16a208"
        ],
        "x": 435,
        "y": 120,
        "wires": []
    },
    {
        "id": "6b8dec18.b890c4",
        "type": "subflow:7fc5df76.10c99",
        "z": "25e5a6ec.1bd6ca",
        "name": "",
        "env": [],
        "x": 430,
        "y": 460,
        "wires": []
    },
    {
        "id": "beb1ea53.5420b8",
        "type": "comment",
        "z": "25e5a6ec.1bd6ca",
        "name": "Create Ops",
        "info": "",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "af703014.3c97b",
        "type": "function",
        "z": "7fc5df76.10c99",
        "name": "structure",
        "func": "// Provision the device and create proper device name\n\nlet originalDeviceLocation = msg.original.sensorDeviceLocation\n\nlet deviceConfig = msg.payload[0].value\nlet deviceLocation = msg.original.sensorDeviceLocation\nlet deviceClassInitial = msg.original.sensorDeviceClassInitial\nlet deviceNameSuffix = msg.original.sensorDeviceNameSuffix\nlet deviceAlias = msg.original.sensorDeviceAlias;\nlet deviceName\n\n// Cannot have dash (-) in naming\ndeviceLocation = replacer(deviceLocation, '-', '_')\ndeviceClassInitial = replacer(deviceClassInitial, '-', '_')\ndeviceNameSuffix = replacer(deviceNameSuffix, '-', '_')\n\n// Name it as <location>-<device_class>-<suffix>\ndeviceName = deviceLocation + '-'\ndeviceName = deviceName + deviceClassInitial + '-'\ndeviceName = deviceName + deviceNameSuffix\n\ndeviceConfig['deviceName'] = deviceName\ndeviceConfig['location'] = originalDeviceLocation\ndeviceConfig['provisioned'] = true\ndeviceConfig['deviceAlias'] = deviceAlias\n\nmsg.deviceConfig = deviceConfig\nmsg.payload = deviceConfig\nreturn msg;\n\nfunction replacer(data, a, b) {\n    return data.split('-').join('_')\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 340,
        "wires": [
            [
                "e3f9b203.0b5df"
            ]
        ]
    },
    {
        "id": "645b8f93.6fed5",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "/api/:tenant/forms/nursery-rack-monitor",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 2960,
        "wires": [
            [
                "aa4e97c.96d5968"
            ]
        ]
    },
    {
        "id": "aa4e97c.96d5968",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "let query = {}\nquery[\"key\"] = [msg.req.params.tenant, \"breedingNurserySetupRackId\"]\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 2960,
        "wires": [
            [
                "2736b094.6c8b5"
            ]
        ]
    },
    {
        "id": "2736b094.6c8b5",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 620,
        "y": 2960,
        "wires": [
            [
                "8a664f50.5d9a7"
            ]
        ]
    },
    {
        "id": "8a664f50.5d9a7",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 790,
        "y": 2960,
        "wires": [
            [
                "9441d472.8eb868"
            ],
            [
                "9f4ed103.333b4"
            ],
            [
                "71ad56f5.d2fee8"
            ]
        ]
    },
    {
        "id": "9441d472.8eb868",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "// const rack = msg.payload[0].value;\n// var resultList = []\n// for(let key in rack.options){\n//     var option = rack.options[key]\n//     var output = {}\n//     output.value = key;\n//     output.label = option.label;\n//     output.batchIdList = []\n//     for(let key1 in option.batchIdList){\n//         var batchId = option.rackIdList[key1]\n//         rack.value = batchId;\n//         output.rackIdList.push(rack)\n//     }\n//     resultList.push(output);\n// }\n// msg.payload = resultList;\n// return msg;\n\nconst breedingSetupRack = msg.payload[0].value;\nvar resultList = [];\nfor(let key in breedingSetupRack.options) {\n    node.warn(key);\n    var option = breedingSetupRack.options[key];\n    var output = {};\n    output.rackId = key;\n    output.label = option.label;\n    output.batchIdList = [];\n    \n    if(option.batchIdList) {\n        for(let key1 in option.batchIdList) {\n            var batchIdAndTrayCount = {};\n            batchIdAndTrayCount.trayCount = option.batchIdList[key1];\n            batchIdAndTrayCount.batchId = key1;\n            output.batchIdList.push(batchIdAndTrayCount)\n        }\n    }\n    resultList.push(output);\n    msg.payload = resultList;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 2900,
        "wires": [
            [
                "1a006fea.ad3e7"
            ]
        ]
    },
    {
        "id": "9f4ed103.333b4",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1050,
        "y": 2960,
        "wires": [
            [
                "c8dcfb47.1b1218"
            ]
        ]
    },
    {
        "id": "71ad56f5.d2fee8",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1050,
        "y": 3020,
        "wires": [
            [
                "8e74b6b9.c221d8"
            ]
        ]
    },
    {
        "id": "1a006fea.ad3e7",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1180,
        "y": 2900,
        "wires": []
    },
    {
        "id": "c8dcfb47.1b1218",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1260,
        "y": 2960,
        "wires": []
    },
    {
        "id": "8e74b6b9.c221d8",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1280,
        "y": 3020,
        "wires": []
    },
    {
        "id": "d507590a.231818",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "api/:tenant/dashboard/monitor-nursery/rack",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 3100,
        "wires": [
            [
                "89bccb8d.e69968"
            ]
        ]
    },
    {
        "id": "89bccb8d.e69968",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "// let query = {\n//     \"selector\": {\n//         \"docType\":\"select-option\",\n//         \"type\": msg.req.params.key,\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\nlet query = {}\nlet body = msg.payload\nif(body.batchIdList) {\n    query[\"key\"] = [msg.req.params.tenant, body.rackId, body.batchIdList]\n} else {\n    query[\"key\"] = [msg.req.params.tenant, body.rackId, body.setupDateId]\n}\n\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 110,
        "y": 3160,
        "wires": [
            [
                "afa83fe6.775df"
            ]
        ]
    },
    {
        "id": "afa83fe6.775df",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "nursery-setup",
        "x": 280,
        "y": 3160,
        "wires": [
            [
                "27a79a04.3f52f6"
            ]
        ]
    },
    {
        "id": "27a79a04.3f52f6",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 430,
        "y": 3160,
        "wires": [
            [
                "9cd3162a.1d1c68"
            ],
            [
                "9cd3162a.1d1c68"
            ],
            [
                "4c4f2992.4bd738"
            ]
        ]
    },
    {
        "id": "9cd3162a.1d1c68",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "let rack = msg.payload[0].value;\nnode.warn(msg.payload.length);\nmsg.payload = rack.nurserySetupId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 3140,
        "wires": [
            [
                "791aad69.ababb4"
            ]
        ]
    },
    {
        "id": "4c4f2992.4bd738",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.payload = {\n    \"message\": \"Rack not found\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 3220,
        "wires": [
            [
                "42c168ef.e72bd8"
            ]
        ]
    },
    {
        "id": "791aad69.ababb4",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 680,
        "y": 3180,
        "wires": [
            [
                "28ba3e27.9b1272"
            ]
        ]
    },
    {
        "id": "42c168ef.e72bd8",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 120,
        "y": 3260,
        "wires": []
    },
    {
        "id": "28ba3e27.9b1272",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 3240,
        "wires": [
            [
                "c6c0cb59.b09078"
            ],
            [
                "77b58934.2660f8"
            ]
        ]
    },
    {
        "id": "c6c0cb59.b09078",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Delete unused field",
        "func": "delete msg.payload._rev\ndelete msg.payload._id\ndelete msg.payload.tenant\ndelete msg.payload.description\ndelete msg.payload.processDocument\ndelete msg.payload.timestamp\ndelete msg.payload.batchId\ndelete msg.payload.breedingNurserySetupRackId\ndelete msg.payload.workstationForm\ndelete msg.payload.productionLine\ndelete msg.payload.dataRecord\ndelete msg.payload.daily_index\ndelete msg.payload.user_id\ndelete msg.payload.form_id\ndelete msg.payload.form_version\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 3240,
        "wires": [
            [
                "64cfb6f.6d76448"
            ]
        ]
    },
    {
        "id": "77b58934.2660f8",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.payload = {\n    \"message\": \"Rack not found\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 3280,
        "wires": [
            [
                "fd945718.dca718"
            ]
        ]
    },
    {
        "id": "64cfb6f.6d76448",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 3300,
        "wires": []
    },
    {
        "id": "fd945718.dca718",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 660,
        "y": 3320,
        "wires": []
    },
    {
        "id": "f7e23cee.8b27e",
        "type": "function",
        "z": "821ac598.a66fd8",
        "name": "",
        "func": "let pageSize = parseInt(msg.req.query[\"pageSize\"]);\nmsg.pageSize = pageSize\nlet page = parseInt(msg.req.query[\"page\"]);\nlet skip = page * pageSize;\n\nlet query = {\n    \"limit\": pageSize,\n    \"skip\": skip,\n    \"descending\": true\n};\nlet queryForm = false;\nlet queryTimestamp = false;\nlet queryTemplateType = false;\n\n\nlet tenant = msg.req.params[\"tenant\"]\nquery.startkey = [tenant];\nquery.endkey = [tenant];\n\nlet selector = {\n    \"dataRecord\": {\"$eq\":true},\n    \"deleted\": {\"$eq\": false},\n    \"tenant\": {\"$eq\": tenant}\n};\nlet templateType = msg.req.query[\"templateType\"];\nif(templateType){\n    queryTemplateType = true;\n    query.endkey.push(templateType);\n    query.startkey.push(templateType);\n    selector.templateType = {\n        \"$eq\" : templateType\n    }\n}\nlet dateNow = new Date();\nlet dateBefore = new Date(1980-12-10);\n\n\nlet form = msg.req.query[\"forms.equals\"];\nif(form){\n    queryForm = true;\n    query.endkey.push(form);\n    query.startkey.push(form);\n\n    selector.workstationForm = {\n        \"$eq\" : form\n    }\n   \n}\nlet productionLineBluePrint;\n\nif('productionLine.equals' in msg.req.query) {\n    productionLineBluePrint = msg.req.query[\"productionLine.equals\"];\n}\n\n\nlet dateLessOrEqualThan = msg.req.query[\"date.lessOrEqualThan\"]\nlet dateGreaterOrEqualThan = msg.req.query[\"date.greaterOrEqualThan\"]\n\nif(dateLessOrEqualThan){\n    queryTimestamp = true;\n    query.startkey.push(dateLessOrEqualThan);\n\n    selector.submission_timestamp = {\n        \"$lte\": dateLessOrEqualThan\n    }\n}\nif(dateGreaterOrEqualThan){\n    queryTimestamp = true;\n    query.endkey.push(dateGreaterOrEqualThan)\n    if(selector.submission_timestamp){\n        selector.submission_timestamp.$gte =dateGreaterOrEqualThan;\n    }\n    else{\n        query.startkey.push(dateNow);\n        selector.submission_timestamp = {\n            \"$gte\": dateGreaterOrEqualThan\n        }\n    }\n}\nif(!dateGreaterOrEqualThan && queryTimestamp){\n    query.endkey.push(dateBefore);\n}\n\nif(!queryTimestamp && queryForm){\n    query.endkey.push(dateBefore);\n    query.startkey.push(dateNow);\n}\n\n\n\nmsg.query = {...query};\ndelete msg.query.skip;\nmsg.payload = query;\nmsg.queryForm = queryForm;\nmsg.queryTimestamp = queryTimestamp;\nmsg.queryTemplateType = queryTemplateType;\nmsg.productionLineBluePrint = productionLineBluePrint;\nmsg.selectors = {\n    \"selector\": selector,\n    \"limit\": pageSize,\n    \"skip\": skip,\n    \"sort\": [{submission_timestamp: \"desc\"}],\n    \"execution_stats\": true,\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 320,
        "wires": [
            [
                "53b4a93b.507d78"
            ]
        ]
    },
    {
        "id": "3904ebc0.380fa4",
        "type": "http in",
        "z": "821ac598.a66fd8",
        "name": "",
        "url": "/api/:tenant/forms/history",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 140,
        "y": 120,
        "wires": [
            [
                "f7e23cee.8b27e"
            ]
        ]
    },
    {
        "id": "53b4a93b.507d78",
        "type": "switch",
        "z": "821ac598.a66fd8",
        "name": "",
        "property": "queryTemplateType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 320,
        "wires": [
            [
                "92bfc3f0.8ca8b"
            ],
            [
                "2e5805df.77c75a"
            ]
        ]
    },
    {
        "id": "92bfc3f0.8ca8b",
        "type": "switch",
        "z": "821ac598.a66fd8",
        "name": "isQueryForm",
        "property": "queryForm",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 240,
        "wires": [
            [
                "d00276d9.fbda98"
            ],
            [
                "cc96a465.ccba48"
            ]
        ]
    },
    {
        "id": "2e5805df.77c75a",
        "type": "switch",
        "z": "821ac598.a66fd8",
        "name": "isQueryForm",
        "property": "queryForm",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 440,
        "wires": [
            [
                "e1047ffb.4041f"
            ],
            [
                "34fdd233.a940de"
            ]
        ]
    },
    {
        "id": "d00276d9.fbda98",
        "type": "cloudantplus in",
        "z": "821ac598.a66fd8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "query-form",
        "index": "query_by_2_key",
        "x": 910,
        "y": 160,
        "wires": [
            [
                "5f0b0f16.86854"
            ]
        ]
    },
    {
        "id": "cc96a465.ccba48",
        "type": "switch",
        "z": "821ac598.a66fd8",
        "name": "isQueryTime",
        "property": "queryTimestamp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 300,
        "wires": [
            [
                "368cecbb.bd7bf4"
            ],
            [
                "17f9defd.e41951"
            ]
        ]
    },
    {
        "id": "e1047ffb.4041f",
        "type": "cloudantplus in",
        "z": "821ac598.a66fd8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "query-form",
        "index": "findByTemplateTypeAndSubmissionTimeStampAndWorkstationForm",
        "x": 930,
        "y": 400,
        "wires": [
            [
                "68856a94.780b64"
            ]
        ]
    },
    {
        "id": "34fdd233.a940de",
        "type": "switch",
        "z": "821ac598.a66fd8",
        "name": "isQueryTime",
        "property": "queryTimestamp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 520,
        "wires": [
            [
                "a76855b0.825498"
            ],
            [
                "75b3bb75.481354"
            ]
        ]
    },
    {
        "id": "5f0b0f16.86854",
        "type": "change",
        "z": "821ac598.a66fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "query",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 160,
        "wires": [
            [
                "c14da027.6b018"
            ]
        ]
    },
    {
        "id": "368cecbb.bd7bf4",
        "type": "cloudantplus in",
        "z": "821ac598.a66fd8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "query-form",
        "index": "query_by_submission_timestamp",
        "x": 930,
        "y": 260,
        "wires": [
            [
                "a93ab63b.e0b388"
            ]
        ]
    },
    {
        "id": "17f9defd.e41951",
        "type": "function",
        "z": "821ac598.a66fd8",
        "name": "",
        "func": "delete msg.payload.startkey\ndelete msg.payload.endkey\nmsg.query = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 320,
        "wires": [
            [
                "368cecbb.bd7bf4"
            ]
        ]
    },
    {
        "id": "68856a94.780b64",
        "type": "change",
        "z": "821ac598.a66fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "query",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 400,
        "wires": [
            [
                "f80da720.fcfca8"
            ]
        ]
    },
    {
        "id": "a76855b0.825498",
        "type": "cloudantplus in",
        "z": "821ac598.a66fd8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "query-form",
        "index": "findByTemplateTypeAndSubmissionTimestamp",
        "x": 950,
        "y": 500,
        "wires": [
            [
                "2551d0e9.a880d"
            ]
        ]
    },
    {
        "id": "75b3bb75.481354",
        "type": "function",
        "z": "821ac598.a66fd8",
        "name": "",
        "func": "delete msg.payload.startkey\ndelete msg.payload.endkey\nmsg.query = {};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 540,
        "wires": [
            [
                "a76855b0.825498"
            ]
        ]
    },
    {
        "id": "c14da027.6b018",
        "type": "cloudantplus in",
        "z": "821ac598.a66fd8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "query-form",
        "index": "total_element_by_2_key",
        "x": 1270,
        "y": 160,
        "wires": [
            [
                "b5b354d2.28e818"
            ]
        ]
    },
    {
        "id": "a93ab63b.e0b388",
        "type": "change",
        "z": "821ac598.a66fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "query",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 260,
        "wires": [
            [
                "380e1b52.a1a044"
            ]
        ]
    },
    {
        "id": "f80da720.fcfca8",
        "type": "cloudantplus in",
        "z": "821ac598.a66fd8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "query-form",
        "index": "getTotalElementByTemplateTypeAndSubmissionTimeStampAndWorkstationForm",
        "x": 1290,
        "y": 400,
        "wires": [
            [
                "c5dc8490.fd3ef8"
            ]
        ]
    },
    {
        "id": "2551d0e9.a880d",
        "type": "change",
        "z": "821ac598.a66fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "data",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "query",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1120,
        "y": 500,
        "wires": [
            [
                "61b2ed39.5e6554"
            ]
        ]
    },
    {
        "id": "b5b354d2.28e818",
        "type": "change",
        "z": "821ac598.a66fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "data2",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1460,
        "y": 160,
        "wires": [
            [
                "aadb461d.c01fe8"
            ]
        ]
    },
    {
        "id": "380e1b52.a1a044",
        "type": "cloudantplus in",
        "z": "821ac598.a66fd8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "query-form",
        "index": "total_element_by_submission_timestamp",
        "x": 1290,
        "y": 260,
        "wires": [
            [
                "55cdf93d.f2a108"
            ]
        ]
    },
    {
        "id": "c5dc8490.fd3ef8",
        "type": "change",
        "z": "821ac598.a66fd8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "data2",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1540,
        "y": 480,
        "wires": [
            [
                "fbb9da09.627b88"
            ]
        ]
    },
    {
        "id": "61b2ed39.5e6554",
        "type": "cloudantplus in",
        "z": "821ac598.a66fd8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "query-form",
        "index": "getTotalElementByTemplateTypeAndSubmissionTimestamp",
        "x": 1310,
        "y": 500,
        "wires": [
            [
                "55cdf93d.f2a108"
            ]
        ]
    },
    {
        "id": "aadb461d.c01fe8",
        "type": "function",
        "z": "821ac598.a66fd8",
        "name": "",
        "func": "let tenant = msg.query.startkey[0];\nlet form = msg.query.startkey[1];\nlet templateType = \"formHistory\"\n\nmsg.payload = {};\n\nmsg.payload.key = [tenant,form,templateType]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1640,
        "y": 160,
        "wires": [
            [
                "96286e71.220c1"
            ]
        ]
    },
    {
        "id": "55cdf93d.f2a108",
        "type": "function",
        "z": "821ac598.a66fd8",
        "name": "",
        "func": "let totalElement;\nlet totalPage;\nif(msg.payload[0]){\n    totalElement = msg.payload[0].value;\n    totalPage = Math.ceil(totalElement/msg.pageSize);\n}\nelse{\n    totalElement = 0;\n    totalPage = 0;\n}\nlet resultData = []\nlet datas = msg.data;\nfor(let data of datas ){\n    resultData.push(data.value)\n}\n\nlet totalResult = resultData.length;\nmsg.payload = {};\nmsg.payload.totalElement =totalElement;\nmsg.payload.totalResult = totalResult;\nmsg.payload.totalPage = totalPage;\nmsg.payload.data = resultData;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1480,
        "y": 260,
        "wires": [
            [
                "2eec6a87.cce3b6"
            ]
        ]
    },
    {
        "id": "fbb9da09.627b88",
        "type": "function",
        "z": "821ac598.a66fd8",
        "name": "",
        "func": "let tenant = msg.query.startkey[0];\nlet form = msg.query.startkey[2];\nlet templateType = \"formHistoryDevice\"\n\nmsg.payload = {};\n\nmsg.payload.key = [tenant,form,templateType]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1720,
        "y": 480,
        "wires": [
            [
                "96286e71.220c1"
            ]
        ]
    },
    {
        "id": "96286e71.220c1",
        "type": "cloudantplus in",
        "z": "821ac598.a66fd8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "templateFormSubmission",
        "index": "templateFormSubmission",
        "x": 1570,
        "y": 380,
        "wires": [
            [
                "8cc1c068.7e702"
            ]
        ]
    },
    {
        "id": "2eec6a87.cce3b6",
        "type": "http response",
        "z": "821ac598.a66fd8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1750,
        "y": 260,
        "wires": []
    },
    {
        "id": "8cc1c068.7e702",
        "type": "switch",
        "z": "821ac598.a66fd8",
        "name": "3 from Blueprint or template",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1800,
        "y": 380,
        "wires": [
            [
                "5c58c5fd.8e237c"
            ],
            [
                "e8c02070.c9db5"
            ]
        ]
    },
    {
        "id": "5c58c5fd.8e237c",
        "type": "function",
        "z": "821ac598.a66fd8",
        "name": "",
        "func": "let tenant = msg.query.startkey[0];\nlet productionLine = msg.productionLineBluePrint;\nlet form;\nif(msg.queryTemplateType) {\n    form = msg.query.startkey[2];\n} else {\n    form = msg.query.startkey[1];\n}\n\n\nmsg.payload = {};\n\nmsg.payload.key = [tenant,productionLine,form];\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2020,
        "y": 340,
        "wires": [
            [
                "c47876e1.fd19b8"
            ]
        ]
    },
    {
        "id": "e8c02070.c9db5",
        "type": "function",
        "z": "821ac598.a66fd8",
        "name": "",
        "func": "let totalElement;\nlet totalPage;\nif(msg.data2[0]){\n    totalElement = msg.data2[0].value;\n    totalPage = Math.ceil(totalElement/msg.pageSize);\n}\nelse{\n    totalElement = 0;\n    totalPage = 0;\n}\nlet resultData = []\nlet datas = msg.data;\nfor(let data of datas ){\n    resultData.push(data.value)\n}\nlet template = msg.payload[0].value.template;\nlet dynamicColumn = [];\n\nlet keys = [];\nkeys.push(\"common_field\");\n        \nlet object = {\n    label: \"Common Field\",\n    keys: keys\n}\ndynamicColumn.push(object);\n\nfor (var i = 0; i < template.length; i++) {\n   \n    let label;\n    let columnTemplate = template[i];\n    // if('type' in columnTemplate) {\n    //     if(columnTemplate['type'] == \"mustache\") {\n    //         let stringAndKeyArray = columnTemplate['value'].split('\\n');\n            \n    //         let strings = [];\n    //         let keys = [];\n    //         for(var x = 0; x < stringAndKeyArray.length; x++) {\n    //             let stringAndKey = stringAndKeyArray[x]\n    //             let string = stringAndKey.substring(0, stringAndKey.indexOf('{'));\n    //             node.warn(string);\n    //             strings.push(string);\n    //             let key = stringAndKey.substring(stringAndKey.indexOf('{{')+2, stringAndKey.indexOf('}}'));\n    //             keys.push(key);\n    //         }\n    //         let object = {\n    //             label: columnTemplate['label'],\n    //             columnString: strings,\n    //             keys: keys\n    //         }\n    //         dynamicColumn.push(object);\n            \n    //     } \n    // } else {\n        let keys = [];\n        keys.push(columnTemplate['value']);\n        let object = {\n            label: columnTemplate['label'],\n            keys: keys\n        }\n        dynamicColumn.push(object);\n    // }\n    \n    \n}\n\n\nlet totalResult = resultData.length;\nmsg.payload = {};\nmsg.payload.totalElement =totalElement;\nmsg.payload.totalResult = totalResult;\nmsg.payload.totalPage = totalPage;\nmsg.payload.data = resultData;\nmsg.payload.dynamicColumn = dynamicColumn;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2040,
        "y": 400,
        "wires": [
            [
                "e72d7597.433d58"
            ]
        ]
    },
    {
        "id": "c47876e1.fd19b8",
        "type": "cloudantplus in",
        "z": "821ac598.a66fd8",
        "name": "3RelevantBlue",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "blueprint",
        "index": "blueprint",
        "x": 2180,
        "y": 340,
        "wires": [
            [
                "8581794e.2355d8"
            ]
        ]
    },
    {
        "id": "e72d7597.433d58",
        "type": "http response",
        "z": "821ac598.a66fd8",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 2470,
        "y": 400,
        "wires": []
    },
    {
        "id": "8581794e.2355d8",
        "type": "function",
        "z": "821ac598.a66fd8",
        "name": "",
        "func": "let totalElement;\nlet totalPage;\nif(msg.data2[0]){\n    totalElement = msg.data2[0].value;\n    totalPage = Math.ceil(totalElement/msg.pageSize);\n}\nelse{\n    totalElement = 0;\n    totalPage = 0;\n}\nlet resultData = []\nlet datas = msg.data;\nfor(let data of datas ){\n    resultData.push(data.value)\n}\n\nlet bluePrintTemplates = msg.payload[0].value.template;\nlet template = [];\nfor(var i = 0; i < bluePrintTemplates.length; i++) {\n    if(template.length === 3) {\n            break;\n    }\n    let bluePrintTemplate = bluePrintTemplates[i];\n    let keys = [];\n    if('key' in bluePrintTemplate) {\n         keys.push(bluePrintTemplate['key']);\n         let object = {\n            label: bluePrintTemplate['templateOptions'].label,\n            keys: keys\n        }\n        template.push(object);\n        if(template.length === 3) {\n            break;\n        }\n    } else if ('fieldGroup' in bluePrintTemplate) {\n        for(var x = 0; x < bluePrintTemplate['fieldGroup']; x ++) {\n            let fieldGroup = bluePrintTemplate['fieldGroup'][x];\n            keys.push(fieldGroup['key']);\n            let object = {\n                label: bluePrintTemplate['fieldGroup'][x].label,\n                keys: keys\n            }\n            template.push(object);\n            if(template.length === 3) {\n                break;\n            }\n            \n        }\n    }\n}\n\n\n\n\nlet totalResult = resultData.length;\nmsg.payload = {};\nmsg.payload.totalElement =totalElement;\nmsg.payload.totalResult = totalResult;\nmsg.payload.totalPage = totalPage;\nmsg.payload.data = resultData;\nmsg.payload.dynamicColumn = template;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2360,
        "y": 340,
        "wires": [
            [
                "e72d7597.433d58"
            ]
        ]
    },
    {
        "id": "db6a1d22.6a22a",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "3a7417a6.812638",
        "name": "",
        "x": 460,
        "y": 40,
        "wires": [
            [
                "fde7cca5.cd5da"
            ]
        ]
    },
    {
        "id": "fde7cca5.cd5da",
        "type": "function",
        "z": "3a7417a6.812638",
        "name": "prepare query",
        "func": "let query = {};\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(msg.token.username);\nquery.key.push(msg.payload.formValue.selectProcess);\n\nmsg.reqData = msg.payload;\nmsg.payload = {};\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 40,
        "wires": [
            [
                "51e4210.9eacce"
            ]
        ]
    },
    {
        "id": "51e4210.9eacce",
        "type": "cloudantplus in",
        "z": "3a7417a6.812638",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "process-incomplete",
        "index": "process-incomplete",
        "x": 830,
        "y": 40,
        "wires": [
            [
                "d0278851.eccd78"
            ]
        ]
    },
    {
        "id": "d0278851.eccd78",
        "type": "function",
        "z": "3a7417a6.812638",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 100,
        "wires": [
            [
                "aedb2061.54b11"
            ]
        ]
    },
    {
        "id": "f4b21aa4.9f3388",
        "type": "http response",
        "z": "3a7417a6.812638",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 820,
        "y": 100,
        "wires": []
    },
    {
        "id": "aedb2061.54b11",
        "type": "function",
        "z": "3a7417a6.812638",
        "name": "",
        "func": "let incomplete;\nlet key = msg.reqData.fieldKey;\nif(msg.resultCount == 0) {\n    incomplete = false;\n    if(msg.reqData.formValue) {\n        // if(msg.reqData.formValue.selectProcess){\n            // if(msg.reqData.formValue.selectProcess.fieldKey == \"selectProcess\"){\n                // incomplete = null;\n            // }\n            \n        // }\n        \n    }\n} else {\n    let processIncompleteValue = msg.payload[0].value;\n    if(processIncompleteValue.incomplete) {\n        incomplete = true;\n    } else {\n        incomplete = false;\n    }\n}\nmsg.payload = {}\nmsg.payload.incomplete = incomplete;\nmsg.payload.fieldKey = key;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 100,
        "wires": [
            [
                "f4b21aa4.9f3388"
            ]
        ]
    },
    {
        "id": "5d0ba386.f7f1fc",
        "type": "http in",
        "z": "627c617e.0ab8",
        "name": "",
        "url": "/api/:tenant/forms/select-options/:key",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "914f8e2b.97ade"
            ]
        ]
    },
    {
        "id": "5e82fb01.fa1154",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "Query",
        "func": "// let query = {\n//     \"selector\": {\n//         \"docType\":\"select-option\",\n//         \"type\": msg.req.params.key,\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\nlet query = {}\nquery[\"key\"] = [msg.req.params.tenant, msg.req.params.key]\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "211a4461.fbf09c"
            ]
        ]
    },
    {
        "id": "211a4461.fbf09c",
        "type": "cloudantplus in",
        "z": "627c617e.0ab8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 610,
        "y": 240,
        "wires": [
            [
                "df5e20d4.0d6cd"
            ]
        ]
    },
    {
        "id": "df5e20d4.0d6cd",
        "type": "switch",
        "z": "627c617e.0ab8",
        "name": "Results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 800,
        "y": 240,
        "wires": [
            [
                "5a855bf3.2580b4"
            ],
            [
                "bebd4770.d468a8"
            ]
        ]
    },
    {
        "id": "b40f9b96.c75638",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1220,
        "y": 220,
        "wires": []
    },
    {
        "id": "b2fb4d4d.7eda6",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1240,
        "y": 260,
        "wires": []
    },
    {
        "id": "bebd4770.d468a8",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"No such key found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 260,
        "wires": [
            [
                "b2fb4d4d.7eda6"
            ]
        ]
    },
    {
        "id": "bf440558.d24518",
        "type": "http in",
        "z": "627c617e.0ab8",
        "name": "",
        "url": "/api/:tenant/forms/select-options",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 400,
        "wires": [
            [
                "a374c59f.4cb848"
            ]
        ]
    },
    {
        "id": "91b00d25.d144e",
        "type": "subflow:3b45b61c.50cd0a",
        "z": "627c617e.0ab8",
        "name": "",
        "env": [],
        "x": 680,
        "y": 400,
        "wires": [
            [
                "4ef4e9fb.fd5318"
            ],
            [
                "13446fee.d430a"
            ]
        ]
    },
    {
        "id": "4ef4e9fb.fd5318",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Select Option already exist, use PUT to update instead.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 380,
        "wires": [
            [
                "32d453db.eedd0c"
            ]
        ]
    },
    {
        "id": "32d453db.eedd0c",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1200,
        "y": 380,
        "wires": []
    },
    {
        "id": "bdede5b4.201f18",
        "type": "cloudantplus out",
        "z": "627c617e.0ab8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 370,
        "y": 520,
        "wires": [
            [
                "118fef7f.3ad4f1"
            ]
        ]
    },
    {
        "id": "13446fee.d430a",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "Generate data for new select option",
        "func": "msg.payload = {};\nmsg.payload.docType = \"select-option-list\";\nmsg.payload.type = msg.original.type;\nmsg.payload.created_on = new Date();\nmsg.payload.updated_on = new Date();\nmsg.payload.created_by = msg.token.username;\nmsg.payload.updated_by = msg.token.username;\nmsg.payload.tenant = msg.req.params.tenant;\nmsg.payload.options = msg.original.options;\nfor(let key in msg.original.options){\n    msg.payload.options[key].occupiedCapacity = 0;\n    msg.payload.options[key].status = \"AVAILABLE\";\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 460,
        "wires": [
            [
                "bdede5b4.201f18"
            ]
        ]
    },
    {
        "id": "118fef7f.3ad4f1",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "201",
        "headers": {},
        "x": 600,
        "y": 520,
        "wires": []
    },
    {
        "id": "2ea7ab19.12da54",
        "type": "http in",
        "z": "627c617e.0ab8",
        "name": "",
        "url": "/api/:tenant/forms/select-options",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 620,
        "wires": [
            [
                "2566c22f.95ba8e"
            ]
        ]
    },
    {
        "id": "6b147cf7.0f21f4",
        "type": "subflow:3b45b61c.50cd0a",
        "z": "627c617e.0ab8",
        "name": "",
        "env": [],
        "x": 600,
        "y": 620,
        "wires": [
            [
                "2dd1776e.3fe4c8"
            ],
            [
                "a2c3ebcf.3d79d8"
            ]
        ]
    },
    {
        "id": "a2c3ebcf.3d79d8",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Select Option not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 700,
        "wires": [
            [
                "1f5d35ad.f62f6a"
            ]
        ]
    },
    {
        "id": "1f5d35ad.f62f6a",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 620,
        "y": 700,
        "wires": []
    },
    {
        "id": "843ad473.c46ed8",
        "type": "cloudantplus out",
        "z": "627c617e.0ab8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 910,
        "y": 680,
        "wires": [
            [
                "c6df2ede.a2d34"
            ]
        ]
    },
    {
        "id": "2dd1776e.3fe4c8",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "Generate data for existing select option",
        "func": "\nlet payload = msg.payload[0].value;\n\npayload.updated_on = new Date();\npayload.updated_by = msg.token.username;\npayload.options = msg.original.options;\n\nmsg.payload = payload;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 580,
        "wires": [
            [
                "843ad473.c46ed8"
            ]
        ]
    },
    {
        "id": "c6df2ede.a2d34",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1100,
        "y": 680,
        "wires": []
    },
    {
        "id": "48387941.11d148",
        "type": "http in",
        "z": "627c617e.0ab8",
        "name": "",
        "url": "api/:tenant/forms/select-options",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 780,
        "wires": [
            [
                "e962b6de.f88218"
            ]
        ]
    },
    {
        "id": "decbae34.dce14",
        "type": "comment",
        "z": "627c617e.0ab8",
        "name": "Delete select option",
        "info": "",
        "x": 190,
        "y": 740,
        "wires": []
    },
    {
        "id": "76a935c1.3eaabc",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "checks required fields",
        "func": "msg.original = msg.req.query;\nmsg.isValidFields = true;\n\n// if (!msg.req.query.value) {\n//     msg.isValidFields = false;\n// }\nif (!msg.req.query.type) {\n    msg.isValidFields = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 840,
        "wires": [
            [
                "c38c20d8.1a51f"
            ]
        ]
    },
    {
        "id": "c38c20d8.1a51f",
        "type": "switch",
        "z": "627c617e.0ab8",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 900,
        "wires": [
            [
                "445642a7.63fe6c"
            ],
            [
                "bdde2012.39012"
            ]
        ]
    },
    {
        "id": "bdde2012.39012",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "prepare query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"select-option\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"value\": msg.original.value,\n//         \"type\": msg.original.type\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\nquery[\"key\"] = [msg.req.params.tenant, msg.original.type]\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 960,
        "wires": [
            [
                "c2e3cb79.a105a8"
            ]
        ]
    },
    {
        "id": "c2e3cb79.a105a8",
        "type": "cloudantplus in",
        "z": "627c617e.0ab8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 170,
        "y": 1020,
        "wires": [
            [
                "fdc1c705.fa65b8"
            ]
        ]
    },
    {
        "id": "fdc1c705.fa65b8",
        "type": "switch",
        "z": "627c617e.0ab8",
        "name": "hasResults",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 230,
        "y": 1080,
        "wires": [
            [
                "3abaa700.50f87a"
            ],
            [
                "6d8f344d.0938dc"
            ],
            [
                "4749f8f1.908c48"
            ]
        ]
    },
    {
        "id": "4749f8f1.908c48",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Select Option not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 1140,
        "wires": [
            [
                "cfd8d6d.dee2028"
            ]
        ]
    },
    {
        "id": "cfd8d6d.dee2028",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 240,
        "y": 1200,
        "wires": []
    },
    {
        "id": "6d8f344d.0938dc",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple select options found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1260,
        "wires": [
            [
                "5116c461.7784fc"
            ]
        ]
    },
    {
        "id": "5116c461.7784fc",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 540,
        "y": 1320,
        "wires": []
    },
    {
        "id": "349f8210.d8393e",
        "type": "cloudantplus out",
        "z": "627c617e.0ab8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": false,
        "operation": "delete",
        "x": 450,
        "y": 1140,
        "wires": [
            [
                "9f48714a.18619"
            ]
        ]
    },
    {
        "id": "445642a7.63fe6c",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Missing fields - type, value\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 900,
        "wires": [
            [
                "1291f71.4f6ba09"
            ]
        ]
    },
    {
        "id": "1291f71.4f6ba09",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 540,
        "y": 960,
        "wires": []
    },
    {
        "id": "3abaa700.50f87a",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "prepare id",
        "func": "msg.payload = msg.payload[0].value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 1080,
        "wires": [
            [
                "349f8210.d8393e"
            ]
        ]
    },
    {
        "id": "9f48714a.18619",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 520,
        "y": 1200,
        "wires": []
    },
    {
        "id": "914f8e2b.97ade",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "627c617e.0ab8",
        "name": "",
        "x": 300,
        "y": 100,
        "wires": [
            [
                "83623cc.10d7bc"
            ]
        ]
    },
    {
        "id": "a374c59f.4cb848",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "627c617e.0ab8",
        "name": "",
        "x": 420,
        "y": 400,
        "wires": [
            [
                "91b00d25.d144e"
            ]
        ]
    },
    {
        "id": "2566c22f.95ba8e",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "627c617e.0ab8",
        "name": "",
        "x": 380,
        "y": 620,
        "wires": [
            [
                "6b147cf7.0f21f4"
            ]
        ]
    },
    {
        "id": "e962b6de.f88218",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "627c617e.0ab8",
        "name": "",
        "x": 460,
        "y": 780,
        "wires": [
            [
                "76a935c1.3eaabc"
            ]
        ]
    },
    {
        "id": "47d3442a.4403cc",
        "type": "switch",
        "z": "627c617e.0ab8",
        "name": "",
        "property": "req.params.key",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "batchId",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 140,
        "wires": [
            [
                "80da0c22.9ec46"
            ],
            [
                "4c2e1730.7ff428"
            ]
        ]
    },
    {
        "id": "b3d08b96.696968",
        "type": "http in",
        "z": "627c617e.0ab8",
        "name": "",
        "url": "/api/:tenant/forms/select-option-list/:key",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 1440,
        "wires": [
            [
                "a717f342.3a2ac"
            ]
        ]
    },
    {
        "id": "a717f342.3a2ac",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "627c617e.0ab8",
        "name": "",
        "x": 530,
        "y": 1440,
        "wires": [
            [
                "3c7d972f.fbd1b8"
            ]
        ]
    },
    {
        "id": "3c7d972f.fbd1b8",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "Query",
        "func": "// let query = {\n//     \"selector\": {\n//         \"docType\":\"select-option\",\n//         \"type\": msg.req.params.key,\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\nlet query = {}\nquery[\"key\"] = [msg.req.params.tenant, msg.req.params.key]\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 150,
        "y": 1520,
        "wires": [
            [
                "d9cbbdd2.a67d4"
            ]
        ]
    },
    {
        "id": "d9cbbdd2.a67d4",
        "type": "cloudantplus in",
        "z": "627c617e.0ab8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 310,
        "y": 1520,
        "wires": [
            [
                "b91aa8b9.a0c6a8"
            ]
        ]
    },
    {
        "id": "b91aa8b9.a0c6a8",
        "type": "switch",
        "z": "627c617e.0ab8",
        "name": "Results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 320,
        "y": 1580,
        "wires": [
            [
                "cb2bef58.2a69"
            ],
            [
                "d74d5817.dcd628"
            ]
        ]
    },
    {
        "id": "cb2bef58.2a69",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "Structure return data",
        "func": "let selectOptions = [];\n\n// for (var i = 0; i < msg.payload.length; i++) {\n//     let doc = msg.payload[i].value;\n//     let option = {\n//         label: doc.label,\n//         value: doc.value,\n//     };\n//     selectOptions.push(option);\n// }\n\nmsg.payload = msg.payload[0].value;\ndelete msg.payload._id\ndelete msg.payload._rev\ndelete msg.payload.docType\ndelete msg.payload.created_on\ndelete msg.payload.updated_on\ndelete msg.payload.created_by\ndelete msg.payload.updated_by\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 1560,
        "wires": [
            [
                "b277fc04.8f05f"
            ]
        ]
    },
    {
        "id": "17bcc8cc.03af47",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 500,
        "y": 1680,
        "wires": []
    },
    {
        "id": "d74d5817.dcd628",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"No such key found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 1640,
        "wires": [
            [
                "17bcc8cc.03af47"
            ]
        ]
    },
    {
        "id": "b277fc04.8f05f",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 800,
        "y": 1560,
        "wires": []
    },
    {
        "id": "1ccf4f6d.a29891",
        "type": "switch",
        "z": "627c617e.0ab8",
        "name": "",
        "property": "req.query._id",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 140,
        "wires": [
            [
                "6ff51686.3191b8"
            ],
            [
                "3261975e.fbd8e8"
            ]
        ]
    },
    {
        "id": "3261975e.fbd8e8",
        "type": "change",
        "z": "627c617e.0ab8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "update",
                "pt": "msg",
                "to": "false",
                "tot": "bool"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 160,
        "wires": [
            [
                "47d3442a.4403cc"
            ]
        ]
    },
    {
        "id": "a7c995f6.a1d998",
        "type": "comment",
        "z": "627c617e.0ab8",
        "name": "Check update and incomplete",
        "info": "",
        "x": 660,
        "y": 100,
        "wires": []
    },
    {
        "id": "d21463ba.43744",
        "type": "comment",
        "z": "627c617e.0ab8",
        "name": "Special Flow for batch Id",
        "info": "",
        "x": 1190,
        "y": 80,
        "wires": []
    },
    {
        "id": "6ff51686.3191b8",
        "type": "subflow:7e9f6a8.8c1a694",
        "z": "627c617e.0ab8",
        "name": "",
        "env": [],
        "x": 790,
        "y": 120,
        "wires": [
            [
                "47d3442a.4403cc"
            ]
        ]
    },
    {
        "id": "d6e36303.91015",
        "type": "switch",
        "z": "627c617e.0ab8",
        "name": "",
        "property": "req.query",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "templateType",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 100,
        "wires": [
            [
                "4fecbddd.d32b34"
            ],
            [
                "1ccf4f6d.a29891"
            ]
        ]
    },
    {
        "id": "4fecbddd.d32b34",
        "type": "link out",
        "z": "627c617e.0ab8",
        "name": "from GET select option endpoint",
        "links": [],
        "x": 555,
        "y": 60,
        "wires": []
    },
    {
        "id": "efcd7c56.ce327",
        "type": "comment",
        "z": "627c617e.0ab8",
        "name": "To have different logic with Template Type",
        "info": "",
        "x": 560,
        "y": 20,
        "wires": []
    },
    {
        "id": "80da0c22.9ec46",
        "type": "subflow:5a50dcc5.c18a24",
        "z": "627c617e.0ab8",
        "name": "",
        "env": [],
        "x": 1170,
        "y": 120,
        "wires": [
            [
                "12c93e7b.c6b0f2"
            ],
            [
                "b0018544.4c1978"
            ]
        ]
    },
    {
        "id": "894d8151.3c537",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "templateFormSubmission",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/templateFormSubmission\",\n  \"_rev\": \"4-204b3999939b3ca656fd8039d617a341\",\n  \"views\": {\n    \"templateFormSubmission\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType == \\\"formSubmission\\\")\\n  emit([doc.tenant, doc.workstationForm, doc.templateType], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 510,
        "y": 1440,
        "wires": [
            [
                "8cb8a084.b4753"
            ]
        ]
    },
    {
        "id": "3b04d532.f2410a",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "a2e16a21.c40328",
        "name": "",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "c1b64fb6.8eaeb"
            ]
        ]
    },
    {
        "id": "c82ae03f.717e1",
        "type": "subflow:8462caeb.467d18",
        "z": "a2e16a21.c40328",
        "name": "",
        "env": [],
        "x": 750,
        "y": 80,
        "wires": [
            [
                "ae1c9f1f.89345",
                "d8a8ea05.bff3c8"
            ]
        ]
    },
    {
        "id": "c1b64fb6.8eaeb",
        "type": "change",
        "z": "a2e16a21.c40328",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "protengaUser.username",
                "pt": "msg",
                "to": "token.username",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "normal",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 500,
        "y": 80,
        "wires": [
            [
                "c82ae03f.717e1",
                "fa7c0971.21d6a8"
            ]
        ]
    },
    {
        "id": "ae1c9f1f.89345",
        "type": "debug",
        "z": "a2e16a21.c40328",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 970,
        "y": 40,
        "wires": []
    },
    {
        "id": "fa7c0971.21d6a8",
        "type": "debug",
        "z": "a2e16a21.c40328",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 40,
        "wires": []
    },
    {
        "id": "ba610eff.a17e",
        "type": "http response",
        "z": "a2e16a21.c40328",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 1140,
        "y": 80,
        "wires": []
    },
    {
        "id": "d8a8ea05.bff3c8",
        "type": "function",
        "z": "a2e16a21.c40328",
        "name": "",
        "func": "let incomplete;\nif(msg.resultCount == 0) {\n    incomplete = false;\n} else {\n    let attendanceIncompleteValue = msg.payload[0].value;\n    if(attendanceIncompleteValue.incomplete) {\n        incomplete = true;\n    } else {\n        incomplete = false;\n    }\n}\nmsg.payload = {}\nmsg.payload.incomplete = incomplete;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 80,
        "wires": [
            [
                "ba610eff.a17e",
                "31c90a1a.775976"
            ]
        ]
    },
    {
        "id": "31c90a1a.775976",
        "type": "debug",
        "z": "a2e16a21.c40328",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1130,
        "y": 40,
        "wires": []
    },
    {
        "id": "d2ff3e72.ab2fc",
        "type": "switch",
        "z": "a2e16a21.c40328",
        "name": "",
        "property": "payload.fieldKey",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "action",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 170,
        "y": 100,
        "wires": [
            [
                "3b04d532.f2410a"
            ],
            [
                "6a584ba7.d81404"
            ]
        ]
    },
    {
        "id": "6a584ba7.d81404",
        "type": "function",
        "z": "a2e16a21.c40328",
        "name": "",
        "func": "msg.payload = null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 120,
        "wires": [
            [
                "ee41dfe1.b254f"
            ]
        ]
    },
    {
        "id": "ee41dfe1.b254f",
        "type": "http response",
        "z": "a2e16a21.c40328",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 480,
        "y": 120,
        "wires": []
    },
    {
        "id": "d54b4df3.1f902",
        "type": "function",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "func": "let form5 = {\n    \"breeding\":[\"grow-out-setup\"],\n    \"farming\":[\"grow-out-setup\"]\n}\nlet form16 = {\n    \"breeding\":[\"pupation-setup-basic\", \"pupation-setup-detail\"],\n    \"farming\":[\"grow-out-setup\"]\n}\nlet formCheck4 = {\n    \"breeding\": [\"nursery-output\", \"nursery-checkout\"],\n    \"farming\":[\"grow-out-setup\"]\n}\nlet formOK = {\n    \"breeding\":[\"grow-out-harvest\"],\n    \"farming\":[\"grow-out-harvest\"]\n}\nif(form5[msg.req.query.line].includes(msg.req.query.form)){\n    msg.type = 4;\n}\nelse if(form16[msg.req.query.line].includes(msg.req.query.form)){\n    msg.type = 16;\n}\nelse if(formCheck4[msg.req.query.line].includes(msg.req.query.form)){\n    msg.type=\"check\"\n} else if (formOK[msg.req.query.line].includes(msg.req.query.form)) {\n    msg.type=\"ok\";\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "914a9e2b.8681d"
            ]
        ]
    },
    {
        "id": "6182475c.6e66a8",
        "type": "function",
        "z": "9d22d937.3a9108",
        "name": "prepare query",
        "func": "let query = {}\nquery[\"key\"]=[msg.req.params.tenant, msg.original.productionLine, msg.original.workstationForm, msg.original.templateType]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 480,
        "wires": [
            [
                "80c6f4d8.a46108"
            ]
        ]
    },
    {
        "id": "80c6f4d8.a46108",
        "type": "cloudantplus in",
        "z": "9d22d937.3a9108",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "mustache",
        "index": "mustache",
        "x": 470,
        "y": 480,
        "wires": [
            [
                "9c1d4cb1.c0cb3"
            ]
        ]
    },
    {
        "id": "27867d8e.5df692",
        "type": "function",
        "z": "9d22d937.3a9108",
        "name": "checks required fields",
        "func": "msg.original = msg.payload;\nmsg.isValidFields = true;\n\nif (msg.payload.templateType !== 'device-param') {\n    if (!msg.payload.productionLine) {\n    msg.isValidFields = false;\n    }\n    if (!msg.payload.workstationForm) {\n        msg.isValidFields = false;\n    }    \n}\n\nif (!msg.payload.templateType) {\n    msg.isValidFields = false;\n}\nif (!msg.payload.template) {\n    msg.isValidFields = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 120,
        "wires": [
            [
                "c1e580cd.88cee"
            ]
        ]
    },
    {
        "id": "c1e580cd.88cee",
        "type": "switch",
        "z": "9d22d937.3a9108",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 220,
        "wires": [
            [
                "7e21500b.2fae8"
            ],
            [
                "67e1f70c.535318"
            ]
        ]
    },
    {
        "id": "ba920aba.2877e8",
        "type": "http response",
        "z": "9d22d937.3a9108",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 700,
        "y": 220,
        "wires": []
    },
    {
        "id": "7e21500b.2fae8",
        "type": "function",
        "z": "9d22d937.3a9108",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Missing fields - productionLine, workstationForm, templateType, template\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 160,
        "wires": [
            [
                "ba920aba.2877e8"
            ]
        ]
    },
    {
        "id": "9c1d4cb1.c0cb3",
        "type": "switch",
        "z": "9d22d937.3a9108",
        "name": "results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 750,
        "y": 380,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "67e1f70c.535318",
        "type": "switch",
        "z": "9d22d937.3a9108",
        "name": "",
        "property": "original.templateType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "formHistory",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "formHistoryDevice",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "device-param",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 90,
        "y": 320,
        "wires": [
            [
                "1d3ac964.918b97"
            ],
            [
                "1d3ac964.918b97"
            ],
            [
                "2fdc7377.e8281c"
            ],
            [
                "6182475c.6e66a8"
            ]
        ]
    },
    {
        "id": "6cd6012e.e8b8e",
        "type": "cloudantplus in",
        "z": "9d22d937.3a9108",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "templateFormSubmission",
        "index": "templateFormSubmission",
        "x": 470,
        "y": 340,
        "wires": [
            [
                "9c1d4cb1.c0cb3",
                "73bfd47e.40fb3c"
            ]
        ]
    },
    {
        "id": "92378732.6eb198",
        "type": "comment",
        "z": "9d22d937.3a9108",
        "name": "mustache",
        "info": "",
        "x": 460,
        "y": 520,
        "wires": []
    },
    {
        "id": "df522843.884fe8",
        "type": "comment",
        "z": "9d22d937.3a9108",
        "name": "formHistory",
        "info": "",
        "x": 470,
        "y": 300,
        "wires": []
    },
    {
        "id": "73bfd47e.40fb3c",
        "type": "debug",
        "z": "9d22d937.3a9108",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 320,
        "wires": []
    },
    {
        "id": "1d3ac964.918b97",
        "type": "function",
        "z": "9d22d937.3a9108",
        "name": "prepare query",
        "func": "let query = {}\nquery[\"key\"]=[msg.req.params.tenant, msg.original.workstationForm, msg.original.templateType]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 340,
        "wires": [
            [
                "6cd6012e.e8b8e"
            ]
        ]
    },
    {
        "id": "f2211b39.5641a8",
        "type": "comment",
        "z": "83f6cb29.f6a468",
        "name": "Create mustache template",
        "info": "",
        "x": 270,
        "y": 40,
        "wires": []
    },
    {
        "id": "f434ae36.69e3",
        "type": "http in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "url": "api/:tenant/forms/template",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 80,
        "wires": [
            [
                "7f1a7825.36e7e8"
            ]
        ]
    },
    {
        "id": "beadd771.b214b8",
        "type": "cloudantplus out",
        "z": "83f6cb29.f6a468",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 230,
        "y": 260,
        "wires": [
            [
                "ab885fec.16bd2"
            ]
        ]
    },
    {
        "id": "e0c48554.daee58",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "prepare data",
        "func": "msg.payload = {};\nif(msg.original.templateType == \"export\") {\n    msg.payload.docType = \"mustache\";\n    msg.payload.createdOn = new Date();\n    msg.payload.updatedOn = new Date();\n    msg.payload.tenant = msg.req.params.tenant;\n    msg.payload.productionLine = msg.original.productionLine;\n    msg.payload.workstationForm = msg.original.workstationForm;\n    msg.payload.templateType = msg.original.templateType;\n    msg.payload.template = msg.original.template;\n} else if (msg.original.templateType == \"formHistory\") {\n    msg.payload.docType = \"formSubmission\";\n    msg.payload.createdOn = new Date();\n    msg.payload.updatedOn = new Date();\n    msg.payload.tenant = msg.req.params.tenant;\n    msg.payload.productionLine = msg.original.productionLine;\n    msg.payload.workstationForm = msg.original.workstationForm;\n    msg.payload.templateType = msg.original.templateType;\n    msg.payload.template = msg.original.template;\n} else if (msg.original.templateType == \"formHistoryDevice\") {\n    msg.payload.docType = \"formSubmission\";\n    msg.payload.createdOn = new Date();\n    msg.payload.updatedOn = new Date();\n    msg.payload.tenant = msg.req.params.tenant;\n    msg.payload.productionLine = msg.original.productionLine;\n    msg.payload.workstationForm = msg.original.workstationForm;\n    msg.payload.templateType = msg.original.templateType;\n    msg.payload.template = msg.original.template;\n} else {\n    msg.payload.docType = \"template\";\n    msg.payload.createdOn = new Date();\n    msg.payload.updatedOn = new Date();\n    msg.payload.tenant = msg.req.params.tenant;\n    msg.payload.productionLine = msg.original.productionLine;\n    msg.payload.workstationForm = msg.original.workstationForm;\n    msg.payload.templateType = msg.original.templateType;\n    msg.payload.template = msg.original.template;\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 290,
        "y": 200,
        "wires": [
            [
                "beadd771.b214b8"
            ]
        ]
    },
    {
        "id": "ab885fec.16bd2",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "201",
        "headers": {},
        "x": 300,
        "y": 320,
        "wires": []
    },
    {
        "id": "50a28ae7.110244",
        "type": "comment",
        "z": "83f6cb29.f6a468",
        "name": "Update forms translation",
        "info": "",
        "x": 250,
        "y": 400,
        "wires": []
    },
    {
        "id": "2726f709.170608",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "prepare data",
        "func": "let payload;\n\nif (msg.payload.docs[0].templateType === 'device-param') {\n    payload = msg.payload.docs[0];\n} else {\n    payload = msg.payload[0].value;\n}\n\npayload.updatedOn = new Date();\npayload.template = msg.original.template\n\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 500,
        "wires": [
            [
                "66c5772c.741408"
            ]
        ]
    },
    {
        "id": "d40e9547.419828",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 600,
        "y": 620,
        "wires": []
    },
    {
        "id": "66c5772c.741408",
        "type": "cloudantplus out",
        "z": "83f6cb29.f6a468",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 530,
        "y": 560,
        "wires": [
            [
                "d40e9547.419828"
            ]
        ]
    },
    {
        "id": "8ffd6e7a.ddad6",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 600,
        "y": 200,
        "wires": []
    },
    {
        "id": "e1e28211.d3fd7",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Template exist, use PUT to update instead.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 140,
        "wires": [
            [
                "8ffd6e7a.ddad6"
            ]
        ]
    },
    {
        "id": "220fe698.fe6b9a",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 600,
        "y": 320,
        "wires": []
    },
    {
        "id": "feeab67a.107b58",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple templates type found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 260,
        "wires": [
            [
                "220fe698.fe6b9a"
            ]
        ]
    },
    {
        "id": "69670d6b.9b0074",
        "type": "http in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "url": "api/:tenant/forms/template",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 440,
        "wires": [
            [
                "21e4b84f.9b5cd8"
            ]
        ]
    },
    {
        "id": "f676e2c3.ffad3",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 300,
        "y": 620,
        "wires": []
    },
    {
        "id": "ef269ae0.7f4f58",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Template not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 560,
        "wires": [
            [
                "f676e2c3.ffad3"
            ]
        ]
    },
    {
        "id": "9bd02305.64df4",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 600,
        "y": 740,
        "wires": []
    },
    {
        "id": "27f784a6.da16ac",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple template type found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 680,
        "wires": [
            [
                "9bd02305.64df4"
            ]
        ]
    },
    {
        "id": "5f6cb7c7.373038",
        "type": "http in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "url": "api/:tenant/forms/template",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 220,
        "y": 860,
        "wires": [
            [
                "97558d46.e9987"
            ]
        ]
    },
    {
        "id": "70341e11.edee3",
        "type": "comment",
        "z": "83f6cb29.f6a468",
        "name": "Delete forms translation",
        "info": "",
        "x": 260,
        "y": 820,
        "wires": []
    },
    {
        "id": "a4d0fb17.6bb9e8",
        "type": "switch",
        "z": "83f6cb29.f6a468",
        "name": "results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 250,
        "y": 1240,
        "wires": [
            [
                "79a063e8.17fc9c"
            ],
            [
                "3eb34e28.58d342"
            ],
            [
                "7167deb5.e342"
            ]
        ]
    },
    {
        "id": "4122132c.4c16cc",
        "type": "cloudantplus in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "mustache",
        "index": "mustache",
        "x": 130,
        "y": 1180,
        "wires": [
            [
                "a4d0fb17.6bb9e8"
            ]
        ]
    },
    {
        "id": "8d90f4d1.374b08",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "prepare query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"language\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"productionLine\": msg.original.productionLine,\n//         \"workstationForm\": msg.original.workstationForm,\n//         \"langType\": msg.original.langType\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\nquery[\"key\"]=[msg.req.params.tenant, msg.original.productionLine, msg.original.workstationForm, msg.original.templateType]\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 1120,
        "wires": [
            [
                "4122132c.4c16cc"
            ]
        ]
    },
    {
        "id": "555d0d34.89bc54",
        "type": "switch",
        "z": "83f6cb29.f6a468",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 980,
        "wires": [
            [
                "888df2a0.f8407"
            ],
            [
                "d583fc61.92858"
            ]
        ]
    },
    {
        "id": "888df2a0.f8407",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Missing fields - productionLine, workstationForm, templateType\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 980,
        "wires": [
            [
                "bc9812c2.d46f2"
            ]
        ]
    },
    {
        "id": "bc9812c2.d46f2",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 600,
        "y": 1040,
        "wires": []
    },
    {
        "id": "97558d46.e9987",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "checks required fields",
        "func": "msg.original = msg.req.query;\nmsg.isValidFields = true;\n\nif (msg.payload.templateType !== 'device-param') {\n    if (!msg.req.query.productionLine) {\n        msg.isValidFields = false;\n    }\n    if (!msg.req.query.workstationForm) {\n        msg.isValidFields = false;\n    }\n    if (!msg.req.query.templateType) {\n        msg.isValidFields = false;\n    }    \n} else {\n    msg.original.deviceParam = msg.payload\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 920,
        "wires": [
            [
                "555d0d34.89bc54"
            ]
        ]
    },
    {
        "id": "7167deb5.e342",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Template not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 1300,
        "wires": [
            [
                "5c1f4574.feabbc"
            ]
        ]
    },
    {
        "id": "5c1f4574.feabbc",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 300,
        "y": 1360,
        "wires": []
    },
    {
        "id": "3eb34e28.58d342",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple template type found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 1420,
        "wires": [
            [
                "adf7b79f.092368"
            ]
        ]
    },
    {
        "id": "adf7b79f.092368",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 600,
        "y": 1480,
        "wires": []
    },
    {
        "id": "9e89c41b.fc5e88",
        "type": "cloudantplus out",
        "z": "83f6cb29.f6a468",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": false,
        "operation": "delete",
        "x": 530,
        "y": 1300,
        "wires": [
            [
                "14e12c50.29ab74"
            ]
        ]
    },
    {
        "id": "14e12c50.29ab74",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 600,
        "y": 1360,
        "wires": []
    },
    {
        "id": "79a063e8.17fc9c",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "prepare data",
        "func": "if (msg.payload.docs[0].templateType === 'device-param') {\n    msg.payload = msg.payload.docs[0];    \n} else {\n    msg.payload = msg.payload[0].value;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 590,
        "y": 1240,
        "wires": [
            [
                "9e89c41b.fc5e88"
            ]
        ]
    },
    {
        "id": "7f1a7825.36e7e8",
        "type": "subflow:9d22d937.3a9108",
        "z": "83f6cb29.f6a468",
        "name": "",
        "env": [],
        "x": 230,
        "y": 140,
        "wires": [
            [
                "e1e28211.d3fd7"
            ],
            [
                "feeab67a.107b58"
            ],
            [
                "e0c48554.daee58"
            ]
        ]
    },
    {
        "id": "21e4b84f.9b5cd8",
        "type": "subflow:9d22d937.3a9108",
        "z": "83f6cb29.f6a468",
        "name": "",
        "env": [],
        "x": 250,
        "y": 500,
        "wires": [
            [
                "2726f709.170608"
            ],
            [
                "27f784a6.da16ac"
            ],
            [
                "ef269ae0.7f4f58"
            ]
        ]
    },
    {
        "id": "ae55ea9.2c7e018",
        "type": "http in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "url": "/api/:tenant/forms/template",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 270,
        "y": 1480,
        "wires": [
            [
                "5af26086.0b774"
            ]
        ]
    },
    {
        "id": "578e50f9.c7b8e",
        "type": "switch",
        "z": "83f6cb29.f6a468",
        "name": "Results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 1580,
        "wires": [
            [
                "155d8491.57eb3b"
            ],
            [
                "32dfb3d7.36517c"
            ]
        ]
    },
    {
        "id": "155d8491.57eb3b",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "Structure return data",
        "func": "msg.payload = msg.payload[0].value;\ndelete msg.payload._id\ndelete msg.payload._rev\ndelete msg.payload.docType\ndelete msg.payload.createdOn\ndelete msg.payload.updatedOn\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 1560,
        "wires": [
            [
                "2a9eebaa.c529c4"
            ]
        ]
    },
    {
        "id": "ccb6c31c.fdb57",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1360,
        "y": 1600,
        "wires": []
    },
    {
        "id": "32dfb3d7.36517c",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Template not found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 1600,
        "wires": [
            [
                "ccb6c31c.fdb57"
            ]
        ]
    },
    {
        "id": "2a9eebaa.c529c4",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1340,
        "y": 1560,
        "wires": []
    },
    {
        "id": "5af26086.0b774",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "checks required fields",
        "func": "msg.original = msg.req.query;\nmsg.isValidFields = true;\n\n// Common Template Types doesn't requires;\n// productionLine and workstationForm.\n\nlet templateType = msg.payload.templateType\nlet commonTemplateTypes = ['device-param']\nlet isCommonTemplateTypes = commonTemplateTypes.includes(templateType)\n\nif (!msg.req.query.productionLine && !isCommonTemplateTypes) {\n    msg.isValidFields = false;\n}\nif (!msg.req.query.workstationForm && !isCommonTemplateTypes) {\n    msg.isValidFields = false;\n}\nif (!msg.req.query.templateType) {\n    msg.isValidFields = false;\n}\n\nmsg.isCommonTemplateTypes = isCommonTemplateTypes\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 1520,
        "wires": [
            [
                "3653ac8d.47eb54"
            ]
        ]
    },
    {
        "id": "3653ac8d.47eb54",
        "type": "switch",
        "z": "83f6cb29.f6a468",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 290,
        "y": 1560,
        "wires": [
            [
                "a813f189.bc03c"
            ],
            [
                "1b795e9d.3242f1"
            ]
        ]
    },
    {
        "id": "a813f189.bc03c",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Missing fields - productionLine, workstationForm, templateType\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 1540,
        "wires": [
            [
                "4d247ba7.7baed4"
            ]
        ]
    },
    {
        "id": "4d247ba7.7baed4",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 760,
        "y": 1540,
        "wires": []
    },
    {
        "id": "d583fc61.92858",
        "type": "switch",
        "z": "83f6cb29.f6a468",
        "name": "",
        "property": "original.templateType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "formHistory",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "formHistoryDevice",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 230,
        "y": 1040,
        "wires": [
            [
                "4815db02.704e34"
            ],
            [
                "4815db02.704e34"
            ],
            [
                "2cb7d881.f0b1c8"
            ]
        ]
    },
    {
        "id": "1d4a710c.be2adf",
        "type": "cloudantplus in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "templateFormSubmission",
        "index": "templateFormSubmission",
        "x": 330,
        "y": 1180,
        "wires": [
            [
                "a4d0fb17.6bb9e8"
            ]
        ]
    },
    {
        "id": "4815db02.704e34",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "prepare query",
        "func": "let query = {}\nquery[\"key\"]=[msg.req.params.tenant, msg.original.workstationForm, msg.original.templateType]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 1120,
        "wires": [
            [
                "1d4a710c.be2adf"
            ]
        ]
    },
    {
        "id": "1b795e9d.3242f1",
        "type": "switch",
        "z": "83f6cb29.f6a468",
        "name": "",
        "property": "original.templateType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "formHistory",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "formHistoryDevice",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 310,
        "y": 1600,
        "wires": [
            [
                "f4841e98.cd2dd"
            ],
            [
                "f4841e98.cd2dd"
            ],
            [
                "819b2eae.9ded8"
            ]
        ]
    },
    {
        "id": "1206e083.c2926f",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "prepare query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"language\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"productionLine\": msg.original.productionLine,\n//         \"workstationForm\": msg.original.workstationForm,\n//         \"langType\": msg.original.langType\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\nquery[\"key\"]=[msg.req.params.tenant, msg.original.productionLine, msg.original.workstationForm, msg.original.templateType]\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 1680,
        "wires": [
            [
                "a9289d41.05272"
            ]
        ]
    },
    {
        "id": "a9289d41.05272",
        "type": "cloudantplus in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "mustache",
        "index": "mustache",
        "x": 510,
        "y": 1720,
        "wires": [
            [
                "b00cc0f1.d350b"
            ]
        ]
    },
    {
        "id": "11cc0756.b28249",
        "type": "cloudantplus in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "templateFormSubmission",
        "index": "templateFormSubmission",
        "x": 710,
        "y": 1580,
        "wires": [
            [
                "578e50f9.c7b8e"
            ]
        ]
    },
    {
        "id": "f4841e98.cd2dd",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "prepare query",
        "func": "let query = {}\nquery[\"key\"]=[msg.req.params.tenant, msg.original.workstationForm, msg.original.templateType]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 1580,
        "wires": [
            [
                "11cc0756.b28249"
            ]
        ]
    },
    {
        "id": "b520de9d.12c8b",
        "type": "switch",
        "z": "3a7417a6.812638",
        "name": "",
        "property": "payload.fieldKey",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "action",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 180,
        "y": 100,
        "wires": [
            [
                "db6a1d22.6a22a"
            ],
            [
                "7ebace6f.c55d7"
            ]
        ]
    },
    {
        "id": "7ebace6f.c55d7",
        "type": "function",
        "z": "3a7417a6.812638",
        "name": "",
        "func": "msg.payload = null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 160,
        "wires": [
            [
                "eb529c41.a6802"
            ]
        ]
    },
    {
        "id": "eb529c41.a6802",
        "type": "http response",
        "z": "3a7417a6.812638",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 600,
        "y": 160,
        "wires": []
    },
    {
        "id": "3ec123e3.9aa7bc",
        "type": "http response",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 580,
        "y": 240,
        "wires": []
    },
    {
        "id": "50107a0f.0eb724",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.errors = []\n\nconst rackObj = msg.rack;\nconst rackId = msg.original.breedingNurserySetupRackId;\nconst batchId = msg.original.batchId;\n\n// node.warn(rackObj)\n// node.warn(rackId)\n// node.warn(batchId)\n\nlet selectedRack = rackObj.options[rackId]\nlet trayCount = selectedRack.batchIdList[batchId]\nlet enteredTrayCount = msg.original.nurseryTraysOutCount\n\n// node.warn(selectedRack)\n// node.warn(trayCount)\n\nif (enteredTrayCount > trayCount) {\n    let error = \"Trays entered exceed the available trays of \"\n    error = error + trayCount\n    msg.errors.push(error)\n}\n\nlet finalTrayCount = +trayCount - +enteredTrayCount\n\n// Updates the rack batchIdList\nif (finalTrayCount < 1) {\n    delete selectedRack.batchIdList[batchId]\n} else {\n    selectedRack.batchIdList[batchId] = finalTrayCount\n}\n\n// Updates the rac status\nif (Object.keys(selectedRack.batchIdList).length < 1) {\n    selectedRack.status = \"AVAILABLE\"\n} else {\n    selectedRack.status = \"PARTIALLY_OCCUPIED\"\n}\n\n// Updates the rack occupiedCapacity\nselectedRack.occupiedCapacity = +selectedRack.occupiedCapacity - +enteredTrayCount\n\n// node.warn(selectedRack)\n\nrackObj.options[rackId] = selectedRack\n\nmsg.payload = rackObj\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2400,
        "y": 2340,
        "wires": [
            []
        ]
    },
    {
        "id": "a2e6d328.bb94b",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2930,
        "y": 2260,
        "wires": [
            [
                "489d8c0f.6fbd84"
            ],
            [
                "225ac991.216c66"
            ]
        ]
    },
    {
        "id": "489d8c0f.6fbd84",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 3090,
        "y": 2240,
        "wires": [
            [
                "7b6a5cc1.c319a4"
            ]
        ]
    },
    {
        "id": "225ac991.216c66",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "error",
        "func": "msg.payload = {message: msg.errors[0]}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3070,
        "y": 2280,
        "wires": [
            [
                "39afdaa7.97a4c6"
            ]
        ]
    },
    {
        "id": "39afdaa7.97a4c6",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 3220,
        "y": 2280,
        "wires": []
    },
    {
        "id": "7b6a5cc1.c319a4",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3280,
        "y": 2240,
        "wires": [
            [
                "57da022a.e7705c"
            ]
        ]
    },
    {
        "id": "57da022a.e7705c",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "to master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 3415,
        "y": 2240,
        "wires": []
    },
    {
        "id": "5a855bf3.2580b4",
        "type": "function",
        "z": "627c617e.0ab8",
        "name": "Structure return data",
        "func": "let selectOptions = [];\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    let doc = msg.payload[i].value;\n    for(let key in doc.options){\n        let option ={\n            \"value\" :key,\n            \"label\" : doc.options[key].label\n        }\n        \n        // Since the asset data model has migrated,\n        // it is still filter options using old data model,\n        // thus some options might not be visible to user.\n        // Temporary disable this options filter.\n        // \n        // if(msg.update){\n        //     filterDropdownUpdate(option, doc);\n        // }\n        // else{\n        //     filterDropdownCreate(option, doc);\n        // }\n        \n        // This will just push all available options,\n        // Comment out if using filterDropdownUpdate above.\n        selectOptions.push(option);\n    }\n\n}\n\nmsg.payload = {};\nmsg.payload = selectOptions;\n\n\nfunction filterDropdownCreate(option, doc){\n    let key = option.value\n    let showOccupied = {\n        \"breeding\":[\"grow-out-harvest\", \"nursery-output\", \"pupation-emergence-complete\",\"nursery-checkout\"],\n        \"farming\":[\"grow-out-harvest\"]\n    }\n    let showNotOccupied = {\n        \"breeding\":[\"grow-out-setup\", \"nursery-setup\", \"pupation-setup-detail\"],\n        \"farming\":[\"grow-out-setup\"]\n    }\n    let specialCase = {\n        \"breeding\":[\"pupation-emergence-setup-detail\"]\n    }\n    if(doc.options[key].capacity){\n        if(showOccupied[msg.req.query.line].includes(msg.req.query.form)){\n             if(msg.req.query.form == \"pupation-emergence-complete\" && msg.req.params.key ==\"pupationRackID\"){\n                if(doc.options[key].status!=\"AVAILABLE\" && doc.options[key].pupationChamberId){\n                    selectOptions.push(option);\n                }\n                    \n            }\n            else if(doc.options[key].status!=\"AVAILABLE\"){\n               selectOptions.push(option);\n            }\n        }\n        else if(showNotOccupied[msg.req.query.line].includes(msg.req.query.form)){\n            if(msg.req.query.form == \"pupation-setup-detail\" && msg.req.params.key ==\"pupationRackID\"){\n               if(doc.options[key].status!=\"OCCUPIED\" && !doc.options[key].pupationChamberId){\n                   selectOptions.push(option);\n                } \n            }\n            else if(doc.options[key].status!=\"OCCUPIED\"){\n               selectOptions.push(option);\n            }\n        }\n        else if(specialCase[msg.req.query.line].includes(msg.req.query.form)){\n            if(msg.req.params.key ==\"pupationRackID\"){\n                if(doc.options[key].status!=\"AVAILABLE\"){\n                   selectOptions.push(option);\n                }\n            }\n            else if(msg.req.params.key == \"pupationChamberId\"){\n                if(doc.options[key].status!=\"OCCUPIED\"){\n                   selectOptions.push(option);\n                }\n            }\n            else{\n                selectOptions.push(option);\n            }\n        }\n        else{\n            selectOptions.push(option);\n        }\n    }\n    else{\n        selectOptions.push(option);\n    }\n\n    \n    \n    return msg;\n}\n\nfunction filterDropdownUpdate(option, doc){\n    let key = option.value\n    if(msg.incomplete){\n        let showOccupied = {\n            \"breeding\":[\"grow-out-harvest\", \"nursery-output\", \"pupation-emergence-complete\"],\n            \"farming\":[\"grow-out-harvest\"]\n        }\n        let showNotOccupied = {\n            \"breeding\":[\"grow-out-setup\", \"nursery-setup\", \"pupation-setup-detail\"],\n            \"farming\":[\"grow-out-setup\"]\n        }\n        let specialCase = {\n            \"breeding\":[\"pupation-emergence-setup-detail\"]\n        }\n        \n        if(doc.options[key].capacity){\n            if(showOccupied[msg.req.query.line].includes(msg.req.query.form)){\n                if(msg.req.query.form == \"pupation-emergence-complete\" && msg.req.params.key ==\"pupationRackID\"){\n                   if(doc.options[key].status!=\"AVAILABLE\" && doc.options[key].pupationChamberId){\n                       selectOptions.push(option);\n                    }\n                    else if(option.value == msg.incompleteEntry[msg.req.params.key]){\n                        selectOptions.push(option);\n                    }\n                }\n                else if(doc.options[key].status!=\"AVAILABLE\"){\n                   selectOptions.push(option);\n                }\n                else if(option.value == msg.incompleteEntry[msg.req.params.key]){\n                    selectOptions.push(option);\n                }\n            }\n            else if(showNotOccupied[msg.req.query.line].includes(msg.req.query.form)){\n                if(msg.req.query.form == \"pupation-setup-detail\" && msg.req.params.key ==\"pupationRackID\"){\n                   if(doc.options[key].status!=\"OCCUPIED\" && !doc.options[key].pupationChamberId){\n                       selectOptions.push(option);\n                    }\n                    else if(option.value == msg.incompleteEntry[msg.req.params.key]){\n                        selectOptions.push(option);\n                    }\n                }\n                else if(doc.options[key].status!=\"OCCUPIED\"){\n                   selectOptions.push(option);\n                }\n                else if(option.value == msg.incompleteEntry[msg.req.params.key]){\n                    selectOptions.push(option);\n                }\n            }\n            else if(specialCase[msg.req.query.line].includes(msg.req.query.form)){\n                if(msg.req.params.key ==\"pupationRackID\"){\n                    if(doc.options[key].status!=\"AVAILABLE\"){\n                       selectOptions.push(option);\n                    }\n                    else if(option.value == msg.incompleteEntry[msg.req.params.key]){\n                        selectOptions.push(option);\n                    }\n                }\n                else if(msg.req.params.key == \"pupationChamberId\"){\n                    if(doc.options[key].status!=\"OCCUPIED\"){\n                       selectOptions.push(option);\n                    }\n                    else if(option.value == msg.incompleteEntry[msg.req.params.key]){\n                        selectOptions.push(option);\n                    }\n                }\n                else{\n                    selectOptions.push(option);\n                }\n            }\n            else{\n                selectOptions.push(option);\n            }\n        }\n        else{\n            selectOptions.push(option);\n        }\n    }\n    else{\n        selectOptions.push(option);\n    }\n    \n    \n\n    \n    \n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1020,
        "y": 220,
        "wires": [
            [
                "b40f9b96.c75638"
            ]
        ]
    },
    {
        "id": "d6c79e04.1fccf",
        "type": "function",
        "z": "7683f6c1.82c818",
        "name": "query",
        "func": "let requiredFields = [\n    \"tenant\",\n    \"templateType\"\n]\nlet key = []\nlet errors = []\n\nfor (let field of requiredFields) {\n    if (msg.payload && msg.payload[field]) {\n        key.push(msg.payload[field])\n    } else {\n        errors.push(\"Required field: \" + field)\n    }\n}\n\nmsg.errors = errors\nmsg.payload = {key}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 140,
        "wires": [
            [
                "e2ac9d09.e6f74"
            ]
        ]
    },
    {
        "id": "b08fe1f5.01a0c",
        "type": "cloudantplus in",
        "z": "7683f6c1.82c818",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "template",
        "index": "by-templateType",
        "x": 630,
        "y": 120,
        "wires": [
            [
                "6f6ce3b5.cfb50c"
            ]
        ]
    },
    {
        "id": "e2ac9d09.e6f74",
        "type": "switch",
        "z": "7683f6c1.82c818",
        "name": "",
        "property": "errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 140,
        "wires": [
            [
                "b08fe1f5.01a0c"
            ],
            [
                "35b1bacf.f02c76"
            ]
        ]
    },
    {
        "id": "35b1bacf.f02c76",
        "type": "function",
        "z": "7683f6c1.82c818",
        "name": "error",
        "func": "msg.payload = {message: msg.errors[0]}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "6f6ce3b5.cfb50c",
        "type": "function",
        "z": "7683f6c1.82c818",
        "name": "map",
        "func": "let docs = msg.payload\nlet payload = []\n\nfor (let doc of docs) {\n    payload.push(doc.value)\n}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "62283aba.636124",
        "type": "inject",
        "z": "7683f6c1.82c818",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"tenant\":\"001\",\"templateType\":\"formHistory\",\"productionLine\":\"farming\",\"workstationForm\":\"attendance\"}",
        "payloadType": "json",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "d6c79e04.1fccf"
            ]
        ]
    },
    {
        "id": "2d4e3fd4.8dd0c",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "template",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/template\",\n  \"_rev\": \"3-62b89f38309b063212cc6b8169b6b213\",\n  \"views\": {\n    \"by-templateType-productionLine-workstationForm\": {\n      \"map\": \"function (doc) {\\n  if (doc.templateType) emit([doc.tenant, doc.templateType, doc.productionLine, doc.workstationForm], doc);\\n}\"\n    },\n    \"by-templateType\": {\n      \"map\": \"function (doc) {\\n  if (doc.templateType) emit([doc.tenant, doc.templateType], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 460,
        "y": 1480,
        "wires": [
            [
                "8cb8a084.b4753"
            ]
        ]
    },
    {
        "id": "443bd69.fdd5128",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "",
        "func": "let deviceId = msg.req.params.id\nlet payload = {ID: deviceId}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 980,
        "wires": [
            [
                "48b6cd88.a46724"
            ]
        ]
    },
    {
        "id": "a7705d4b.84458",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "changeLogInterval",
        "func": "let params = msg.payload.params;\n\nfor(var x = 0; x < params.length; x++) {\n    if(params[x].parameter == \"configInteval\") {\n        //change milliseconds to seconds\n        params[x].value = params[x].value / 1000;\n    }\n}\nmsg.payload.params = {};\nmsg.payload.params = params;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 1080,
        "wires": [
            [
                "9a468c31.b23ce"
            ]
        ]
    },
    {
        "id": "259a6d5.c593f92",
        "type": "function",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "func": "msg.url = env.get('INSECT_DB') + '/farmconfig'\nmsg.method = 'PUT'\nmsg.rejectUnauthorized = false\nmsg.followRedirects = false\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 140,
        "wires": [
            [
                "7b0d9b77.3f1b54"
            ]
        ]
    },
    {
        "id": "7b0d9b77.3f1b54",
        "type": "http request",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 450,
        "y": 140,
        "wires": [
            [
                "ec59e4a1.521008"
            ]
        ]
    },
    {
        "id": "c7cb157d.765db8",
        "type": "inject",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "{\"selector\":{\"docType\":\"deviceStatus\"}}",
        "payloadType": "json",
        "x": 130,
        "y": 140,
        "wires": [
            [
                "259a6d5.c593f92"
            ]
        ]
    },
    {
        "id": "ec59e4a1.521008",
        "type": "debug",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 140,
        "wires": []
    },
    {
        "id": "bec41143.37cf5",
        "type": "comment",
        "z": "efdcd1da.2bbf4",
        "name": "Create database - farmconfig",
        "info": "",
        "x": 200,
        "y": 100,
        "wires": []
    },
    {
        "id": "7bcc1f60.cd3ac",
        "type": "function",
        "z": "d9875fbc.357c8",
        "name": "",
        "func": "msg.topic = \"deviceProvisioned\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "e994f798.5d5868"
            ]
        ]
    },
    {
        "id": "5b419536.38833c",
        "type": "function",
        "z": "d9875fbc.357c8",
        "name": "map",
        "func": "let payload = []\n\nfor (let doc of msg.payload) {\n    payload.push(doc.value)\n}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "65576610.3f19a8",
        "type": "subflow:25cb01d.2a117fe",
        "z": "161e8c5f.9e3554",
        "name": "",
        "env": [],
        "x": 760,
        "y": 120,
        "wires": []
    },
    {
        "id": "3cf8e31b.0d975c",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "egg-collection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "neonates-collected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupae-added-to-mc",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5-dol-collected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 1430,
        "y": 320,
        "wires": [
            [
                "1e0406a3.7a54d9"
            ],
            [
                "61e337d6.f7ddf8"
            ],
            [
                "6ea273c9.285d8c"
            ],
            [
                "3a39a28c.831e6e"
            ]
        ]
    },
    {
        "id": "d6a9b5c1.57dee8",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.startDate = msg.payload.startDate\nmsg.endDate = msg.payload.endDate\n\nlet query ={};\nquery.startkey = msg.payload.endDate;\nquery.endkey = msg.payload.startDate;\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1280,
        "y": 220,
        "wires": [
            [
                "3cf8e31b.0d975c"
            ]
        ]
    },
    {
        "id": "2eab3ab9.9d9216",
        "type": "json",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload.payload",
        "action": "",
        "pretty": false,
        "x": 1810,
        "y": 300,
        "wires": [
            [
                "91d70ed6.cdfb9"
            ]
        ]
    },
    {
        "id": "61e337d6.f7ddf8",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "neonate-collection-dashboard",
        "index": "neonate-collection-dashboard",
        "x": 1620,
        "y": 280,
        "wires": [
            [
                "2eab3ab9.9d9216"
            ]
        ]
    },
    {
        "id": "1e0406a3.7a54d9",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "egg-collection-dashboard",
        "index": "egg-collection-dashboard",
        "x": 1620,
        "y": 240,
        "wires": [
            [
                "2eab3ab9.9d9216"
            ]
        ]
    },
    {
        "id": "3a39a28c.831e6e",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "5DOL-dashboard",
        "index": "5DOL-dashboard",
        "x": 1620,
        "y": 360,
        "wires": [
            [
                "2eab3ab9.9d9216"
            ]
        ]
    },
    {
        "id": "3bd8c4f.fcb753c",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "\n\nlet query = {}\n\nquery['key'] = []\nquery['key'].push(\"001\")\nquery['key'].push(\"eggCollectionTargetSetpoint\")\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2150,
        "y": 240,
        "wires": [
            [
                "9bd5461.690f6b8"
            ]
        ]
    },
    {
        "id": "9bd5461.690f6b8",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "setpoints",
        "index": "setpoints",
        "x": 2310,
        "y": 300,
        "wires": [
            [
                "e1e934e6.3e3f48"
            ]
        ]
    },
    {
        "id": "7cf5e0ee.6d85a",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "\n\nlet query = {}\n\nquery['key'] = []\nquery['key'].push(\"001\")\nquery['key'].push(\"neonatesCollectedTargetSetpoint\")\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2150,
        "y": 280,
        "wires": [
            [
                "9bd5461.690f6b8"
            ]
        ]
    },
    {
        "id": "6feda435.da665c",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "\n\nlet query = {}\n\nquery['key'] = []\nquery['key'].push(\"001\")\nquery['key'].push(\"pupaeAddedToMcTargetSetpoint\")\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2150,
        "y": 320,
        "wires": [
            [
                "9bd5461.690f6b8"
            ]
        ]
    },
    {
        "id": "f9d6fdd5.a38a3",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "\n\nlet query = {}\n\nquery['key'] = []\nquery['key'].push(\"001\")\nquery['key'].push(\"5DolCollectedTargetSetpoint\")\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2150,
        "y": 360,
        "wires": [
            [
                "9bd5461.690f6b8"
            ]
        ]
    },
    {
        "id": "32e672b.27bd68e",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "egg-collection",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "neonates-collected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupae-added-to-mc",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5-dol-collected",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 2010,
        "y": 300,
        "wires": [
            [
                "3bd8c4f.fcb753c"
            ],
            [
                "7cf5e0ee.6d85a"
            ],
            [
                "6feda435.da665c"
            ],
            [
                "f9d6fdd5.a38a3"
            ]
        ]
    },
    {
        "id": "91d70ed6.cdfb9",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.original = msg.payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1800,
        "y": 340,
        "wires": [
            [
                "d2a27b5c.b90a88"
            ]
        ]
    },
    {
        "id": "e1e934e6.3e3f48",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.target = msg.payload[0]\nmsg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2480,
        "y": 300,
        "wires": [
            [
                "50491312.e0fcac"
            ]
        ]
    },
    {
        "id": "5eb99c5d.b082f4",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "isNew",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 970,
        "y": 200,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "ff218422.fc7248",
        "type": "moment",
        "z": "161e8c5f.9e3554",
        "name": "endDate",
        "topic": "endDate",
        "input": "payload.date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "7",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1040,
        "y": 380,
        "wires": [
            [
                "bb0f8a07.bb2868"
            ]
        ]
    },
    {
        "id": "4d53eada.2e0514",
        "type": "moment",
        "z": "161e8c5f.9e3554",
        "name": "startDate",
        "topic": "startDate",
        "input": "payload.date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "86399",
        "adjType": "seconds",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1040,
        "y": 420,
        "wires": [
            [
                "bb0f8a07.bb2868"
            ]
        ]
    },
    {
        "id": "bb0f8a07.bb2868",
        "type": "join",
        "z": "161e8c5f.9e3554",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1190,
        "y": 400,
        "wires": [
            [
                "6714ba1a.e99e84"
            ]
        ]
    },
    {
        "id": "6514992a.cf04f8",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "b1129cbf.61389"
        ],
        "x": 915,
        "y": 400,
        "wires": [
            [
                "ff218422.fc7248",
                "4d53eada.2e0514"
            ]
        ]
    },
    {
        "id": "6714ba1a.e99e84",
        "type": "link out",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "82a43c1a.4dbd3"
        ],
        "x": 1295,
        "y": 400,
        "wires": []
    },
    {
        "id": "b1129cbf.61389",
        "type": "link out",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "6514992a.cf04f8"
        ],
        "x": 1075,
        "y": 220,
        "wires": []
    },
    {
        "id": "82a43c1a.4dbd3",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "6714ba1a.e99e84"
        ],
        "x": 1155,
        "y": 220,
        "wires": [
            [
                "d6a9b5c1.57dee8"
            ]
        ]
    },
    {
        "id": "63fecfb9.f872a",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2910,
        "y": 300,
        "wires": [
            [
                "d1c021de.3fe1e"
            ],
            [
                "1958fe99.445141"
            ]
        ]
    },
    {
        "id": "1958fe99.445141",
        "type": "split",
        "z": "161e8c5f.9e3554",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 3050,
        "y": 340,
        "wires": [
            [
                "6c5621a3.a1643"
            ]
        ]
    },
    {
        "id": "6c5621a3.a1643",
        "type": "moment",
        "z": "161e8c5f.9e3554",
        "name": "",
        "topic": "",
        "input": "payload.key",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD MMM YYYY",
        "locale": "en-US",
        "output": "payload.key",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 3240,
        "y": 340,
        "wires": [
            [
                "5cda0054.4cf1e"
            ]
        ]
    },
    {
        "id": "5cda0054.4cf1e",
        "type": "join",
        "z": "161e8c5f.9e3554",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 3430,
        "y": 340,
        "wires": [
            [
                "22e8d93b.d95006"
            ]
        ]
    },
    {
        "id": "ea67241b.1e15d8",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 4020,
        "y": 320,
        "wires": []
    },
    {
        "id": "f3cb259d.250658",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "fromHttp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3870,
        "y": 340,
        "wires": [
            [
                "ea67241b.1e15d8"
            ],
            []
        ]
    },
    {
        "id": "cda770fc.60564",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 3600,
        "y": 240,
        "wires": []
    },
    {
        "id": "eb6617b0.fae798",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "fromHttp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 3450,
        "y": 260,
        "wires": [
            [
                "cda770fc.60564"
            ],
            []
        ]
    },
    {
        "id": "3c083b49.e9e334",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Get last 7 days by startDate",
        "func": "let startDate = new Date(msg.startDate)\nlet days = []\n\n// node.warn(startDate)\n\nfor (let i = 0; i < 7; i++) {\n    let date = new Date(startDate)\n    \n    date.setDate(date.getDate() - i)\n    \n    days.push(date)\n}\n\n// node.warn(days)\n\nmsg.day = days\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2540,
        "y": 420,
        "wires": [
            [
                "a8c5be78.fa8f3"
            ]
        ]
    },
    {
        "id": "7235284d.17d018",
        "type": "split",
        "z": "161e8c5f.9e3554",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2910,
        "y": 420,
        "wires": [
            [
                "cdeca3b6.9cc81"
            ]
        ]
    },
    {
        "id": "cdeca3b6.9cc81",
        "type": "moment",
        "z": "161e8c5f.9e3554",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD MMM YYYY",
        "locale": "en-US",
        "output": "payload",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 3100,
        "y": 420,
        "wires": [
            [
                "2ba5a316.8c538c"
            ]
        ]
    },
    {
        "id": "2ba5a316.8c538c",
        "type": "join",
        "z": "161e8c5f.9e3554",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 3290,
        "y": 420,
        "wires": [
            [
                "97c2a6ce.894748"
            ]
        ]
    },
    {
        "id": "a8c5be78.fa8f3",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.payload = msg.day\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2760,
        "y": 420,
        "wires": [
            [
                "7235284d.17d018"
            ]
        ]
    },
    {
        "id": "97c2a6ce.894748",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.day = msg.payload.reverse()\nmsg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3440,
        "y": 420,
        "wires": [
            [
                "8e0a6b9b.450f18"
            ]
        ]
    },
    {
        "id": "575bb6e8.7761c8",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "50491312.e0fcac"
        ],
        "x": 2375,
        "y": 420,
        "wires": [
            [
                "3c083b49.e9e334"
            ]
        ]
    },
    {
        "id": "8e0a6b9b.450f18",
        "type": "link out",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "5828e86d.ffde98"
        ],
        "x": 3545,
        "y": 420,
        "wires": []
    },
    {
        "id": "50491312.e0fcac",
        "type": "link out",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "575bb6e8.7761c8"
        ],
        "x": 2595,
        "y": 300,
        "wires": []
    },
    {
        "id": "5828e86d.ffde98",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "8e0a6b9b.450f18"
        ],
        "x": 2795,
        "y": 300,
        "wires": [
            [
                "63fecfb9.f872a"
            ]
        ]
    },
    {
        "id": "870f856.206d678",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "Convert ISO8601 UTC to DD MMM YYYY format",
        "info": "",
        "x": 2600,
        "y": 380,
        "wires": []
    },
    {
        "id": "ae52e5cd.449188",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.payload = flow.get(msg.event+\"Temp\");\nflow.set(msg.event+\"NewData\", false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1120,
        "y": 180,
        "wires": [
            [
                "f7ca79c4.f836d8"
            ]
        ]
    },
    {
        "id": "f7ca79c4.f836d8",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1280,
        "y": 180,
        "wires": []
    },
    {
        "id": "c43af33b.804c9",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "var isNew = flow.get(msg.event+\"NewData\");\nif(isNew){\n    msg.isNew = true;\n}\nelse{\n    msg.isNew = false;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 220,
        "wires": [
            [
                "b1129cbf.61389"
            ]
        ]
    },
    {
        "id": "f2bf0382.ac626",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fromHttp",
                "pt": "msg",
                "to": "true",
                "tot": "bool"
            },
            {
                "t": "set",
                "p": "event",
                "pt": "msg",
                "to": "req.params.eventName",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 220,
        "wires": [
            [
                "c43af33b.804c9"
            ]
        ]
    },
    {
        "id": "2e763f0d.26cec",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "api/:tenant/forms/dashboard-process/:eventName",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 620,
        "y": 160,
        "wires": [
            [
                "f2bf0382.ac626"
            ]
        ]
    },
    {
        "id": "bb396917.af67f8",
        "type": "subflow:9cbcc357.c121b",
        "z": "161e8c5f.9e3554",
        "name": "",
        "env": [],
        "x": 3080,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "8c27b424.c1aef8",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "api/:tenant/forms/dashboard-process",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 580,
        "y": 640,
        "wires": [
            [
                "f928a78.8f63c58"
            ]
        ]
    },
    {
        "id": "2d6b4196.2974ee",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "Process Dashboard V2",
        "info": "",
        "x": 520,
        "y": 560,
        "wires": []
    },
    {
        "id": "eedae29a.379cd",
        "type": "inject",
        "z": "161e8c5f.9e3554",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "{\"date\":\"2021-02-14T16:00:00.000Z\"}",
        "payloadType": "json",
        "x": 850,
        "y": 600,
        "wires": [
            [
                "1a7f2c7e.64de64"
            ]
        ]
    },
    {
        "id": "1a7f2c7e.64de64",
        "type": "moment",
        "z": "161e8c5f.9e3554",
        "name": "endOfDay",
        "topic": "endOfDay",
        "input": "payload.date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "86399",
        "adjType": "seconds",
        "adjDir": "add",
        "format": "",
        "locale": "en-US",
        "output": "payload.endOfDay",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1000,
        "y": 640,
        "wires": [
            [
                "18bbd41e.dc99bc",
                "b620673a.007058",
                "e5da186b.4f5988"
            ]
        ]
    },
    {
        "id": "64428f55.36d63",
        "type": "cloudantplus in",
        "z": "a0cbbe1b.d292",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "master-data",
        "index": "by-timestamp",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "b81b1db4.ba5ff"
            ]
        ]
    },
    {
        "id": "f928a78.8f63c58",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "161e8c5f.9e3554",
        "name": "",
        "x": 840,
        "y": 640,
        "wires": [
            [
                "1a7f2c7e.64de64"
            ]
        ]
    },
    {
        "id": "62fbdc86.846a04",
        "type": "function",
        "z": "a0cbbe1b.d292",
        "name": "query",
        "func": "let startkey = msg.payload.endOfDay // to when?\nlet endkey = msg.payload.date // from when?\nlet descending = true\n\nmsg.topic = 'masterData'\nmsg.payload = {startkey, endkey, descending}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "64428f55.36d63"
            ]
        ]
    },
    {
        "id": "b81b1db4.ba5ff",
        "type": "function",
        "z": "a0cbbe1b.d292",
        "name": "map",
        "func": "let payload = []\n\n// node.warn(msg.payload)\n\nfor (let row of msg.payload) {\n    payload.push(row.value)\n}\n\nmsg.masterData = payload\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e6b6a12d.85dbe",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "let groupLine = 'breeding'\nlet groupForm = 'pupation-setup-detail'\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    if (line !== groupLine) continue\n    if (form !== groupForm) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 420,
        "wires": [
            [
                "5960d5e5.0022cc"
            ]
        ]
    },
    {
        "id": "569d2795.1df8d8",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 420,
        "wires": [
            [
                "e6b6a12d.85dbe"
            ]
        ]
    },
    {
        "id": "f924a7ac.e64f08",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 420,
        "wires": []
    },
    {
        "id": "cb01885.b932e78",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "f924a7ac.e64f08",
            "529b4db1.d8f724",
            "829c2e36.3de5e",
            "3f579617.43f61a",
            "4410d70a.4a0cc8",
            "6066598d.9caa88",
            "488c43cb.a3d93c",
            "1184d744.586879",
            "42b95191.826b2",
            "a5e7c415.517298",
            "9ab7deb9.e5d49",
            "c5f96226.025fe",
            "e84c9d2a.087ae",
            "728088a2.96fc68",
            "5ba8a28b.11d35c"
        ],
        "x": 975,
        "y": 120,
        "wires": [
            [
                "9e8d5961.d5da58"
            ]
        ]
    },
    {
        "id": "ef30f9a7.d44cf8",
        "type": "function",
        "z": "17b1b844.b6db28",
        "name": "query",
        "func": "let selector = {}\n\nselector['docType'] = 'setpoints'\n\nmsg.topic = 'setpoints'\nmsg.payload = {selector}\nmsg.payload.limit = 50\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "1bf4cce1.6d59e3"
            ]
        ]
    },
    {
        "id": "1bf4cce1.6d59e3",
        "type": "cloudantplus in",
        "z": "17b1b844.b6db28",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_query_",
        "design": "master-data",
        "index": "by-timestamp",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "b4087ff.fe5128"
            ]
        ]
    },
    {
        "id": "b4087ff.fe5128",
        "type": "function",
        "z": "17b1b844.b6db28",
        "name": "map",
        "func": "let payload = {}\n\n// node.warn(msg.payload)\n\nfor (let row of msg.payload.docs) {\n    payload[row.type] = row.value\n}\n\nmsg.setpoints = payload\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e5da186b.4f5988",
        "type": "subflow:17b1b844.b6db28",
        "z": "161e8c5f.9e3554",
        "name": "",
        "env": [],
        "x": 1170,
        "y": 600,
        "wires": [
            [
                "726b956d.b6830c"
            ]
        ]
    },
    {
        "id": "18bbd41e.dc99bc",
        "type": "subflow:a0cbbe1b.d292",
        "z": "161e8c5f.9e3554",
        "name": "",
        "env": [],
        "x": 1210,
        "y": 640,
        "wires": [
            [
                "1a965837.d9c018"
            ]
        ]
    },
    {
        "id": "ecfe9083.835c2",
        "type": "join",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "3",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 190,
        "y": 120,
        "wires": [
            [
                "43c89d4b.5e1634"
            ]
        ]
    },
    {
        "id": "43c89d4b.5e1634",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "569d2795.1df8d8",
            "591b01a5.6bff2",
            "c4d99ff8.1ee61",
            "2c1ed0dc.07b7f",
            "165e113e.3714ef",
            "8c69dec4.a5ebe",
            "6b6caae6.5d1e64",
            "59843b99.5270d4",
            "e164ed8.8021e1",
            "bce1d1ff.49667",
            "db20a7d6.13fe68",
            "533e5b3.27d5da4",
            "36988ec1.aac472",
            "f16188d7.1ce7d8",
            "2bc474c0.25b9ec"
        ],
        "x": 295,
        "y": 120,
        "wires": []
    },
    {
        "id": "5960d5e5.0022cc",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet setpoints = msg.setpoints\nlet reduced = 0\n\n// node.warn(rows)\n// node.warn(setpoints)\n\nfor (let row of rows) {\n    let setpoint = setpoints['weightPerTraySetpoint'] || 0\n    let trayCount = +row.trayCount || 0\n    \n    reduced = reduced + (setpoint * trayCount)\n}\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 420,
        "wires": [
            [
                "872b534d.b89c5"
            ]
        ]
    },
    {
        "id": "fc5aa10.35d0b6",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "prepupae setup",
        "info": "",
        "x": 520,
        "y": 380,
        "wires": []
    },
    {
        "id": "872b534d.b89c5",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'prepupae-setup'\nlet type = 'simple'\nlet label = 'Prepupae setup (kg)'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult, unit: 'kg'})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 420,
        "wires": [
            [
                "f924a7ac.e64f08"
            ]
        ]
    },
    {
        "id": "9e8d5961.d5da58",
        "type": "join",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "15",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1090,
        "y": 120,
        "wires": [
            [
                "f31b1d0d.ad545"
            ]
        ]
    },
    {
        "id": "e460b1c0.04cb8",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1920,
        "y": 760,
        "wires": []
    },
    {
        "id": "b620673a.007058",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "startOfMonth",
        "func": "let endOfDay = new Date(msg.payload.endOfDay)\nlet startOfMonth = new Date(endOfDay.getFullYear(), endOfDay.getMonth(), 1)\n\n// node.warn(endOfDay)\n// node.warn(startOfMonth)\n\nmsg.startOfMonth = startOfMonth\nmsg.payload.date = startOfMonth\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 680,
        "wires": [
            [
                "fb28262f.8e3f78"
            ]
        ]
    },
    {
        "id": "6c979d4b.dbdc44",
        "type": "subflow:a0cbbe1b.d292",
        "z": "161e8c5f.9e3554",
        "name": "",
        "env": [],
        "x": 1590,
        "y": 680,
        "wires": [
            [
                "9e03905d.29b2f"
            ]
        ]
    },
    {
        "id": "9e03905d.29b2f",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "masterDataMonth",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1810,
        "y": 680,
        "wires": [
            [
                "3eeee6ac.e7502a"
            ]
        ]
    },
    {
        "id": "b77866d7.9ddaf8",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "462bab29.adbd74",
            "726b956d.b6830c",
            "1a965837.d9c018",
            "3eeee6ac.e7502a"
        ],
        "x": 1475,
        "y": 760,
        "wires": [
            [
                "7c4af1bd.0364a"
            ]
        ]
    },
    {
        "id": "726b956d.b6830c",
        "type": "link out",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "b77866d7.9ddaf8"
        ],
        "x": 1295,
        "y": 600,
        "wires": []
    },
    {
        "id": "1a965837.d9c018",
        "type": "link out",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "b77866d7.9ddaf8"
        ],
        "x": 1375,
        "y": 640,
        "wires": []
    },
    {
        "id": "3eeee6ac.e7502a",
        "type": "link out",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "b77866d7.9ddaf8"
        ],
        "x": 1935,
        "y": 680,
        "wires": []
    },
    {
        "id": "591b01a5.6bff2",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 120,
        "wires": [
            [
                "c538455f.ddae68"
            ]
        ]
    },
    {
        "id": "529b4db1.d8f724",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 120,
        "wires": []
    },
    {
        "id": "c4d99ff8.1ee61",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 320,
        "wires": [
            [
                "72546978.0ad128"
            ]
        ]
    },
    {
        "id": "829c2e36.3de5e",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 320,
        "wires": []
    },
    {
        "id": "6dbfa697.7f84a8",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "placeholder for existing barcharts",
        "info": "",
        "x": 570,
        "y": 280,
        "wires": []
    },
    {
        "id": "72546978.0ad128",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'barchart-existing'\nlet type = 'barchart-existing'\nlet label = ''\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 320,
        "wires": [
            [
                "829c2e36.3de5e"
            ]
        ]
    },
    {
        "id": "7e958b7e.115db4",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "step 2: increase parts count and add markers",
        "info": "",
        "x": 1210,
        "y": 80,
        "wires": []
    },
    {
        "id": "2c1ed0dc.07b7f",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 220,
        "wires": [
            [
                "a4fc564.78434a8"
            ]
        ]
    },
    {
        "id": "1808fa1f.9eb8b6",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'frass'\nlet type = 'simple'\nlet label = 'Frass'\nlet data = []\n\nlet reducedResult;\nif(msg.payload.length > 0) {\n    reducedResult = msg.payload[0].value\n} else {\n    reducedResult = 0;\n}\n\ndata.push({label: 'This month to current day:', value: reducedResult, decimal: 2, unit: 'MT'})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 220,
        "wires": [
            [
                "3f579617.43f61a"
            ]
        ]
    },
    {
        "id": "3f579617.43f61a",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 220,
        "wires": []
    },
    {
        "id": "9a56e17a.78e6c",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "frass MTD",
        "info": "Frass month to day",
        "x": 500,
        "y": 180,
        "wires": []
    },
    {
        "id": "d689a88f.337b48",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "let groupLine = 'breeding'\nlet groupForm = 'grow-out-setup'\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    if (line !== groupLine) continue\n    if (form !== groupForm) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 520,
        "wires": [
            [
                "5d52421e.dc07ec"
            ]
        ]
    },
    {
        "id": "165e113e.3714ef",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 520,
        "wires": [
            [
                "d689a88f.337b48"
            ]
        ]
    },
    {
        "id": "4410d70a.4a0cc8",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 520,
        "wires": []
    },
    {
        "id": "5d52421e.dc07ec",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet reduced = rows.length\n\n// node.warn(rows)\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 520,
        "wires": [
            [
                "31468cf.97f0f74"
            ]
        ]
    },
    {
        "id": "390b9a41.58fc26",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "no-of-breeding-rack-setup",
        "info": "",
        "x": 550,
        "y": 480,
        "wires": []
    },
    {
        "id": "31468cf.97f0f74",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'no-of-breeding-rack-setup'\nlet type = 'simple'\nlet label = 'No. of breeding rack setup'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 520,
        "wires": [
            [
                "4410d70a.4a0cc8"
            ]
        ]
    },
    {
        "id": "2a715c13.c1dce4",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "let groupLine = 'breeding'\nlet groupForm = 'grow-out-harvest'\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    if (line !== groupLine) continue\n    if (form !== groupForm) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 620,
        "wires": [
            [
                "71350d3b.04c3c4"
            ]
        ]
    },
    {
        "id": "8c69dec4.a5ebe",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 620,
        "wires": [
            [
                "2a715c13.c1dce4"
            ]
        ]
    },
    {
        "id": "6066598d.9caa88",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 620,
        "wires": []
    },
    {
        "id": "71350d3b.04c3c4",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet reduced = rows.length\n\n// node.warn(rows)\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 620,
        "wires": [
            [
                "f36e4840.e1dd18"
            ]
        ]
    },
    {
        "id": "a2318967.237938",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "no-of-rack-breeding-harvested",
        "info": "",
        "x": 560,
        "y": 580,
        "wires": []
    },
    {
        "id": "f36e4840.e1dd18",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'no-of-rack-breeding-harvested'\nlet type = 'simple'\nlet label = 'No. of rack breeding harvested'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 620,
        "wires": [
            [
                "6066598d.9caa88"
            ]
        ]
    },
    {
        "id": "84cdc813.130c78",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "let groupLines = [\n    'breeding',\n    'farming'\n]\nlet groupForms = [\n    'grow-out-setup'\n]\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    if (!groupLines.includes(line)) continue\n    if (!groupForms.includes(form)) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1400,
        "wires": [
            [
                "c8d05d09.35f7b"
            ]
        ]
    },
    {
        "id": "e164ed8.8021e1",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 1400,
        "wires": [
            [
                "84cdc813.130c78"
            ]
        ]
    },
    {
        "id": "42b95191.826b2",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 1400,
        "wires": []
    },
    {
        "id": "c8d05d09.35f7b",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet reduced = rows.length\n\n// node.warn(rows)\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 1400,
        "wires": [
            [
                "3005ef44.0f4c7"
            ]
        ]
    },
    {
        "id": "594a53a6.ecea1c",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "no-of-racks-setup",
        "info": "",
        "x": 520,
        "y": 1360,
        "wires": []
    },
    {
        "id": "3005ef44.0f4c7",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'no-of-racks-setup'\nlet type = 'simple'\nlet label = 'No. of racks setup'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 1400,
        "wires": [
            [
                "42b95191.826b2"
            ]
        ]
    },
    {
        "id": "137def3c.0ef6d1",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "let groupLines = [\n    'breeding'\n]\nlet groupForms = [\n    'nursery-harvest'\n]\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    if (!groupLines.includes(line)) continue\n    if (!groupForms.includes(form)) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1500,
        "wires": [
            [
                "4245f8b7.457de8"
            ]
        ]
    },
    {
        "id": "bce1d1ff.49667",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 1500,
        "wires": [
            [
                "137def3c.0ef6d1"
            ]
        ]
    },
    {
        "id": "a5e7c415.517298",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 1500,
        "wires": []
    },
    {
        "id": "4245f8b7.457de8",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet reduced = 0\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let field1 = +row.totalCountEstimate || 0\n    let field2 = +row.breedingGrowOut5DolSetupSetpointCount || 0\n    \n    reduced = reduced + ((field1 - field2) / 1000000)\n    // field1 = field1 / 1000000\n    \n    // reduced = reduced + (field1 - field2)\n}\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 1500,
        "wires": [
            [
                "d19d00aa.d91f1"
            ]
        ]
    },
    {
        "id": "c68de442.98c858",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "baby-larvae-for-farming",
        "info": "",
        "x": 540,
        "y": 1460,
        "wires": []
    },
    {
        "id": "d19d00aa.d91f1",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'baby-larvae-for-farming'\nlet type = 'simple'\nlet label = 'Baby larvae for farming (millions)'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult, unit: 'M', decimal: 2})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 1500,
        "wires": [
            [
                "a5e7c415.517298"
            ]
        ]
    },
    {
        "id": "1d575c59.f5a304",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "let groupLines = [\n    'farming'\n]\nlet groupForms = [\n    'grow-out-setup'\n]\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    if (!groupLines.includes(line)) continue\n    if (!groupForms.includes(form)) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1600,
        "wires": [
            [
                "9e978bbe.630ce8"
            ]
        ]
    },
    {
        "id": "db20a7d6.13fe68",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 1600,
        "wires": [
            [
                "1d575c59.f5a304"
            ]
        ]
    },
    {
        "id": "9ab7deb9.e5d49",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 1600,
        "wires": []
    },
    {
        "id": "9e978bbe.630ce8",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet reduced = rows.length\n\n// node.warn(rows)\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 1600,
        "wires": [
            [
                "55625fdd.510d"
            ]
        ]
    },
    {
        "id": "25a6be43.e82c22",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "no-of-farming-rack-setup",
        "info": "",
        "x": 550,
        "y": 1560,
        "wires": []
    },
    {
        "id": "55625fdd.510d",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'no-of-farming-rack-setup'\nlet type = 'simple'\nlet label = 'No. of farming rack setup'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 1600,
        "wires": [
            [
                "9ab7deb9.e5d49"
            ]
        ]
    },
    {
        "id": "d22ec0bc.5bba5",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "let groupLines = [\n    'farming'\n]\nlet groupForms = [\n    'grow-out-harvest'\n]\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    if (!groupLines.includes(line)) continue\n    if (!groupForms.includes(form)) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1700,
        "wires": [
            [
                "5cdc5338.d08d9c"
            ]
        ]
    },
    {
        "id": "533e5b3.27d5da4",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 1700,
        "wires": [
            [
                "d22ec0bc.5bba5"
            ]
        ]
    },
    {
        "id": "c5f96226.025fe",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 1700,
        "wires": []
    },
    {
        "id": "5cdc5338.d08d9c",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet reduced = rows.length\n\n// node.warn(rows)\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 1700,
        "wires": [
            [
                "c7b487bf.66ede8"
            ]
        ]
    },
    {
        "id": "44ff89bc.70e8b8",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "no-of-farming-racks-harvested",
        "info": "",
        "x": 560,
        "y": 1660,
        "wires": []
    },
    {
        "id": "c7b487bf.66ede8",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'no-of-farming-racks-harvested'\nlet type = 'simple'\nlet label = 'No. of farming racks harvested'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 1700,
        "wires": [
            [
                "c5f96226.025fe"
            ]
        ]
    },
    {
        "id": "2c00eaa.d51c616",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "step 1: add template here",
        "info": "",
        "x": 550,
        "y": 40,
        "wires": []
    },
    {
        "id": "3bdb1517.03a4da",
        "type": "inject",
        "z": "dc8c4370.78e2",
        "name": "design names",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "[\"notification\", \"users\"]",
        "payloadType": "json",
        "x": 140,
        "y": 1760,
        "wires": [
            [
                "fe5227aa.8b5a68"
            ]
        ],
        "info": "# Design names\n\nAdd an array of design document names\nto check. Add these names to the split node\nand provide a template containing the code"
    },
    {
        "id": "a7b0651d.9bb938",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for PUT",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/insectusers/_design/\"+msg.topic;\nmsg.method=\"PUT\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 2080,
        "wires": [
            [
                "635ec4ef.319a7c"
            ]
        ]
    },
    {
        "id": "8ca68157.afedf",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "notification",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n\"_id\": \"_design/notification\",\n  \"_rev\": \"298-7be02f1bb093576241898f1a1b68c319\",\n  \"views\": {\n    \"notification\": {\n      \"map\": \"function (doc) {\\n  if (doc.doc_type == \\\"notification\\\" && doc.timestamp) \\n  emit([doc.accessId,doc.level,doc.timestamp], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n }",
        "output": "json",
        "x": 410,
        "y": 1760,
        "wires": [
            [
                "e00eb2de.90e28"
            ]
        ]
    },
    {
        "id": "fe5227aa.8b5a68",
        "type": "split",
        "z": "dc8c4370.78e2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 170,
        "y": 1800,
        "wires": [
            [
                "bf0bf433.e1dde8"
            ]
        ]
    },
    {
        "id": "e35ba923.7b1188",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 750,
        "y": 1920,
        "wires": [
            [
                "443158b3.2d7fa8"
            ]
        ]
    },
    {
        "id": "443158b3.2d7fa8",
        "type": "debug",
        "z": "dc8c4370.78e2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 770,
        "y": 1960,
        "wires": []
    },
    {
        "id": "96e6aa63.8129f8",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for GET",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/insectusers/_design/\"+msg.topic;\nmsg.method=\"GET\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 1960,
        "wires": [
            [
                "303d79c6.a58736"
            ]
        ]
    },
    {
        "id": "303d79c6.a58736",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 150,
        "y": 2000,
        "wires": [
            [
                "cfa8b85c.591108"
            ]
        ]
    },
    {
        "id": "bf0bf433.e1dde8",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 1840,
        "wires": [
            [
                "38e83329.988d1c"
            ]
        ]
    },
    {
        "id": "e00eb2de.90e28",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "func": "if (msg.existingDoc || msg.existingDoc._rev) {\n    msg.hasRev = true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 1760,
        "wires": [
            [
                "1b226be.6ceda94"
            ]
        ]
    },
    {
        "id": "1b226be.6ceda94",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "property": "hasRev",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 760,
        "y": 1800,
        "wires": [
            [
                "dbbc0a2b.722bd8"
            ],
            [
                "3e5385bb.2d69da"
            ]
        ]
    },
    {
        "id": "cfa8b85c.591108",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "existingDoc",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 120,
        "y": 2040,
        "wires": [
            [
                "a7b0651d.9bb938"
            ]
        ]
    },
    {
        "id": "dbbc0a2b.722bd8",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload._rev",
                "pt": "msg",
                "to": "existingDoc._rev",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1840,
        "wires": [
            [
                "e35ba923.7b1188"
            ]
        ]
    },
    {
        "id": "635ec4ef.319a7c",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "design names",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "notification",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "users",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 140,
        "y": 2120,
        "wires": [
            [
                "8ca68157.afedf"
            ],
            [
                "d5cfe3ff.4645a"
            ]
        ]
    },
    {
        "id": "8038ee72.34c0c",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "insectuser db",
        "info": "",
        "x": 110,
        "y": 1720,
        "wires": []
    },
    {
        "id": "3e5385bb.2d69da",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload._rev",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1880,
        "wires": [
            [
                "e35ba923.7b1188"
            ]
        ]
    },
    {
        "id": "92d35a59.de09f8",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "template here",
        "info": "",
        "x": 410,
        "y": 1720,
        "wires": []
    },
    {
        "id": "38e83329.988d1c",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "should delay?",
        "property": "ENVIRONMENT",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "production",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 140,
        "y": 1880,
        "wires": [
            [
                "eacbf681.f6c9c8"
            ],
            [
                "96e6aa63.8129f8"
            ]
        ]
    },
    {
        "id": "eacbf681.f6c9c8",
        "type": "delay",
        "z": "dc8c4370.78e2",
        "name": "",
        "pauseType": "rate",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 150,
        "y": 1920,
        "wires": [
            [
                "96e6aa63.8129f8"
            ]
        ]
    },
    {
        "id": "7dd8d571.e7387c",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "var label = msg.day;\nvar data = []\n\nvar target = msg.target? msg.target.value.value:flow.get('target')[msg.event];\n\n\n//initialize 0 got all days\nfor(let day of label){\n    data.push(0);\n}\n\n//assign value\nfor(let payload of msg.payload){\n    if(label.includes(payload.key)){\n        data[label.indexOf(payload.key)] = Math.round((data[label.indexOf(payload.key)] + parseFloat(payload.value)) * 100)/100;\n    }\n    \n}\n\n//check negative value\nlet max = data[0];\nlet min = data[0];\nfor(let data1 of data){\n    if(data1 > max){\n        max = data1;\n    }\n    if(data1 < min){\n        min = data1;\n    }\n    if(data1 < 0){\n        data1 = 0;\n    }\n}\n\nlet trendUp = true;\nlet ofTarget = Math.round(100*data[6]/target)\nif(ofTarget < target){\n    trendUp = false;\n}\n\nlet payload = {\n    trendUp: trendUp,\n    value: data[6],\n    ofTarget,\n    setpoint: target,\n    unit: 'g',\n    data: data,\n    labels: label,\n    min:min,\n    max:max\n}\nmsg.socketIOEvent = msg.event\nmsg.payload = payload\nflow.set(msg.event+\"Temp\", payload)\nflow.set(msg.event+\"NewData\", false);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3720,
        "y": 380,
        "wires": [
            [
                "f3cb259d.250658"
            ]
        ]
    },
    {
        "id": "65028a82.928c24",
        "type": "link out",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "links": [
            "829714fd.8a8878",
            "8cef4815.581c08"
        ],
        "x": 455,
        "y": 260,
        "wires": []
    },
    {
        "id": "829714fd.8a8878",
        "type": "link in",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "links": [
            "65028a82.928c24",
            "f65de9d0.09c4c8",
            "75321f05.4dd66"
        ],
        "x": 995,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "ad110762.d22588",
        "type": "cloudantplus in",
        "z": "4db7e9fc.8750b8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "master-data",
        "index": "by-id",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "aa3f29fd.f6e098"
            ]
        ]
    },
    {
        "id": "8abb7c02.ab8c",
        "type": "link in",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "links": [
            "a5d0fb66.606f28"
        ],
        "x": 435,
        "y": 460,
        "wires": [
            [
                "ea215965.603928"
            ]
        ]
    },
    {
        "id": "a5d0fb66.606f28",
        "type": "link out",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "links": [
            "8abb7c02.ab8c"
        ],
        "x": 455,
        "y": 220,
        "wires": []
    },
    {
        "id": "61322f85.f0951",
        "type": "function",
        "z": "4db7e9fc.8750b8",
        "name": "query",
        "func": "let requiredFields = [\n    \"id\"\n]\nlet key = []\nlet errors = []\n\nfor (let field of requiredFields) {\n    if (msg.payload && msg.payload[field]) {\n        key.push(msg.payload[field])\n    } else {\n        errors.push(\"Required field: \" + field)\n    }\n}\n\nmsg.errors = errors\nmsg.payload = {key}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 100,
        "wires": [
            [
                "8f1deb24.1c96b8"
            ]
        ]
    },
    {
        "id": "8f1deb24.1c96b8",
        "type": "switch",
        "z": "4db7e9fc.8750b8",
        "name": "",
        "property": "errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 100,
        "wires": [
            [
                "ad110762.d22588"
            ],
            [
                "315b13bf.b7e53c"
            ]
        ]
    },
    {
        "id": "315b13bf.b7e53c",
        "type": "function",
        "z": "4db7e9fc.8750b8",
        "name": "error",
        "func": "msg.payload = {message: msg.errors[0]}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "aa3f29fd.f6e098",
        "type": "function",
        "z": "4db7e9fc.8750b8",
        "name": "map",
        "func": "let payload = msg.payload[0].value\n\nmsg.masterData = payload\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ea215965.603928",
        "type": "subflow:4db7e9fc.8750b8",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "env": [],
        "x": 600,
        "y": 460,
        "wires": [
            [
                "5fad8a88.505964"
            ],
            [
                "cbbc1ce4.40dd"
            ]
        ]
    },
    {
        "id": "cbbc1ce4.40dd",
        "type": "http response",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 800,
        "y": 480,
        "wires": []
    },
    {
        "id": "75321f05.4dd66",
        "type": "link out",
        "z": "7e9f6a8.8c1a694",
        "name": "",
        "links": [
            "829714fd.8a8878"
        ],
        "x": 1015,
        "y": 440,
        "wires": []
    },
    {
        "id": "69d66f34.c7dce",
        "type": "link out",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "links": [
            "847d7d83.8da0d"
        ],
        "x": 435,
        "y": 420,
        "wires": []
    },
    {
        "id": "2c223f6b.19533",
        "type": "switch",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "property": "update",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 330,
        "y": 520,
        "wires": [
            [
                "e4ecf06f.5fc83"
            ],
            [
                "9ced1139.7b9bf"
            ]
        ]
    },
    {
        "id": "847d7d83.8da0d",
        "type": "link in",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "links": [
            "69d66f34.c7dce"
        ],
        "x": 215,
        "y": 520,
        "wires": [
            [
                "2c223f6b.19533"
            ]
        ]
    },
    {
        "id": "9ced1139.7b9bf",
        "type": "http response",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 480,
        "y": 540,
        "wires": []
    },
    {
        "id": "e4ecf06f.5fc83",
        "type": "function",
        "z": "5a50dcc5.c18a24",
        "name": "map",
        "func": "let selectedBatchId = msg.masterData.batchId\nlet payload = []\n\npayload.push({value: selectedBatchId, label: selectedBatchId})\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 500,
        "wires": [
            [
                "8bda75d7.dca168"
            ]
        ]
    },
    {
        "id": "8bda75d7.dca168",
        "type": "http response",
        "z": "5a50dcc5.c18a24",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 640,
        "y": 500,
        "wires": []
    },
    {
        "id": "eaa7583d.96f018",
        "type": "delay",
        "z": "2811332b.6f138c",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 200,
        "y": 480,
        "wires": [
            [
                "b4306bf1.72b188"
            ]
        ]
    },
    {
        "id": "4b44b618.de94e8",
        "type": "subflow:4db7e9fc.8750b8",
        "z": "2811332b.6f138c",
        "name": "",
        "env": [],
        "x": 560,
        "y": 480,
        "wires": [
            [
                "76a4b93c.5646e8"
            ],
            []
        ]
    },
    {
        "id": "b4306bf1.72b188",
        "type": "function",
        "z": "2811332b.6f138c",
        "name": "structure",
        "func": "let payload = {}\n\npayload['id'] = msg.masterDataId.id\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 480,
        "wires": [
            [
                "4b44b618.de94e8"
            ]
        ]
    },
    {
        "id": "fb68bcb8.7b855",
        "type": "link in",
        "z": "2811332b.6f138c",
        "name": "",
        "links": [
            "d169974c.d5e6f8"
        ],
        "x": 75,
        "y": 480,
        "wires": [
            [
                "eaa7583d.96f018"
            ]
        ]
    },
    {
        "id": "699455e9.c7bcdc",
        "type": "comment",
        "z": "2811332b.6f138c",
        "name": "Modify master data device name",
        "info": "",
        "x": 270,
        "y": 440,
        "wires": []
    },
    {
        "id": "d169974c.d5e6f8",
        "type": "link out",
        "z": "2811332b.6f138c",
        "name": "",
        "links": [
            "fb68bcb8.7b855"
        ],
        "x": 495,
        "y": 260,
        "wires": []
    },
    {
        "id": "76a4b93c.5646e8",
        "type": "delay",
        "z": "2811332b.6f138c",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 760,
        "y": 460,
        "wires": [
            [
                "38f4a497.16d4fc"
            ]
        ]
    },
    {
        "id": "38f4a497.16d4fc",
        "type": "function",
        "z": "2811332b.6f138c",
        "name": "structure",
        "func": "let payload = msg.payload\n\npayload['sensorDeviceName'] = msg.deviceConfig.deviceName\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 920,
        "y": 460,
        "wires": [
            [
                "80a2d254.dd24c"
            ]
        ]
    },
    {
        "id": "80a2d254.dd24c",
        "type": "cloudantplus out",
        "z": "2811332b.6f138c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1090,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "8ba04ae.e86d9b8",
        "type": "switch",
        "z": "37c11998.4fe1a6",
        "name": "",
        "property": "errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 220,
        "wires": [
            [
                "68781316.38bf9c"
            ],
            [
                "880317cb.4917e8"
            ]
        ]
    },
    {
        "id": "880317cb.4917e8",
        "type": "function",
        "z": "37c11998.4fe1a6",
        "name": "structure",
        "func": "msg.payload = null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 240,
        "wires": [
            [
                "5548ed7a.ceac84"
            ]
        ]
    },
    {
        "id": "5548ed7a.ceac84",
        "type": "http response",
        "z": "37c11998.4fe1a6",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 760,
        "y": 240,
        "wires": []
    },
    {
        "id": "5f6b9c93.398484",
        "type": "http in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "url": "/api/:tenant/forms/dynamic-fields",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 2780,
        "wires": [
            [
                "96daf9f6.2fd838"
            ]
        ]
    },
    {
        "id": "8b7b33c8.1c99f",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Dynamic Fields",
        "info": "",
        "x": 160,
        "y": 2740,
        "wires": []
    },
    {
        "id": "96daf9f6.2fd838",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "proceed",
        "func": "const prodLine = msg.payload.prodLine\nconst stationForm = msg.payload.stationForm\nconst templateType = msg.payload.templateType\nconst fieldKey = msg.payload.fieldKey\nconst formValue = msg.payload.formValue\nlet flowFields = ['sensorDeviceId']\nlet proceed = false\n\nfor (let flowField of flowFields) {\n    if (fieldKey === flowField && formValue[fieldKey]) {\n        proceed = true\n        break\n    }\n}\n\nmsg.proceed = proceed\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 2780,
        "wires": [
            [
                "24e54bfa.38f5c4"
            ]
        ]
    },
    {
        "id": "24e54bfa.38f5c4",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "proceed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 2780,
        "wires": [
            [
                "7282bc94.93d744"
            ],
            [
                "d19eb34b.3ee41"
            ]
        ]
    },
    {
        "id": "d19eb34b.3ee41",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload = null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 2800,
        "wires": [
            [
                "f44f7619.424a58"
            ]
        ]
    },
    {
        "id": "f44f7619.424a58",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 940,
        "y": 2800,
        "wires": []
    },
    {
        "id": "bca02601.ec4ce8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const prodLine = msg.payload.prodLine\nconst stationForm = msg.payload.stationForm\nconst templateType = msg.payload.templateType\nconst fieldKey = msg.payload.fieldKey\nconst formValue = msg.payload.formValue\nlet deviceId = formValue[fieldKey]\n\nmsg.payload = deviceId\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 360,
        "y": 2900,
        "wires": [
            [
                "6c75a92c.152ca8"
            ]
        ]
    },
    {
        "id": "7282bc94.93d744",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "links": [
            "2e11e51d.4f7aaa",
            "a743db01.18db58"
        ],
        "x": 735,
        "y": 2760,
        "wires": []
    },
    {
        "id": "2e11e51d.4f7aaa",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "links": [
            "7282bc94.93d744"
        ],
        "x": 95,
        "y": 2900,
        "wires": [
            [
                "89f6d780.139d48"
            ]
        ]
    },
    {
        "id": "89f6d780.139d48",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.fieldKey",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sensorDeviceId",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 2900,
        "wires": [
            [
                "bca02601.ec4ce8"
            ]
        ]
    },
    {
        "id": "1862c386.d9713c",
        "type": "cloudantplus in",
        "z": "d108970c.af9a58",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByDeviceId",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "65128071.827ab"
            ]
        ]
    },
    {
        "id": "65128071.827ab",
        "type": "function",
        "z": "d108970c.af9a58",
        "name": "map",
        "func": "let payload = []\n\nfor (let doc of msg.payload) {\n    payload.push(doc.value)\n}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 80,
        "wires": [
            [
                "e87130fe.bc64b"
            ]
        ]
    },
    {
        "id": "6d81dc0c.708544",
        "type": "function",
        "z": "d108970c.af9a58",
        "name": "",
        "func": "let deviceId = msg.payload\nlet payload = {key: deviceId}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "1862c386.d9713c"
            ]
        ]
    },
    {
        "id": "e87130fe.bc64b",
        "type": "function",
        "z": "d108970c.af9a58",
        "name": "",
        "func": "let deviceConfig = msg.payload[0]\nmsg.payload = deviceConfig\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "91e8def.6df322",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "let deviceConfig = msg.payload\nlet relays = deviceConfig.relays || []\nlet fields = []\n\nfor (let relay of relays) {\n    let field = {\n        \"key\": \"\",\n        \"type\": \"input-fuse\",\n        \"templateOptions\": {\n            \"label\": \"\",\n            \"required\": true\n        }\n    }\n    field.key = relay\n    field.templateOptions.label = relay + \" alias\"\n    fields.push(field)\n}\n\nmsg.payload = fields\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 2900,
        "wires": [
            [
                "a583b335.19d83"
            ]
        ]
    },
    {
        "id": "a583b335.19d83",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 920,
        "y": 2900,
        "wires": []
    },
    {
        "id": "6c75a92c.152ca8",
        "type": "subflow:d108970c.af9a58",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 560,
        "y": 2900,
        "wires": [
            [
                "91e8def.6df322"
            ]
        ]
    },
    {
        "id": "e9f84208.9ba48",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "to master data",
        "links": [
            "cdd67900.55ea48"
        ],
        "x": 3095,
        "y": 2180,
        "wires": []
    },
    {
        "id": "cdd67900.55ea48",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "nursery output",
        "links": [
            "e9f84208.9ba48"
        ],
        "x": 2355,
        "y": 2260,
        "wires": [
            [
                "e14ba564.2c96a8"
            ]
        ]
    },
    {
        "id": "b0018544.4c1978",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1360,
        "y": 140,
        "wires": []
    },
    {
        "id": "12c93e7b.c6b0f2",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1360,
        "y": 100,
        "wires": []
    },
    {
        "id": "1411faa4.c069d5",
        "type": "link in",
        "z": "627c617e.0ab8",
        "name": "",
        "links": [
            "4c2e1730.7ff428"
        ],
        "x": 335,
        "y": 320,
        "wires": [
            [
                "dc72ad44.678b2"
            ]
        ]
    },
    {
        "id": "fdcf309a.c01ad",
        "type": "link in",
        "z": "627c617e.0ab8",
        "name": "",
        "links": [
            "8e0c093c.f23518"
        ],
        "x": 335,
        "y": 240,
        "wires": [
            [
                "5e82fb01.fa1154"
            ]
        ]
    },
    {
        "id": "4c2e1730.7ff428",
        "type": "link out",
        "z": "627c617e.0ab8",
        "name": "",
        "links": [
            "1411faa4.c069d5"
        ],
        "x": 1095,
        "y": 160,
        "wires": []
    },
    {
        "id": "dc72ad44.678b2",
        "type": "subflow:d46e607a.c58f4",
        "z": "627c617e.0ab8",
        "name": "",
        "env": [],
        "x": 510,
        "y": 320,
        "wires": [
            [
                "9c75d382.3b6a4"
            ],
            [
                "8e0c093c.f23518"
            ]
        ]
    },
    {
        "id": "623edff6.32b26",
        "type": "function",
        "z": "33ad23d.1fc62dc",
        "name": "query",
        "func": "let tenant = global.get('tenant') || '001'\nlet line = msg.payload.line\nlet form = msg.payload.form\nlet key = [tenant, line, form]\nlet payload = {key}\n\nmsg.topic = \"incompleteForm\"\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "636ca1b3.81cd8"
            ]
        ]
    },
    {
        "id": "636ca1b3.81cd8",
        "type": "cloudantplus in",
        "z": "33ad23d.1fc62dc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "by-line-form",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "dceecca5.42f2f"
            ]
        ]
    },
    {
        "id": "dceecca5.42f2f",
        "type": "function",
        "z": "33ad23d.1fc62dc",
        "name": "map",
        "func": "let payload = []\n\nfor (let doc of msg.payload) {\n    payload.push(doc.value)\n}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "9c75d382.3b6a4",
        "type": "http response",
        "z": "627c617e.0ab8",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 720,
        "y": 300,
        "wires": []
    },
    {
        "id": "8e0c093c.f23518",
        "type": "link out",
        "z": "627c617e.0ab8",
        "name": "",
        "links": [
            "fdcf309a.c01ad"
        ],
        "x": 675,
        "y": 340,
        "wires": []
    },
    {
        "id": "83623cc.10d7bc",
        "type": "change",
        "z": "627c617e.0ab8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 320,
        "y": 60,
        "wires": [
            [
                "d6e36303.91015"
            ]
        ]
    },
    {
        "id": "e00f751.4a05c88",
        "type": "subflow:f4445896.32f858",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 4360,
        "y": 520,
        "wires": [
            [
                "9588a5d2.412418"
            ]
        ]
    },
    {
        "id": "e14ba564.2c96a8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.errors = []\n\nconst rackObj = msg.rack.assets;\nconst rackId = msg.original.breedingNurserySetupRackId;\nconst setupDateId = msg.original.setupDateId;\n\n// node.warn(rackObj)\n// node.warn(rackId)\n// node.warn(batchId)\n\nlet selectedRack = rackObj[rackId]\nlet trayCount = selectedRack.setupDateIds[setupDateId]\nlet enteredTrayCount = msg.original.nurseryTraysOutCount\n\n// node.warn(selectedRack)\n// node.warn(trayCount)\n\nif (enteredTrayCount > trayCount) {\n    let error = \"Trays entered exceed the available trays of \"\n    error = error + trayCount\n    msg.errors.push(error)\n}\n\nlet finalTrayCount = +trayCount - +enteredTrayCount\n\n// Updates the rack batchIdList\nif (finalTrayCount < 1) {\n    delete selectedRack.setupDateIds[setupDateId]\n} else {\n    selectedRack.setupDateIds[setupDateId] = finalTrayCount\n}\n\n// Updates the rac status\nif (Object.keys(selectedRack.setupDateIds).length < 1) {\n    selectedRack.status = \"AVAILABLE\"\n} else {\n    selectedRack.status = \"PARTIALLY_OCCUPIED\"\n}\n\n// Updates the rack occupiedCapacity\nselectedRack.occupied = +selectedRack.occupied - +enteredTrayCount\n\n// node.warn(selectedRack)\nmsg.payload[0].value.assets[rackId] = selectedRack;\n\n\nmsg.payload = msg.payload[0].value\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2500,
        "y": 2260,
        "wires": [
            [
                "6cfa36ed.7af578"
            ]
        ]
    },
    {
        "id": "5b39f57a.1827ec",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "backup",
        "info": "",
        "x": 2400,
        "y": 2320,
        "wires": []
    },
    {
        "id": "85bed620.201f48",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "api/:tenant/dashboard/monitor-pupation/rack",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 4020,
        "wires": [
            [
                "5b9b1979.fd56b8"
            ]
        ]
    },
    {
        "id": "3e9a7033.f73ed",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "// let query = {\n//     \"selector\": {\n//         \"docType\":\"select-option\",\n//         \"type\": msg.req.params.key,\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\nlet query = {}\nlet body = msg.payload\nlet type = msg.payload.type;\n\nquery[\"key\"] = [msg.req.params.tenant,body.rackId]\nmsg.payload = query;\nmsg.type = type;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 4120,
        "wires": [
            [
                "1eed562f.e103ea"
            ]
        ]
    },
    {
        "id": "92a15a53.78a268",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "pupation-setup",
        "x": 510,
        "y": 4080,
        "wires": [
            [
                "a1b44c1b.7cac3"
            ]
        ]
    },
    {
        "id": "a1b44c1b.7cac3",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "lte",
                "v": "0",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 750,
        "y": 4140,
        "wires": [
            [
                "8818ed76.93ac4"
            ],
            [
                "76229cbf.a62fa4"
            ],
            [
                "bd55e487.227ea8"
            ]
        ]
    },
    {
        "id": "8818ed76.93ac4",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "let rack = msg.payload[0].value;\nif(msg.type === \"prePupaeChamber\"){\n    msg.payload = rack.pupationSetupDetailId\n} \nelse if(msg.type === \"pupationChamber\") {\n    msg.payload = rack.pupationEmergenceSetupId;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 4120,
        "wires": [
            [
                "421a8913.990ee8"
            ]
        ]
    },
    {
        "id": "76229cbf.a62fa4",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.payload = {\n    \"message\": \"Multiple Racks found\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 4200,
        "wires": [
            [
                "66c4b533.b0896c"
            ]
        ]
    },
    {
        "id": "bd55e487.227ea8",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.payload = {\n    \"message\": \"Rack not found\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 4200,
        "wires": [
            [
                "66f9de84.e8e7c"
            ]
        ]
    },
    {
        "id": "421a8913.990ee8",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 1040,
        "y": 4180,
        "wires": [
            [
                "dbacebb7.475318"
            ]
        ]
    },
    {
        "id": "66c4b533.b0896c",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 680,
        "y": 4240,
        "wires": []
    },
    {
        "id": "66f9de84.e8e7c",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 440,
        "y": 4240,
        "wires": []
    },
    {
        "id": "dbacebb7.475318",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1030,
        "y": 4240,
        "wires": [
            [
                "5dd52dc1.a2b7a4"
            ],
            [
                "728ff1ea.7a597"
            ]
        ]
    },
    {
        "id": "5dd52dc1.a2b7a4",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Delete unused field",
        "func": "delete msg.payload._rev\ndelete msg.payload._id\ndelete msg.payload.tenant\ndelete msg.payload.workstationForm\ndelete msg.payload.productionLine\ndelete msg.payload.dataRecord\ndelete msg.payload.daily_index\ndelete msg.payload.user_id\ndelete msg.payload.form_id\ndelete msg.payload.form_version\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1250,
        "y": 4220,
        "wires": [
            [
                "b53ea135.1396b"
            ]
        ]
    },
    {
        "id": "728ff1ea.7a597",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "msg.payload = {\n    \"message\": \"Rack not found\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 4280,
        "wires": [
            [
                "5209b32c.1ef64c"
            ]
        ]
    },
    {
        "id": "b53ea135.1396b",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1230,
        "y": 4280,
        "wires": []
    },
    {
        "id": "5209b32c.1ef64c",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1020,
        "y": 4320,
        "wires": []
    },
    {
        "id": "5b9b1979.fd56b8",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "prePupaeChamber",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupationChamber",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 190,
        "y": 4100,
        "wires": [
            [
                "83605eaf.3b40b"
            ],
            [
                "3e9a7033.f73ed"
            ]
        ]
    },
    {
        "id": "1eed562f.e103ea",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "pupation-emergence-setup",
        "x": 510,
        "y": 4120,
        "wires": [
            [
                "a1b44c1b.7cac3"
            ]
        ]
    },
    {
        "id": "f2baa68c.eaf988",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const preChamber = msg.preChamber;\nconst chamber = msg.chamber;\nconst chamberId = msg.original.pupationChamberId;\nconst rackId = msg.original.pupationRackID;\nconst rack = msg.rack;\nvar exceedCapacity = false;\nvar rackOccupied = false;\nvar chamberOccupied = false;\nvar availableNumber;\nvar notValid = false;\nvar inAnotherPupationChamber = false;\nvar inPupationChamber;\nif(chamber.options[chamberId].status == \"OCCUPIED\"){\n    chamberOccupied = true;\n}\nelse{\n    chamberOccupied = false;\n    \n    // if(!chamber.options[chamberId].batchIdList){\n    //     chamber.options[chamberId].batchIdList =[]\n    // }\n    // for(let batchId of msg.original.batchId){\n    //     if(!chamber.options[chamberId].batchIdList.includes(batchId)){\n    //         chamber.options[chamberId].batchIdList.push(batchId)\n    //     }\n    // }\n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList =[]\n    }\n    if(!chamber.options[chamberId].rackIdList.includes(rackId)){\n            chamber.options[chamberId].rackIdList.push(rackId)\n            chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n    }\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n}\n\n\n//from prePupaeChamber\nif(rack.options[rackId].prePupaeChamberId){\n    rack.options[rackId].pupationChamberId = chamberId;\n    var preChamberId = rack.options[rackId].prePupaeChamberId\n    console.log(preChamberId)\n    preChamber.options[preChamberId].occupiedCapacity = preChamber.options[preChamberId].occupiedCapacity -1;\n    preChamber.options[preChamberId].rackIdList.splice(preChamber.options[preChamberId].rackIdList.indexOf(rackId));\n    if(preChamber.options[preChamberId].occupiedCapacity == 0){\n        preChamber.options[preChamberId].status = \"AVAILABLE\"\n    }\n    else{\n        preChamber.options[preChamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n    \n        if(!rack.options[rackId].batchIdList){\n            node.warn(\"ASDA\");\n           rack.options[rackId].batchIdList =[]\n        }\n        \n        // Sprint 14 - No more batchId field, but kept it for reference\n        if (msg.original.batchId) for(let batchId of msg.original.batchId){\n            if(!rack.options[rackId].batchIdList.includes(batchId)){\n                rack.options[rackId].batchIdList.push(batchId)\n            }\n        }\n    \n    rack.options[rackId].occupiedCapacity = parseFloat(msg.original.trayCount);\n    if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n        exceedCapacity = true\n        availableNumber = rack.options[rackId].capacity;\n    }\n    else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n        rack.options[rackId].status = \"OCCUPIED\"\n    }\n    else{\n        rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n    }    \n    delete rack.options[rackId].prePupaeChamberId;\n}\nelse if(rack.options[rackId].pupationChamberId){\n    //add tray to this rack\n    if(rack.options[rackId].status == \"OCCUPIED\"){\n        rackOccupied = true;\n    }\n    else{\n        rackOccupied = false;\n        if(rack.options[rackId].pupationChamberId != chamberId){\n            inAnotherPupationChamber = true;\n            inPupationChamber = rack.options[rackId].pupationChamberId\n        }\n        if(!rack.options[rackId].batchIdList){\n           rack.options[rackId].batchIdList =[]\n        }\n        \n        // Sprint 14 - No more batchId field, but kept it for reference\n        if (msg.original.batchId) for(let batchId of msg.original.batchId){\n            if(!rack.options[rackId].batchIdList.includes(batchId)){\n                rack.options[rackId].batchIdList.push(batchId)\n            }\n        }\n        rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n        if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n            exceedCapacity = true\n            availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n        }\n        else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n            rack.options[rackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n    \n    }\n    \n}\nelse{\n    //not from prepupae chamber and not in pupation chamber\n    notValid = true;\n}\n\n\n\n    \n    // rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n    // if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n    //     exceedCapacity = true\n    //     availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n    // }\n    // else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n    //     rack.options[rackId].status = \"OCCUPIED\"\n    // }\n    // else{\n    //     rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n    // }\n    \n\n\n\nmsg.error = false;\nif(notValid){\n    msg.error = true;\n    msg.errMsg = \"The rack is not from PrePupae Chamber and not in Pupation Chamber.\"\n}\nelse if(inAnotherPupationChamber){\n    msg.error = true;\n    msg.errMsg = \"The rack is in another Pupation Chamber. Do you mean: \" + inPupationChamber;\n}\nelse if(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(rackOccupied && chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack and Chamber are occupied\";\n}\nelse if(rackOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack is occupied\";\n}\nelse if(chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Chamber is occupied\";\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.preChamber = preChamber;\nmsg.payload = [\"rack\", \"chamber\", \"preChamber\"]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4020,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "9cb62c1c.14bcd",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "backup",
        "info": "",
        "x": 4030,
        "y": 1540,
        "wires": []
    },
    {
        "id": "9e7f36d7.aea3e8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "reset racks",
        "func": "let rackIds = msg.original.pupationRackID\nlet doc = msg.rack\nlet racks = doc.options\nlet doc1 = msg.chamber\nlet chambers = doc1.options\nlet chamberList = []\nmsg.error = false;\nfor (let id of rackIds) {\n    if (racks[id]) {\n        let rack = racks[id]\n        if(rack.pupationChamberId){\n            rack.occupiedCapacity = 0\n            rack.status = \"AVAILABLE\"\n            let chamberObj = {}\n            chamberObj.id = rack.pupationChamberId;\n            chamberObj.rackId = id;\n            chamberList.push(chamberObj);\n            delete rack.batchIdList\n            delete rack.pupationChamberId\n            \n            racks[id] = rack\n        }\n        else{\n            msg.error = true;\n            msg.errMsg = id+ \": Only Racks in Pupation Chamber can be harvested.\" \n        }\n        \n    }\n}\n\nfor (let chamberId of chamberList) {\n    if (chambers[chamberId.id]) {\n        let chamber = chambers[chamberId.id]\n        \n        chamber.occupiedCapacity = chamber.occupiedCapacity - 1;\n        if(chamber.occupiedCapacity == 0){\n            chamber.status = \"AVAILABLE\"\n        }\n        else{\n            chamber.status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n        let rackIdList = chamber.rackIdList;\n        rackIdList.splice(rackIdList.indexOf(chamberId.rackId), 1);\n        \n        chamber.rackIdList = rackIdList;\n        chambers[chamberId.id] = chamber;\n    }\n}\n\n\ndoc1.options = chambers\ndoc.options = racks\nmsg.racks = doc;\nmsg.chambers = doc1;\nmsg.payload = [\"racks\", \"chambers\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3250,
        "y": 2440,
        "wires": [
            []
        ]
    },
    {
        "id": "d391ceb3.aeb07",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "backup",
        "info": "",
        "x": 3240,
        "y": 2420,
        "wires": []
    },
    {
        "id": "658aafa.996d15",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "oriPayload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3220,
        "y": 740,
        "wires": [
            [
                "635d97a0.09d148"
            ]
        ]
    },
    {
        "id": "635d97a0.09d148",
        "type": "subflow:f4445896.32f858",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 3200,
        "y": 680,
        "wires": [
            [
                "bdeeb7b2.1981d8"
            ]
        ]
    },
    {
        "id": "bdeeb7b2.1981d8",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "oriPayload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3440,
        "y": 680,
        "wires": [
            [
                "14523fe4.c5daa"
            ]
        ]
    },
    {
        "id": "8edd4912.5b9eb8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const chamberId = msg.original.growthChamberId;\nconst rack = msg.rack;\nconst rackId = msg.original.breedingGrowOutSetupRackId;\nconst chamber = msg.chamber;\nvar rackOccupied;\nvar chamberOccupied;\n\nif(chamber.options[chamberId].status == \"OCCUPIED\"){\n    chamberOccupied = true;\n}\nelse{\n    chamberOccupied = false;\n    \n    // if(!chamber.options[chamberId].batchIdList){\n    //     chamber.options[chamberId].batchIdList ={}\n    // }\n    // chamber.options[chamberId].batchIdList = msg.original.batchId\n    \n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList ={}\n    }\n    chamber.options[chamberId].rackIdList[rackId] = \n    {\n        label: rack.options[rackId].label,\n        batchIdList: msg.original.batchId\n    }\n    \n    chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n}\n\n\nif(rack.options[rackId].status== \"OCCUPIED\"){\n    rackOccupied = true;\n}\nelse{\n    rackOccupied = false;\n    rack.options[rackId].status = \"OCCUPIED\"\n    if(!rack.options[rackId].batchIdList){\n        rack.options[rackId].batchIdList ={}\n    }\n    rack.options[rackId].batchIdList = msg.original.batchId\n    if(!rack.options[rackId].growthChamberId){\n        rack.options[rackId].growthChamberId = {}\n    }\n    rack.options[rackId].growthChamberId = msg.original.growthChamberId\n}\nmsg.occupied = false;\nif(rackOccupied && chamberOccupied){\n    msg.errorMsg = \"Rack and Chamber are occupied\";\n    msg.occupied = true;\n}\nelse if(rackOccupied){\n    msg.errorMsg = \"Rack is occupied\";\n    msg.occupied = true;\n}\nelse if(chamberOccupied){\n    msg.errorMsg = \"Chamber is occupied\";\n    msg.occupied = true;\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3637.199951171875,
        "y": 683,
        "wires": [
            []
        ]
    },
    {
        "id": "3bcea1e.cdcb15e",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "backup",
        "info": "",
        "x": 3640,
        "y": 660,
        "wires": []
    },
    {
        "id": "27a1bbc3.b49204",
        "type": "http in",
        "z": "1f50769f.97b799",
        "name": "",
        "url": "/api/export",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 240,
        "y": 460,
        "wires": [
            [
                "87aa43.9eb475c"
            ]
        ]
    },
    {
        "id": "9f08dfc0.cac6c",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Duplicate implementation as above Flow",
        "info": "",
        "x": 260,
        "y": 500,
        "wires": []
    },
    {
        "id": "5a9481c5.20dee",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Implementation of CSV download",
        "info": "",
        "x": 290,
        "y": 420,
        "wires": []
    },
    {
        "id": "1039c5ac.3bb91a",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "prepare for conversion",
        "func": "let fields = msg.original.fields\nlet docs = msg.payload.docs\n\nif (fields) {\n    msg.columns = fields;\n} else {\n    if (docs && docs.length > 0) {\n        \n        // to remove metadata fields that been marked at blueprint\n        // if (!msg.original.includeMetadata) {\n        //     docs.forEach((doc) => {\n        //         msg.metadataKeyList.forEach((key) => {\n        //             delete doc[key];\n        //         })\n        //     })\n        // }\n\n        msg.columns = Object.keys(docs[0]).join(\", \");\n    }\n}\n\n\nmsg.payload = msg.payload.docs;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 600,
        "wires": [
            [
                "502d9c3.d424864"
            ]
        ]
    },
    {
        "id": "5e2a5629.b043c8",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "original.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "GSheet",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "csv",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 410,
        "y": 1060,
        "wires": [
            [
                "aa7eeadf.7a79b8"
            ],
            [
                "e02e5bd4.a812a8"
            ]
        ]
    },
    {
        "id": "d190173f.35b728",
        "type": "fastcsv",
        "z": "1f50769f.97b799",
        "name": "fastcsvMan",
        "headers": true,
        "headerstr": "",
        "ignoreEmpty": true,
        "discardUnmappedColumns": true,
        "strictColumnHandling": false,
        "delimiter": ",",
        "quote": "\"",
        "escape": "\"",
        "comment": "#",
        "ltrim": false,
        "rtrim": false,
        "rowDelimiter": "\\n",
        "includeEndRowDelimiter": false,
        "quoteHeaders": false,
        "quoteColumns": false,
        "x": 860,
        "y": 840,
        "wires": [
            [
                "ebb88dfc.6f27a"
            ]
        ]
    },
    {
        "id": "502d9c3.d424864",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 680,
        "wires": [
            [
                "f8c3bd90.85e2f"
            ],
            [
                "a8afdb25.6df348"
            ]
        ]
    },
    {
        "id": "f8c3bd90.85e2f",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "eggTrapList",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 660,
        "wires": [
            [
                "94848ed2.f6a42"
            ],
            [
                "43ed5090.4561"
            ]
        ]
    },
    {
        "id": "94848ed2.f6a42",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "flatten eggTrapList",
        "func": "result =[]\nfor(let payload of msg.payload){\n    let content = payload;\n    let index = 1;\n    if(payload.eggTrapList) {\n        for(let eggTrap of payload.eggTrapList){\n        let data = {\n            ...payload,\n            eggTrapListIndex: index,\n            ... eggTrap\n            \n        }\n        delete data.eggTrapList\n        result.push(data)\n        index = index+1\n        }\n    }\n    \n}\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 600,
        "wires": [
            [
                "43ed5090.4561"
            ]
        ]
    },
    {
        "id": "2a41c28c.e34dce",
        "type": "jwt sign",
        "z": "1f50769f.97b799",
        "name": "",
        "alg": "RS256",
        "exp": "600000",
        "jwkurl": "",
        "jwkkid": "rsa_priv_key",
        "secret": "",
        "key": "defaults/rsa_priv_key",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 2560,
        "y": 540,
        "wires": [
            [
                "638c8871.ebb028"
            ]
        ]
    },
    {
        "id": "15c6b556.f1860b",
        "type": "moment",
        "z": "1f50769f.97b799",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "2",
        "adjType": "milliseconds",
        "adjDir": "add",
        "format": "x",
        "locale": "en-US",
        "output": "iat",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 2360,
        "y": 480,
        "wires": [
            [
                "89d1cb6a.aa9f28"
            ]
        ]
    },
    {
        "id": "290d582d.eb5308",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "\nmsg.payload = {\n    \"iss\":\"insectos@insectos.iam.gserviceaccount.com\",\n    \"scope\":\"https://www.googleapis.com/auth/drive\",\n    \"aud\":\"https://oauth2.googleapis.com/token\",\n    \"iat\":Math.round(parseInt(msg.iat)/1000)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2360,
        "y": 540,
        "wires": [
            [
                "2a41c28c.e34dce"
            ]
        ]
    },
    {
        "id": "89d1cb6a.aa9f28",
        "type": "moment",
        "z": "1f50769f.97b799",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "10",
        "adjType": "minutes",
        "adjDir": "add",
        "format": "x",
        "locale": "en-US",
        "output": "exp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 2600,
        "y": 480,
        "wires": [
            [
                "290d582d.eb5308"
            ]
        ]
    },
    {
        "id": "d2faf0e4.796ce",
        "type": "http request",
        "z": "1f50769f.97b799",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://oauth2.googleapis.com/token?grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion={{{assertion}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2570,
        "y": 600,
        "wires": [
            [
                "2bab1136.8eb6ee"
            ]
        ]
    },
    {
        "id": "638c8871.ebb028",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.req = {}\nmsg.req.query ={\n    grant_type:\"urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer\",\n    assertion:msg.payload\n}\nmsg.assertion = msg.payload\ndelete msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2360,
        "y": 600,
        "wires": [
            [
                "d2faf0e4.796ce"
            ]
        ]
    },
    {
        "id": "2bab1136.8eb6ee",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "//var folderId = '11m0j9jCoVSpWzVFtU1DkPIrOyQEZG-Up';\nmsg.access_token = msg.payload.access_token\n\nlet filename = \"untitled\"\nif(msg.original.filename){\n    filename = msg.original.filename;\n}\nvar folderId = '1Oix4Of_YB6S4pAQl0_FtYtQrddjOCdWW';\n// var fileMetadata = {\n//   'name': filename,\n//  //\"parents\":[folderId],\n//   mimeType: 'application/vnd.google-apps.spreadsheet',\n// };\n// var media = {\n//   mimeType: 'application/vnd.google-apps.spreadsheet',\n// };\n// msg.payload = {\n//     resource: fileMetadata,\n//   media: media,\n//   fields: 'id',\n//   supportsAllDrives: true\n// }, function (err, file) {\n//   if (err) {\n//     // Handle error\n//     console.error(err);\n//   } else {\n//     console.log('File Id: ', file.id);\n//   }\n// }\nmsg.payload = {\n    mimeType: 'application/vnd.google-apps.spreadsheet',\n    name: filename,\n    parents:[folderId]\n}\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2860,
        "y": 480,
        "wires": [
            [
                "e31e6756.9095a8"
            ]
        ]
    },
    {
        "id": "e31e6756.9095a8",
        "type": "http request",
        "z": "1f50769f.97b799",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://www.googleapis.com/drive/v3/files?access_token={{{access_token}}}&supportsAllDrives=true",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3030,
        "y": 480,
        "wires": [
            [
                "6fa24520.24da9c"
            ]
        ]
    },
    {
        "id": "9843583.58caca8",
        "type": "jwt sign",
        "z": "1f50769f.97b799",
        "name": "",
        "alg": "RS256",
        "exp": "600000",
        "jwkurl": "",
        "jwkkid": "rsa_priv_key",
        "secret": "",
        "key": "defaults/rsa_priv_key",
        "signvar": "payload",
        "storetoken": "payload",
        "x": 2560,
        "y": 800,
        "wires": [
            [
                "b931b7b6.98c9e8"
            ]
        ]
    },
    {
        "id": "d7413a7b.defa88",
        "type": "moment",
        "z": "1f50769f.97b799",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "2",
        "adjType": "milliseconds",
        "adjDir": "add",
        "format": "x",
        "locale": "en-US",
        "output": "iat",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 2360,
        "y": 740,
        "wires": [
            [
                "ab28ed6b.05737"
            ]
        ]
    },
    {
        "id": "c9319630.20bb68",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "\nmsg.payload = {\n    \"iss\":\"insectos@insectos.iam.gserviceaccount.com\",\n    \"scope\":\"https://www.googleapis.com/auth/spreadsheets\",\n    \"aud\":\"https://oauth2.googleapis.com/token\",\n    \"iat\":Math.round(parseInt(msg.iat)/1000)\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2380,
        "y": 800,
        "wires": [
            [
                "9843583.58caca8"
            ]
        ]
    },
    {
        "id": "ab28ed6b.05737",
        "type": "moment",
        "z": "1f50769f.97b799",
        "name": "",
        "topic": "",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "10",
        "adjType": "minutes",
        "adjDir": "add",
        "format": "x",
        "locale": "en-US",
        "output": "exp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 2580,
        "y": 740,
        "wires": [
            [
                "c9319630.20bb68"
            ]
        ]
    },
    {
        "id": "b931b7b6.98c9e8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.assertion = msg.payload\ndelete msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2380,
        "y": 860,
        "wires": [
            [
                "db828d89.56b75"
            ]
        ]
    },
    {
        "id": "a62a2968.c0caf8",
        "type": "change",
        "z": "1f50769f.97b799",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "fileId",
                "pt": "msg",
                "to": "payload.id",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3050,
        "y": 520,
        "wires": [
            [
                "d7413a7b.defa88"
            ]
        ]
    },
    {
        "id": "db828d89.56b75",
        "type": "http request",
        "z": "1f50769f.97b799",
        "name": "",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://oauth2.googleapis.com/token?grant_type=urn%3Aietf%3Aparams%3Aoauth%3Agrant-type%3Ajwt-bearer&assertion={{{assertion}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2570,
        "y": 860,
        "wires": [
            [
                "e9786d29.b875e"
            ]
        ]
    },
    {
        "id": "e9786d29.b875e",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var csv = msg.csv; \n\nvar rows = csv.split(\"\\n\");\n\n\nvar csvRow = rows.map(function (row) {\n        if(row!=\"\"){\n            return row.split(\",\");\n        }\n        else{\n            return;\n        }\n    });\n// let payload = {\n\n//       \"values\": csvRow\n// }\nmsg.payload = {\n    \"range\":\"A1\",\n    \"values\": csvRow\n}\n\nmsg.range = \"A1\";\nmsg.spreadsheetId = msg.fileId\nmsg.rows = csvRow;\n// let key = env.get(\"GAUTH\")\n// msg.creds = { value: key, type: \"gauth\" }\n// msg.creds = key\n// msg.credentials = { category: 'config', credentials: { creds: JSON.parse(key) } }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2880,
        "y": 740,
        "wires": [
            [
                "9106678.cc2eb98"
            ]
        ]
    },
    {
        "id": "9106678.cc2eb98",
        "type": "http request",
        "z": "1f50769f.97b799",
        "name": "",
        "method": "PUT",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "https://sheets.googleapis.com/v4/spreadsheets/{{{spreadsheetId}}}/values/{{{range}}}?access_token={{{access_token}}}&valueInputOption=RAW",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 3070,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "6fa24520.24da9c",
        "type": "json",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 2850,
        "y": 520,
        "wires": [
            [
                "a62a2968.c0caf8"
            ]
        ]
    },
    {
        "id": "85ddf3c7.59e9e",
        "type": "change",
        "z": "1f50769f.97b799",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "csv",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3210,
        "y": 440,
        "wires": [
            [
                "15c6b556.f1860b"
            ]
        ]
    },
    {
        "id": "3ab91d4.a4f88e2",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Get Access token for Drive API",
        "info": "",
        "x": 2490,
        "y": 440,
        "wires": []
    },
    {
        "id": "21ade950.95e2d6",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Create file in Drive",
        "info": "",
        "x": 2900,
        "y": 440,
        "wires": []
    },
    {
        "id": "afea6b1c.281aa8",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Get Access Token for Sheet API",
        "info": "",
        "x": 2450,
        "y": 700,
        "wires": []
    },
    {
        "id": "69e495cf.dcbc8c",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Update Sheets",
        "info": "",
        "x": 2900,
        "y": 700,
        "wires": []
    },
    {
        "id": "44d62f06.6c8f6",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var csv = msg.csv; \nvar rows = csv.split(\"\\n\");\n\nvar csvRow = rows.map(function (row) {\n        if(row!=\"\"){\n            var result = row.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n            for(let i=0; i<result.length; i++){\n                var element = result[i];\n                if(element[0]===\"\\\"\" && element[element.length -1] === \"\\\"\"){\n                    element = element.replace(/^\"|\"$/g, '');\n                    result[i] = element;\n                }\n            }\n            return result;\n        }\n        else{\n            return;\n        }\n    });\nlet payload = {\n\n      \"values\": csvRow\n}\nmsg.payload = {\n    spreadsheetId: msg.payload.id,\n    \"range\":\"A1\",\n    valueInputOption:\"RAW\",\n    resource: payload\n}\nmsg.rows = rows;\n// let key = env.get(\"GAUTH\")\n// msg.creds = { value: key, type: \"gauth\" }\n// msg.creds = key\n// msg.credentials = { category: 'config', credentials: { creds: JSON.parse(key) } }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 1200,
        "wires": [
            [
                "813adb58.8fb358"
            ]
        ]
    },
    {
        "id": "813adb58.8fb358",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "ManValueUpdate",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.values.update",
        "x": 790,
        "y": 1240,
        "wires": [
            [
                "90b8211.6879de"
            ]
        ]
    },
    {
        "id": "aa7eeadf.7a79b8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "//var folderId = '11m0j9jCoVSpWzVFtU1DkPIrOyQEZG-Up';\n// var folderId = '1Oix4Of_YB6S4pAQl0_FtYtQrddjOCdWW'; use this \n// testing 16ce9_tdAoIALvfq8G0truRqFy3npEK6-  \nmsg.csv = msg.payload;\nlet filename = \"untitled\"\nif(msg.original.filename){\n    filename = msg.original.filename;\n}\nvar folderId = '1Oix4Of_YB6S4pAQl0_FtYtQrddjOCdWW';\nvar fileMetadata = {\n  'name': filename,\n \"parents\":[folderId],\n  mimeType: 'application/vnd.google-apps.spreadsheet',\n};\nvar media = {\n  mimeType: 'application/vnd.google-apps.spreadsheet',\n};\nmsg.payload = {\n    resource: fileMetadata,\n  media: media,\n  fields: 'id',\n  supportsAllDrives: true\n}, function (err, file) {\n  if (err) {\n    // Handle error\n    console.error(err);\n  } else {\n    console.log('File Id: ', file.id);\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 1060,
        "wires": [
            [
                "34dae4d6.c6fcbc"
            ]
        ]
    },
    {
        "id": "d15df1f4.624e",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "Check export All",
        "property": "payload.exportAll",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 760,
        "y": 460,
        "wires": [
            [
                "4ce9d948.fd9a58"
            ],
            [
                "fa8adc9f.f4c29"
            ]
        ]
    },
    {
        "id": "2ee1d2ac.57066e",
        "type": "change",
        "z": "1f50769f.97b799",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "array",
                "pt": "msg",
                "to": "payload.availableForms",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "selector",
                "pt": "msg",
                "to": "payload.selectors",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 460,
        "wires": [
            [
                "ff82a012.64fea"
            ]
        ]
    },
    {
        "id": "3b74258a.557dda",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let selector =`workstationForm=${msg.array[msg.key].form}, productionLine=${msg.array[msg.key].line}`;\n\nmsg.original.selectors = selector + msg.selector;\nmsg.payload = msg.original;\nmsg.sheetName = msg.array[msg.key].form + msg.array[msg.key].line;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1340,
        "y": 480,
        "wires": [
            [
                "fa8adc9f.f4c29"
            ]
        ]
    },
    {
        "id": "ebb88dfc.6f27a",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "original.exportAll",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 690,
        "y": 940,
        "wires": [
            [
                "c400b1e.f8c185"
            ],
            [
                "5e2a5629.b043c8"
            ]
        ]
    },
    {
        "id": "bfc192de.5ae45",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let filename = \"untitled\"\n// var folderId = '1Oix4Of_YB6S4pAQl0_FtYtQrddjOCdWW'; use this\n\nif(msg.original.filename){\n    filename = msg.original.filename;\n}\nvar folderId = '1Oix4Of_YB6S4pAQl0_FtYtQrddjOCdWW';\nvar fileMetadata = {\n  'name': filename,\n \"parents\":[folderId],\n  mimeType: 'application/vnd.google-apps.spreadsheet',\n};\nvar media = {\n  mimeType: 'application/vnd.google-apps.spreadsheet',\n};\nmsg.payload = {\n    resource: fileMetadata,\n  media: media,\n  fields: 'id',\n  supportsAllDrives: true\n}, function (err, file) {\n  if (err) {\n    // Handle error\n    console.error(err);\n  } else {\n    console.log('File Id: ', file.id);\n  }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1060,
        "y": 1040,
        "wires": [
            [
                "b2c3a9cd.c27648"
            ]
        ]
    },
    {
        "id": "b2c3a9cd.c27648",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "ManCreateAll",
        "google": "140efa24.f87256",
        "api": "drive:v3",
        "operation": "files.create",
        "x": 1220,
        "y": 1040,
        "wires": [
            [
                "b94767d2.b42558"
            ]
        ]
    },
    {
        "id": "9300293c.7128d8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let spreadsheetId = flow.get(\"spreadsheetId\");\nlet sheetName = msg.sheetName\nvar csv = msg.csv; \nvar rows = csv.split(\"\\n\");\n\n\nvar csvRow = rows.map(function (row) {\n        if(row!=\"\"){\n            var result = row.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n            for(let i=0; i<result.length; i++){\n                var element = result[i];\n                if(element[0]===\"\\\"\" && element[element.length -1] === \"\\\"\"){\n                    element = element.replace(/^\"|\"$/g, '');\n                    result[i] = element;\n                }\n            }\n            return result;\n        }\n        else{\n            return;\n        }\n    });\nlet payload = {\n\n      \"values\": csvRow\n}\nmsg.payload = {\n    spreadsheetId: spreadsheetId,\n    \"range\":sheetName+\"!A1\",\n    valueInputOption:\"RAW\",\n    resource: payload\n}\nmsg.rows = rows;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1780,
        "y": 1040,
        "wires": [
            [
                "18525074.0b2e3"
            ]
        ]
    },
    {
        "id": "18525074.0b2e3",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "ManValueUpdate1",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.values.update",
        "x": 1950,
        "y": 1040,
        "wires": [
            [
                "ff82a012.64fea"
            ]
        ]
    },
    {
        "id": "9b109a20.ea3ce8",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "spreadsheetId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1090,
        "y": 980,
        "wires": [
            [
                "10af656e.35f65b"
            ],
            [
                "bfc192de.5ae45"
            ]
        ]
    },
    {
        "id": "c400b1e.f8c185",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.csv = msg.payload;\nmsg.spreadsheetId = flow.get(\"spreadsheetId\") || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 980,
        "wires": [
            [
                "9b109a20.ea3ce8"
            ]
        ]
    },
    {
        "id": "d6ab9884.1fd888",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let spreadsheetId = flow.get(\"spreadsheetId\");\nlet sheetName = msg.sheetName;\nvar csv = msg.csv; \nvar rows = csv.split(\"\\n\");\n\n\nvar csvRow = rows.map(function (row) {\n        if(row!=\"\"){\n            var result = row.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n            for(let i=0; i<result.length; i++){\n                var element = result[i];\n                if(element[0]===\"\\\"\" && element[element.length -1] === \"\\\"\"){\n                    element = element.replace(/^\"|\"$/g, '');\n                    result[i] = element;\n                }\n            }\n            return result;\n        }\n        else{\n            return;\n        }\n    });\nlet payload = {\n\n      \"values\": csvRow\n}\nmsg.payload = {\n    spreadsheetId: spreadsheetId,\n    \"range\":sheetName+\"!A1\",\n    valueInputOption:\"RAW\",\n    resource: payload\n}\nmsg.rows = rows;\n// let key = env.get(\"GAUTH\")\n// msg.creds = { value: key, type: \"gauth\" }\n// msg.creds = key\n// msg.credentials = { category: 'config', credentials: { creds: JSON.parse(key) } }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1660,
        "y": 980,
        "wires": [
            [
                "e6d2f878.8b3a48"
            ]
        ]
    },
    {
        "id": "e6d2f878.8b3a48",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "ManValueUpdate2",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.values.update",
        "x": 1850,
        "y": 980,
        "wires": [
            [
                "ff82a012.64fea"
            ]
        ]
    },
    {
        "id": "40de9ce2.0ee994",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "ManBatchUpdate2",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.batchUpdate",
        "x": 1470,
        "y": 980,
        "wires": [
            [
                "d6ab9884.1fd888"
            ]
        ]
    },
    {
        "id": "10af656e.35f65b",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var spreadsheetId = flow.get(\"spreadsheetId\");\nvar sheetIndex = flow.get(\"sheetIndex\") + 1;\nflow.set(\"sheetIndex\", sheetIndex);\nlet payload = {\n    \"properties\": {\n        \"sheetId\":sheetIndex,\n        \"title\": msg.sheetName,\n        \"index\": sheetIndex,\n        \"sheetType\": \"GRID\"\n    }\n}\nmsg.payload = {\n    \"spreadsheetId\": spreadsheetId,\n    \"resource\":{\n        \"requests\":[{\"addSheet\": payload}],\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1270,
        "y": 980,
        "wires": [
            [
                "40de9ce2.0ee994"
            ]
        ]
    },
    {
        "id": "b94767d2.b42558",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "flow.set(\"spreadsheetId\", msg.payload.id);\nvar spreadsheetId = msg.payload.id;\nvar sheetIndex = 1;\nflow.set(\"sheetIndex\", 1);\nlet payload = {\n    \"properties\": {\n        \"sheetId\":sheetIndex,\n        \"title\": msg.sheetName,\n        \"index\": sheetIndex,\n        \"sheetType\": \"GRID\"\n    }\n}\nmsg.payload = {\n    \"spreadsheetId\": spreadsheetId,\n    \"resource\":{\n        \"requests\":[{\"addSheet\": payload}],\n    }\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1380,
        "y": 1040,
        "wires": [
            [
                "c3a474c.97e8088"
            ]
        ]
    },
    {
        "id": "c3a474c.97e8088",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "ManBatchUpdate1",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.batchUpdate",
        "x": 1570,
        "y": 1040,
        "wires": [
            [
                "9300293c.7128d8"
            ]
        ]
    },
    {
        "id": "fa8adc9f.f4c29",
        "type": "subflow:d35f6c55.31d32",
        "z": "1f50769f.97b799",
        "name": "",
        "env": [],
        "x": 580,
        "y": 540,
        "wires": [
            [
                "1039c5ac.3bb91a"
            ]
        ]
    },
    {
        "id": "ff82a012.64fea",
        "type": "array-loop",
        "z": "1f50769f.97b799",
        "name": "",
        "key": "key",
        "keyType": "msg",
        "reset": true,
        "resetValue": "value-null",
        "array": "array",
        "arrayType": "msg",
        "x": 1160,
        "y": 460,
        "wires": [
            [
                "1dc271d7.7fb37e"
            ],
            [
                "3b74258a.557dda"
            ]
        ]
    },
    {
        "id": "d83f81ba.97bf9",
        "type": "change",
        "z": "1f50769f.97b799",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "sheetIndex",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "spreadsheetId",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1920,
        "y": 420,
        "wires": [
            [
                "12cef95f.059e77"
            ]
        ]
    },
    {
        "id": "1020470b.56af09",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Export CSV",
        "info": "",
        "x": 230,
        "y": 1080,
        "wires": []
    },
    {
        "id": "ce05e058.ff048",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Export Google Sheet",
        "info": "",
        "x": 930,
        "y": 1160,
        "wires": []
    },
    {
        "id": "d7efca13.bc14f8",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Export All",
        "info": "",
        "x": 940,
        "y": 940,
        "wires": []
    },
    {
        "id": "21637a71.f15676",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Loop to export all",
        "info": "",
        "x": 1140,
        "y": 420,
        "wires": []
    },
    {
        "id": "1dc271d7.7fb37e",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let spreadsheetId = flow.get(\"spreadsheetId\");\n\n\nmsg.payload = {\n    \"spreadsheetId\": spreadsheetId,\n    \"resource\":{\n        \"requests\":[{\"deleteSheet\": {\"sheetId\": 0}}],\n    }\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1340,
        "y": 420,
        "wires": [
            [
                "d705c1d7.72a28"
            ]
        ]
    },
    {
        "id": "d705c1d7.72a28",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "ManValueUpdate3",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.batchUpdate",
        "x": 1510,
        "y": 420,
        "wires": [
            [
                "ed21564f.dfe4d8"
            ]
        ]
    },
    {
        "id": "ed21564f.dfe4d8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.payload = {spreadsheetId: flow.get(\"spreadsheetId\")};\nvar notification = flow.get('notification');\n\nif(notification != null){\n    object = {\n        accessId: msg.token.access_id,\n        message: \"Done\"\n    }\n    notification.push(object);\n} else {\n    notification = [];\n     object = {\n        accessId: msg.token.access_id,\n        message: \"Done\"\n    }\n    notification.push(object);\n}\nflow.set('notification', notification);\n\nlet data = {};\ndata.resData = msg.payload.spreadsheetId;\ndata.accessId = msg.token.access_id;\ndata.level = msg.token.level;\ndata.fileName = msg.original.filename;\ndata.doc_type = \"notification\";\ndata.type = msg.original.type;\ndata.timestamp = new Date().toISOString()\n\nmsg.payload = {};\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1700,
        "y": 420,
        "wires": [
            [
                "d83f81ba.97bf9",
                "8f672a07.73d9e8"
            ]
        ]
    },
    {
        "id": "a8afdb25.6df348",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.doc = msg.payload;\nlet query = {}\nquery[\"key\"]=[msg.tenant, msg.productionLine, msg.workstationForm, \"export\"]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 740,
        "wires": [
            [
                "86a8a786.c56758"
            ]
        ]
    },
    {
        "id": "86a8a786.c56758",
        "type": "cloudantplus in",
        "z": "1f50769f.97b799",
        "name": "ManualMus",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "mustache",
        "index": "mustache",
        "x": 470,
        "y": 780,
        "wires": [
            [
                "74d006b6.3a0a58"
            ]
        ]
    },
    {
        "id": "74d006b6.3a0a58",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 470,
        "y": 820,
        "wires": [
            [
                "756103ad.5694bc"
            ],
            [
                "a0a78857.2a17c8"
            ]
        ]
    },
    {
        "id": "5da73960.621b58",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "\nmsg.template = msg.payload[0].value.template;\nmsg.includedField = msg.doc;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 760,
        "wires": [
            [
                "fea391af.aad24"
            ]
        ]
    },
    {
        "id": "fea391af.aad24",
        "type": "template",
        "z": "1f50769f.97b799",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "",
        "output": "str",
        "x": 1120,
        "y": 800,
        "wires": [
            [
                "ebb88dfc.6f27a"
            ]
        ]
    },
    {
        "id": "756103ad.5694bc",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "original.includeMetadata",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 800,
        "wires": [
            [
                "5da73960.621b58"
            ],
            [
                "a0a78857.2a17c8"
            ]
        ]
    },
    {
        "id": "a0a78857.2a17c8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.payload = msg.doc\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 840,
        "wires": [
            [
                "d190173f.35b728"
            ]
        ]
    },
    {
        "id": "47493925.d866e8",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "Manually call Google API using HTTP",
        "info": "",
        "x": 2750,
        "y": 340,
        "wires": []
    },
    {
        "id": "4d234756.4de838",
        "type": "http in",
        "z": "1f50769f.97b799",
        "name": "",
        "url": "/api/notification",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 1480,
        "wires": [
            [
                "cda0dabe.45ff28"
            ]
        ]
    },
    {
        "id": "e02e5bd4.a812a8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var notification = flow.get('notification');\n\nif(notification != null){\n    object = {\n        accessId: msg.token.access_id,\n        message: \"Done\"\n    }\n    notification.push(object);\n} else {\n    notification = [];\n     object = {\n        accessId: msg.token.access_id,\n        message: \"Done\"\n    }\n    notification.push(object);\n}\nflow.set('notification', notification);\n\n// msg.filename = \"files/\"+msg.original.filename;\nmsg.filename= \"exportcsv/\"+msg.original.filename+\"-\"+msg.token.access_id+\"-\"+\".csv\";\n// let data = {};\n// data.resData = msg.payload;\n// data.userName = msg.token.name;\n// data.level = msg.token.level;\n// data.fileName = msg.original.filename;\n// data.doc_type = \"notification\";\n// data.type = msg.original.type;\n\n// msg.payload = {};\n// msg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 1160,
        "wires": [
            [
                "39576cd2.3cd2e4"
            ]
        ]
    },
    {
        "id": "59612be9.7f6274",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var notifications = flow.get('notification');\n\nif(notifications != null){\n    for(var x = 0; x < notifications.length; x++) {\n        notification = notifications[x];\n        if(notification.accessId == msg.token.access_id) {\n            msg.payload = {\n                message: notification.message\n            }\n            notifications.splice(x, 1);\n            break;\n        }\n    }\n} else {\n    msg.payload = {\n        message: \"Not Yet\"\n    }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 1480,
        "wires": [
            [
                "f12b485b.cfc4a8"
            ]
        ]
    },
    {
        "id": "90b8211.6879de",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "statusCode 200?",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 790,
        "y": 1300,
        "wires": [
            [
                "ae416bfe.831398"
            ],
            [
                "22a7a70c.b79328"
            ]
        ]
    },
    {
        "id": "ae416bfe.831398",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var notification = flow.get('notification');\n\nif(notification != null){\n    object = {\n        accessId: msg.token.access_id,\n        message: \"Done\"\n    }\n    notification.push(object);\n} else {\n    notification = [];\n     object = {\n        accessId: msg.token.access_id,\n        message: \"Done\"\n    }\n    notification.push(object);\n}\nflow.set('notification', notification);\n\n\nlet data = {};\ndata.resData = msg.payload.spreadsheetId;\ndata.accessId = msg.token.access_id;\ndata.level = msg.token.level;\ndata.fileName = msg.original.filename;\ndata.doc_type = \"notification\";\ndata.type = msg.original.type;\ndata.timestamp = new Date().toISOString()\n\nmsg.payload = {};\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 1260,
        "wires": [
            [
                "d7b523ae.a2848"
            ]
        ]
    },
    {
        "id": "22a7a70c.b79328",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var notification = flow.get('notification');\n\nif(notification != null){\n    object = {\n        accessId: msg.token.access_id,\n        message: \"400\"\n    }\n    notification.push(object);\n} else {\n    notification = [];\n     object = {\n        accessId: msg.token.access_id,\n        message: \"400\"\n    }\n    notification.push(object);\n}\nflow.set('notification', notification);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 1320,
        "wires": [
            [
                "2c36c4a.ac0213c"
            ]
        ]
    },
    {
        "id": "8f672a07.73d9e8",
        "type": "cloudantplus out",
        "z": "1f50769f.97b799",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1710,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "f68530b6.9551c",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "frontendKeepCallingthis",
        "info": "frontendKeepCallingthis after request",
        "x": 240,
        "y": 1440,
        "wires": []
    },
    {
        "id": "133a54d6.9daafb",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "getNotificationList",
        "info": "",
        "x": 220,
        "y": 1540,
        "wires": []
    },
    {
        "id": "13b26bed.074834",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "ManCreate",
        "google": "140efa24.f87256",
        "api": "drive:v3",
        "operation": "files.create",
        "x": 750,
        "y": 1140,
        "wires": [
            [
                "44d62f06.6c8f6"
            ]
        ]
    },
    {
        "id": "d7b523ae.a2848",
        "type": "cloudantplus out",
        "z": "1f50769f.97b799",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1190,
        "y": 1260,
        "wires": [
            [
                "b7e59304.401b9"
            ]
        ]
    },
    {
        "id": "39576cd2.3cd2e4",
        "type": "file",
        "z": "1f50769f.97b799",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 410,
        "y": 1220,
        "wires": [
            [
                "e5ec16b5.dec2b8"
            ]
        ]
    },
    {
        "id": "e5ec16b5.dec2b8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let data = {};\n\ndata.resData = msg.filename; //path\ndata.accessId = msg.token.access_id;\ndata.level = msg.token.level;\ndata.fileName = msg.original.filename+\"-\"+msg.token.access_id;\ndata.doc_type = \"notification\";\ndata.type = msg.original.type;\ndata.timestamp = new Date().toISOString()\n\nmsg.payload = {};\nmsg.payload = data;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 1280,
        "wires": [
            [
                "9d061483.dcfae8"
            ]
        ]
    },
    {
        "id": "9d061483.dcfae8",
        "type": "cloudantplus out",
        "z": "1f50769f.97b799",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 430,
        "y": 1340,
        "wires": [
            [
                "178b1b9.acf96e4"
            ]
        ]
    },
    {
        "id": "6b8ff227.60088c",
        "type": "http response",
        "z": "1f50769f.97b799",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 480,
        "y": 1660,
        "wires": []
    },
    {
        "id": "3a31519a.37676e",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let keyNotNeeded = [\"_id\",\"_rev\",\"doc_type\"];\nlet response = [];\nfor(var x = 0; x < msg.payload.length; x++) {\n    let value = msg.payload[x].value;\n    \n    for(var i = 0; i < keyNotNeeded.length; i++) {\n        delete value[keyNotNeeded[i]];\n    }\n    response.push(value);\n}\nmsg.payload = {};\nmsg.payload = response;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 1660,
        "wires": [
            [
                "6b8ff227.60088c"
            ]
        ]
    },
    {
        "id": "210f7ae2.42d396",
        "type": "cloudantplus in",
        "z": "1f50769f.97b799",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "search": "_view_",
        "design": "notification",
        "index": "notification",
        "x": 850,
        "y": 1580,
        "wires": [
            [
                "3a31519a.37676e"
            ]
        ]
    },
    {
        "id": "dc2d8f8e.4b253",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "// let today = new Date().toISOString();\n// let startkey = [msg.token.access_id,msg.token.level, today];\n// let endkey = [msg.token.access_id,msg.token.level, \"1970-01-01T00:00:01.958Z\"];\n\nlet startkey = [msg.token.access_id,msg.token.level, {}];\nlet endkey = [msg.token.access_id,msg.token.level];\nlet descending = true\n\nmsg.payload.startkey = startkey;\nmsg.payload.endkey = endkey;\nmsg.payload.descending = descending;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 1580,
        "wires": [
            [
                "210f7ae2.42d396"
            ]
        ]
    },
    {
        "id": "9fd70de9.e6f79",
        "type": "http in",
        "z": "1f50769f.97b799",
        "name": "",
        "url": "/api/getListNotification",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 250,
        "y": 1580,
        "wires": [
            [
                "d62eee60.efe8d"
            ]
        ]
    },
    {
        "id": "c06bdfd1.49c21",
        "type": "http in",
        "z": "1f50769f.97b799",
        "name": "",
        "url": "/api/getCsvFile",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 1740,
        "wires": [
            [
                "92c395c7.416498"
            ]
        ]
    },
    {
        "id": "f8f812f0.f6a68",
        "type": "http response",
        "z": "1f50769f.97b799",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 440,
        "y": 1800,
        "wires": []
    },
    {
        "id": "749f8199.927b4",
        "type": "file in",
        "z": "1f50769f.97b799",
        "name": "",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 790,
        "y": 1740,
        "wires": [
            [
                "19e7a751.8f29b9"
            ]
        ]
    },
    {
        "id": "c52cf692.d11aa8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.filename = msg.req.query.path\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 620,
        "y": 1740,
        "wires": [
            [
                "749f8199.927b4"
            ]
        ]
    },
    {
        "id": "19e7a751.8f29b9",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var data = msg.payload;\nmsg.payload = {}\nmsg.payload = {\n    data: data\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 260,
        "y": 1800,
        "wires": [
            [
                "f8f812f0.f6a68"
            ]
        ]
    },
    {
        "id": "f12b485b.cfc4a8",
        "type": "http response",
        "z": "1f50769f.97b799",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 820,
        "y": 1480,
        "wires": []
    },
    {
        "id": "4ce9d948.fd9a58",
        "type": "simple-queue",
        "z": "1f50769f.97b799",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 930,
        "y": 380,
        "wires": [
            [
                "2ee1d2ac.57066e"
            ]
        ]
    },
    {
        "id": "12cef95f.059e77",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "trigger",
        "func": "msg.trigger = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1810,
        "y": 280,
        "wires": [
            [
                "4ce9d948.fd9a58"
            ]
        ]
    },
    {
        "id": "34dae4d6.c6fcbc",
        "type": "simple-queue",
        "z": "1f50769f.97b799",
        "name": "",
        "firstMessageBypass": true,
        "bypassInterval": "0",
        "x": 830,
        "y": 1080,
        "wires": [
            [
                "13b26bed.074834"
            ]
        ]
    },
    {
        "id": "2c36c4a.ac0213c",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "trigger",
        "func": "msg.trigger = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 1320,
        "wires": [
            [
                "34dae4d6.c6fcbc"
            ]
        ]
    },
    {
        "id": "b7e59304.401b9",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "trigger",
        "func": "msg.trigger = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1350,
        "y": 1260,
        "wires": [
            [
                "34dae4d6.c6fcbc"
            ]
        ]
    },
    {
        "id": "960f1b8d.d7f518",
        "type": "http in",
        "z": "1f50769f.97b799",
        "name": "",
        "url": "/api/logging",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 2520,
        "wires": [
            [
                "8e133897.ac3018"
            ]
        ]
    },
    {
        "id": "8e133897.ac3018",
        "type": "cloudantplus in",
        "z": "1f50769f.97b799",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "search": "_all_",
        "design": "",
        "index": "",
        "x": 360,
        "y": 2520,
        "wires": [
            [
                "2b092666.ff097a"
            ]
        ]
    },
    {
        "id": "2b092666.ff097a",
        "type": "http response",
        "z": "1f50769f.97b799",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 540,
        "y": 2520,
        "wires": []
    },
    {
        "id": "5dfda85e.e3d7c8",
        "type": "subflow:84269f38.920f2",
        "z": "1f50769f.97b799",
        "name": "",
        "env": [],
        "x": 1050,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "43ed5090.4561",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "convertingTimeandbatch",
        "func": "const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        \nfor(var x = 0; x < msg.payload.length; x++) {\n    let data = msg.payload[x];\n    var date;\n    var word;\n    var month;\n    var day;\n    var year;\n    var dateObj;\n    \n    var hour;\n    var minute;\n    var seconds;\n    \n    if('ts' in data) {\n        data.ts = data.ts*1000;\n        // date = new Date(data.ts)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        dateObj = new Date(data.ts)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        second = dateObj.getSeconds();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        if(second < 10) {\n            second = \"0\"+second;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute + \":\" + second;\n       \n        data.ts = word;\n       \n    }\n    \n    if('timestamp' in data) {\n        // date = new Date(data.timestamp)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n       \n        dateObj = new Date(data.timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n       \n    \n        data.timestamp = word\n    }\n    \n    if('submission_timestamp' in data) {\n        dateObj = new Date(data.submission_timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        data.submission_timestamp = word\n    }\n    \n    if('in_submitted_date' in data) {\n        // date = new Date(data.in_submitted_date)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.in_submitted_date)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n        data.in_submitted_date = word\n    }\n    \n    if('in_timestamp' in data) {\n        // date = new Date(data.in_timestamp)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.in_timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.in_timestamp = word\n    }\n    \n    if('out_submitted_date' in data) {\n        // date = new Date(data.out_submitted_date)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.out_submitted_date)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.out_submitted_date = word\n    }\n    \n    if('out_timestamp' in data) {\n        // date = new Date(data.out_timestamp)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.out_timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.out_timestamp = word\n    }\n    \n    if('start_timestamp' in data) {\n        // date = new Date(data.start_timestamp)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.start_timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.start_timestamp = word\n    }\n    \n    if('start_submitted_date' in data) {\n        // date = new Date(data.start_submitted_date)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.start_submitted_date)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.start_submitted_date = word\n    }\n    \n     if('end_timestamp' in data) {\n        // date = new Date(data.end_timestamp)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.end_timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.end_timestamp = word\n    }\n    \n    if('end_submitted_date' in data) {\n        // date = new Date(data.end_submitted_date)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.end_submitted_date)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.end_submitted_date = word\n    }\n    \n    if('batchId' in data) {\n        \n        if(Array.isArray(data.batchId)){\n            var batchIdList = \"\"\n            for(let i=0; i<data.batchId.length;i++){\n                if(i ===0){\n                    batchIdList = batchIdList +data.batchId[i]\n                }\n                else{\n                    batchIdList = batchIdList +\"\\, \"+data.batchId[i]\n                }\n            }\n            batchIdList = batchIdList +\"\"\n            data.batchId = batchIdList\n        }\n    }\n    \n    msg.payload[x] = data;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 600,
        "wires": [
            [
                "a8afdb25.6df348"
            ]
        ]
    },
    {
        "id": "1230e219.2dfabe",
        "type": "catch",
        "z": "1f50769f.97b799",
        "name": "catchAbc",
        "scope": null,
        "uncaught": true,
        "x": 280,
        "y": 2660,
        "wires": [
            [
                "82fdeba6.bde5c8"
            ]
        ]
    },
    {
        "id": "82fdeba6.bde5c8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.payload = {}\nlet today = new Date();\n\nmsg.payload.message = msg.error.message;\nmsg.payload.source = msg.error.source;\nmsg.payload.date = today;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 2660,
        "wires": [
            [
                "d02f6681.f41f88"
            ]
        ]
    },
    {
        "id": "d02f6681.f41f88",
        "type": "cloudantplus out",
        "z": "1f50769f.97b799",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 660,
        "y": 2660,
        "wires": [
            []
        ]
    },
    {
        "id": "178b1b9.acf96e4",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "trigger",
        "func": "msg.trigger = true;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 1320,
        "wires": [
            []
        ]
    },
    {
        "id": "6a4a11b4.10acc",
        "type": "switch",
        "z": "d085109b.41a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 250,
        "y": 140,
        "wires": [
            [
                "6cd35ada.b76f84"
            ],
            [
                "e4c484d6.47d6d8"
            ],
            [
                "2acc27d2.6c7038"
            ]
        ]
    },
    {
        "id": "6719719a.96dee",
        "type": "http response",
        "z": "d085109b.41a3e",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 700,
        "y": 160,
        "wires": []
    },
    {
        "id": "a51ea950.f680e8",
        "type": "http response",
        "z": "d085109b.41a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 660,
        "y": 260,
        "wires": []
    },
    {
        "id": "2acc27d2.6c7038",
        "type": "function",
        "z": "d085109b.41a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Cant find select option\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 260,
        "wires": [
            [
                "a51ea950.f680e8"
            ]
        ]
    },
    {
        "id": "e4c484d6.47d6d8",
        "type": "function",
        "z": "d085109b.41a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 220,
        "wires": [
            [
                "43c99d.95d77664"
            ]
        ]
    },
    {
        "id": "43c99d.95d77664",
        "type": "http response",
        "z": "d085109b.41a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 680,
        "y": 220,
        "wires": []
    },
    {
        "id": "d7eeb603.2fb338",
        "type": "cloudantplus in",
        "z": "d085109b.41a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "6a4a11b4.10acc"
            ]
        ]
    },
    {
        "id": "80216304.4202",
        "type": "switch",
        "z": "d085109b.41a3e",
        "name": "",
        "property": "notFound",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 120,
        "wires": [
            [
                "d8ebee3c.67ace"
            ],
            [
                "6719719a.96dee"
            ]
        ]
    },
    {
        "id": "46eaa223.03cf1c",
        "type": "http response",
        "z": "d085109b.41a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 920,
        "y": 100,
        "wires": []
    },
    {
        "id": "d8ebee3c.67ace",
        "type": "function",
        "z": "d085109b.41a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\":\"Cant find batchId for this rack.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 100,
        "wires": [
            [
                "46eaa223.03cf1c"
            ]
        ]
    },
    {
        "id": "6cd35ada.b76f84",
        "type": "function",
        "z": "d085109b.41a3e",
        "name": "",
        "func": "let value = msg.payload[0].value;\nconst rackId = msg.original.formValue.breedingGrowOutSetupRackId\nmsg.payload = {}\nif(value.options[rackId]){\n    if(value.options[rackId].setupDateId){\n        msg.notFound = false;\n        msg.payload.fieldKey = msg.original.fieldKey\n        if(msg.original.fieldKey == \"trayCount\"){\n            if(value.options[rackId].prePupaeChamberId){\n                msg.payload.fieldValue =value.options[rackId].occupiedCapacity;\n            }\n            else{\n                msg.payload.fieldValue =1;\n            }\n            \n        }\n        else if(msg.original.fieldKey == \"setupDateId\"){\n            msg.payload.fieldValue =value.options[rackId].setupDateId;\n        }\n        else if(msg.original.fieldKey == \"growthChamberId\") {\n            msg.payload.fieldValue =value.options[rackId].growthChamberId;\n        }\n    }\n    else{\n        msg.notFound = true;\n    }\n}\nelse{\n    msg.notFound = true;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 120,
        "wires": [
            [
                "80216304.4202"
            ]
        ]
    },
    {
        "id": "900faa1.1883e58",
        "type": "function",
        "z": "d46e607a.c58f4",
        "name": "",
        "func": "let tenant = msg.req.params.tenant\n// let line = msg.payload.line\n// let form = msg.payload.form\nlet line = msg.req.query.line\nlet form = msg.req.query.form\nlet key = msg.req.params.key\nlet specialKeys = {\n    'breeding': {\n        'nursery-checkout': {\n            'setupDateId': true\n        }\n    }\n}\nlet proceed = false\n\nif (\n    specialKeys[line] &&\n    specialKeys[line][form] &&\n    specialKeys[line][form][key]\n) {\n    proceed = true\n}\n\nmsg.topic = \"selectOption\"\nmsg.proceed = proceed\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "7e562b7a.f32244"
            ]
        ]
    },
    {
        "id": "7e562b7a.f32244",
        "type": "switch",
        "z": "d46e607a.c58f4",
        "name": "",
        "property": "proceed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 350,
        "y": 80,
        "wires": [
            [
                "d923a5e5.79ec58"
            ],
            []
        ]
    },
    {
        "id": "d2a39a68.57d9c8",
        "type": "link in",
        "z": "d46e607a.c58f4",
        "name": "",
        "links": [
            "d923a5e5.79ec58"
        ],
        "x": 155,
        "y": 220,
        "wires": [
            [
                "d0204c85.2d4f3"
            ]
        ]
    },
    {
        "id": "d923a5e5.79ec58",
        "type": "link out",
        "z": "d46e607a.c58f4",
        "name": "",
        "links": [
            "d2a39a68.57d9c8",
            "807c3bac.151538",
            "e3bf3f88.7f804"
        ],
        "x": 455,
        "y": 60,
        "wires": []
    },
    {
        "id": "eb092bc2.13d168",
        "type": "function",
        "z": "d46e607a.c58f4",
        "name": "",
        "func": "let tenant = global.get('tenant') || '001'\nlet line = 'breeding'\nlet form = 'nursery-setup'\nlet payload = {tenant, line, form}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "f4e96313.049c6",
        "type": "link in",
        "z": "d46e607a.c58f4",
        "name": "",
        "links": [
            "d09caf8f.c5545"
        ],
        "x": 655,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "d09caf8f.c5545",
        "type": "link out",
        "z": "d46e607a.c58f4",
        "name": "",
        "links": [
            "f4e96313.049c6"
        ],
        "x": 695,
        "y": 220,
        "wires": []
    },
    {
        "id": "5a0c551d.9625fc",
        "type": "inject",
        "z": "dc8c4370.78e2",
        "name": "design names",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "[\"dataRecord\",\"query-form\",\"incomplete-form\",\"attendance-incomplete\",\"process-incomplete\",\"dataSomething\",\"sensorDevice\",\"master-data\",\"egg-collection-dashboard\",\"neonate-collection-dashboard\",\"pupation-setup-dashboard\",\"5DOL-dashboard\",\"dashboard-performance\",\"docsCount\"]",
        "payloadType": "json",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "1aaf45f3.1a6c5a"
            ]
        ],
        "info": "# Design names\n\nAdd an array of design document names\nto check. Add these names to the split node\nand provide a template containing the code"
    },
    {
        "id": "1aaf45f3.1a6c5a",
        "type": "split",
        "z": "dc8c4370.78e2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 230,
        "y": 180,
        "wires": [
            [
                "1172284.670d4d8"
            ]
        ]
    },
    {
        "id": "1172284.670d4d8",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 220,
        "wires": [
            [
                "35a0fa5c.fb80e6"
            ]
        ]
    },
    {
        "id": "35a0fa5c.fb80e6",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "should delay?",
        "property": "ENVIRONMENT",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "production",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 200,
        "y": 260,
        "wires": [
            [
                "8a523d7e.41ada"
            ],
            [
                "d3f90ed8.43333"
            ]
        ]
    },
    {
        "id": "8a523d7e.41ada",
        "type": "delay",
        "z": "dc8c4370.78e2",
        "name": "",
        "pauseType": "rate",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 210,
        "y": 300,
        "wires": [
            [
                "d3f90ed8.43333"
            ]
        ]
    },
    {
        "id": "d3f90ed8.43333",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for GET",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/insectdata/_design/\"+msg.topic;\nmsg.method=\"GET\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 340,
        "wires": [
            [
                "68cdc663.64e478"
            ]
        ]
    },
    {
        "id": "68cdc663.64e478",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 210,
        "y": 380,
        "wires": [
            [
                "960d6c5a.dde55"
            ]
        ]
    },
    {
        "id": "960d6c5a.dde55",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "existingDoc",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 420,
        "wires": [
            [
                "c6087e6.3444a8"
            ]
        ]
    },
    {
        "id": "c6087e6.3444a8",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for PUT",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/insectdata/_design/\"+msg.topic;\nmsg.method=\"PUT\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 460,
        "wires": [
            [
                "2203f31.991330c",
                "8c3b62f.97b56a"
            ]
        ]
    },
    {
        "id": "2203f31.991330c",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "design names",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "dataRecord",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "query-form",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "incomplete-form",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "attendance-incomplete",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "process-incomplete",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sensorDevice",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "master-data",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "egg-collection-dashboard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "neonate-collection-dashboard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup-dashboard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "5DOL-dashboard",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "dashboard-performance",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 12,
        "x": 200,
        "y": 580,
        "wires": [
            [
                "37794e73.3c69b2"
            ],
            [
                "8cc7f8dd.8237a8"
            ],
            [
                "58e106ba.39e3c8"
            ],
            [
                "6d4a3173.6bfff"
            ],
            [
                "aceaed32.d6957"
            ],
            [
                "bacfaaf7.235ce8"
            ],
            [
                "f11dd1ce.801c9"
            ],
            [
                "24d8d4de.f03b8c"
            ],
            [
                "9b9f9c9d.1a472"
            ],
            [
                "c6b5ecf4.1f407"
            ],
            [
                "f09bc7b8.19adc8"
            ],
            [
                "a713bda1.6413e"
            ]
        ]
    },
    {
        "id": "37794e73.3c69b2",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "dataRecord",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/dataRecord\",\n  \"_rev\": \"10-7ece1116c28a01e69c0ec08ab34c4251\",\n  \"views\": {\n    \"findByDeletedFalse\": {\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && !doc.deleted) emit(doc._id, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 470,
        "y": 140,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "8cc7f8dd.8237a8",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "query-form",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/query-form\",\n  \"_rev\": \"553-d9b584468f7fd306670070e803b615b6\",\n  \"views\": {\n    \"total_element_by_submission_timestamp\": {\n      \"reduce\": \"_count\",\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && !doc.deleted && doc.submission_timestamp && !doc.templateType){\\n    emit([doc.tenant, doc.submission_timestamp], doc.daily_index);\\n  }\\n}\"\n    },\n    \"total_element_by_2_key\": {\n      \"reduce\": \"_count\",\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && !doc.deleted && doc.submission_timestamp && !doc.templateType){\\n    emit([doc.tenant, doc.workstationForm, doc.submission_timestamp], doc.daily_index);\\n  }\\n}\"\n    },\n    \"query_by_2_key\": {\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && !doc.deleted && doc.submission_timestamp && !doc.templateType){\\n    emit([doc.tenant, doc.workstationForm, doc.submission_timestamp], doc);\\n  }\\n}\"\n    },\n    \"query_by_submission_timestamp\": {\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && !doc.deleted && doc.submission_timestamp && !doc.templateType){\\n    emit([doc.tenant, doc.submission_timestamp], doc);\\n  }\\n}\"\n    },\n    \"getTotalElementByTemplateTypeAndSubmissionTimestamp\": {\n      \"reduce\": \"_count\",\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && !doc.deleted && doc.submission_timestamp && doc.templateType){\\n    emit([doc.tenant, doc.templateType, doc.submission_timestamp], doc.daily_index);\\n  }\\n}\"\n    },\n    \"getTotalElementByTemplateTypeAndSubmissionTimeStampAndWorkstationForm\": {\n      \"reduce\": \"_count\",\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && !doc.deleted && doc.submission_timestamp && doc.templateType){\\n    emit([doc.tenant, doc.templateType, doc.workstationForm, doc.submission_timestamp], doc.daily_index);\\n  }\\n}\"\n    },\n    \"findByTemplateTypeAndSubmissionTimeStampAndWorkstationForm\": {\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && !doc.deleted && doc.submission_timestamp && doc.templateType){\\n    emit([doc.tenant, doc.templateType, doc.workstationForm, doc.submission_timestamp], doc);\\n  }\\n}\"\n    },\n    \"findByTemplateTypeAndSubmissionTimestamp\": {\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && !doc.deleted && doc.submission_timestamp && doc.templateType){\\n    emit([doc.tenant, doc.templateType, doc.submission_timestamp], doc);\\n  }\\n}\"\n    },\n    \"query_by_2_key_time_stamp\": {\n      \"map\": \"function (doc) {\\n  if(doc.dataRecord && !doc.deleted && doc.timestamp && !doc.templateType){\\n    emit([doc.tenant, doc.timestamp], doc);\\n  }\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 470,
        "y": 180,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "58e106ba.39e3c8",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "incomplete-form",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/incomplete-form\",\n  \"_rev\": \"461-9fdc46e247a924b7352077f0b0f48c50\",\n  \"views\": {\n    \"grow-out-setup\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"grow-out-setup\\\" && doc.batchId &&doc.incomplete && !doc.deleted){\\n    emit([doc.tenant, doc.breedingGrowOutSetupRackId, doc.batchId], doc);\\n  } else if(doc.workstationForm == \\\"grow-out-setup\\\" && doc.setupDateId &&doc.incomplete && !doc.deleted){\\n    emit([doc.tenant, doc.breedingGrowOutSetupRackId, doc.setupDateId], doc);\\n  }\\n  \\n}\"\n    },\n    \"grow-out-setup-id\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"grow-out-setup\\\" && !doc.deleted && doc.growOutSetupId)\\n  emit(doc.growOutSetupId, doc);\\n}\"\n    },\n    \"nursery-setup\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"nursery-setup\\\" && doc.batchId &&doc.incomplete && !doc.deleted) {\\n    emit([doc.tenant, doc.breedingNurserySetupRackId, doc.batchId], doc);\\n  } else if(doc.workstationForm == \\\"nursery-setup\\\" && doc.setupDateId &&doc.incomplete && !doc.deleted) {\\n    emit([doc.tenant, doc.breedingNurserySetupRackId, doc.setupDateId], doc);\\n  }\\n  \\n}\"\n    },\n    \"nursery-setup-id\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"nursery-setup\\\" && !doc.deleted && doc.nurserySetupId)\\n  emit(doc.nurserySetupId, doc);\\n}\"\n    },\n    \"pupation-setup\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"pupation-setup-detail\\\" && doc.incomplete && !doc.deleted)\\n  emit([doc.tenant, doc.pupationRackID, doc.batchId], doc);\\n}\"\n    },\n    \"pupation-setup-id\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"pupation-setup-detail\\\" && !doc.deleted && doc.pupationSetupDetailId)\\n  emit(doc.pupationSetupDetailId, doc);\\n}\"\n    },\n    \"pupation-emergence-setup\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"pupation-emergence-setup-detail\\\" && doc.incomplete && !doc.deleted)\\n  emit([doc.tenant, doc.pupationRackID], doc);\\n}\"\n    },\n    \"pupation-emergence-setup-id\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"pupation-emergence-setup-detail\\\" && !doc.deleted && doc.pupationEmergenceSetupId)\\n  emit(doc.pupationEmergenceSetupId, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 480,
        "y": 220,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "6d4a3173.6bfff",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "attendance-incomplete",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/attendance-incomplete\",\n  \"views\": {\n    \"attendance-incomplete\": {\n      \"map\": \"function (doc) {\\n  if (doc.doc_type == 'attendance' && doc.incomplete && !doc.in_deleted) emit([doc.tenant, doc.user_id, doc.type, doc.in_timestamp], doc);\\n}\"\n    },\n    \"attendance-incomplete-out\": {\n      \"map\": \"function (doc) {\\n  if (doc.doc_type == 'attendance' && doc.incomplete != null && doc.out_id) emit(doc.out_id, doc);\\n}\"\n    },\n    \"attendance-incomplete-in\": {\n      \"map\": \"function (doc) {\\n  if (doc.doc_type == 'attendance' && doc.incomplete != null && doc.in_id) emit(doc.in_id, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 500,
        "y": 260,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "aceaed32.d6957",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "process-incomplete",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/process-incomplete\",\n  \"views\": {\n    \"process-incomplete\": {\n      \"map\": \"function (doc) {\\n  if (doc.form == 'process-check-in-out' && doc.incomplete && !doc.start_deleted) emit([doc.tenant, doc.user_id, doc.selectProcess], doc);\\n}\"\n    },\n    \"process-incomplete-start\": {\n      \"map\": \"function (doc) {\\n  if (doc.form == 'process-check-in-out' && doc.incomplete != null && doc.start_id) emit(doc.start_id, doc);\\n}\"\n    },\n    \"process-incomplete-end\": {\n      \"map\": \"function (doc) {\\n  if (doc.form == 'process-check-in-out' && doc.incomplete != null && doc.end_id) emit(doc.end_id, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 490,
        "y": 300,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "bacfaaf7.235ce8",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "sensorDevice",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/sensorDevice\",\n  \"_rev\": \"56-eeb076c736c6a7f5828aa28113963a0e\",\n  \"views\": {\n    \"findBySensorDeviceId\": {\n      \"map\": \"function (doc) {\\n  if (doc.templateType === 'device') emit(doc.sensorDeviceId, doc);\\n}\"\n    },\n    \"findByDeletedFalse-deviceId\": {\n      \"map\": \"function (doc) {\\n  if (doc.templateType === 'device' && !doc.deleted) emit(doc.sensorDeviceId, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 480,
        "y": 340,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "f11dd1ce.801c9",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "master-data",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/master-data\",\n  \"_rev\": \"92-329b8e9ed9a8775001b5b2f3603346d0\",\n  \"views\": {\n    \"by-timestamp\": {\n      \"map\": \"function (doc) {\\n  if (doc.dataRecord && doc.timestamp && !doc.deleted) emit(doc.timestamp, doc);\\n}\"\n    },\n    \"by-id\": {\n      \"map\": \"function (doc) {\\n  emit([doc._id], doc);\\n}\"\n    },\n    \"by-form\": {\n      \"map\": \"function (doc) {\\n  if (doc.dataRecord && doc.productionLine && doc.workstationForm) emit([doc.productionLine, doc.workstationForm], doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 470,
        "y": 380,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "24d8d4de.f03b8c",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "egg-collection-dashboard",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/egg-collection-dashboard\",\n  \"_rev\": \"2-15bca640e7b5c7f45623f7d6d149335d\",\n  \"views\": {\n    \"egg-collection-dashboard\": {\n      \"map\": \"function (doc) {\\r\\n    if (doc.docType == \\\"collectionEggTrapList\\\" && !doc.incomplete && !doc.deleted) {\\r\\n        emit(doc.eggTrapOutTimestamp, doc.collectionWeight);\\r\\n    }\\r\\n    if (doc.workstationForm == \\\"egg-collection-basic\\\" && doc.productionLine == \\\"breeding\\\" && !doc.deleted) {\\r\\n        emit(doc.timestamp, doc.eggs);\\r\\n    }\\r\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 510,
        "y": 420,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "9b9f9c9d.1a472",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "neonate-collection-dashboard",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/neonate-collection-dashboard\",\n  \"_rev\": \"5-dff19fa81e31b8ab142f186d10cb3685\",\n  \"views\": {\n    \"neonate-collection-dashboard\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm ==\\\"neonate-collection\\\" && doc.productionLine == \\\"breeding\\\" && !doc.deleted)\\n  emit(doc.timestamp, doc.neonates);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 530,
        "y": 460,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "c6b5ecf4.1f407",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "pupation-setup-dashboard",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/pupation-setup-dashboard\",\n  \"_rev\": \"5-f1fa9c73ceb0e6f1d6d9d715d5224b39\",\n  \"views\": {\n    \"pupation-setup-dashboard\": {\n      \"map\": \"function (doc) {\\n  if(doc.workstationForm == \\\"pupation-setup-basic\\\" && doc.productionLine == \\\"breeding\\\" && !doc.deleted)\\n  emit(doc.timestamp, doc.totalPrePupaeSetup);\\n  \\n  if(doc.workstationForm == \\\"pupation-setup-detail\\\" && doc.productionLine == \\\"breeding\\\" && !doc.deleted)\\n  emit(doc.timestamp, doc.trayCount* doc.weightPerTraySetpoint);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 510,
        "y": 500,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "8c046fdd.d7d2e",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "func": "if (msg.existingDoc || msg.existingDoc._rev) {\n    msg.hasRev = true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 980,
        "y": 180,
        "wires": [
            [
                "5d7240eb.8f538"
            ]
        ]
    },
    {
        "id": "5d7240eb.8f538",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "property": "hasRev",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 980,
        "y": 220,
        "wires": [
            [
                "c9c4e031.9b8a7"
            ],
            [
                "38741f5a.4d77b"
            ]
        ]
    },
    {
        "id": "c9c4e031.9b8a7",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload._rev",
                "pt": "msg",
                "to": "existingDoc._rev",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 260,
        "wires": [
            [
                "2c76f9bc.608506"
            ]
        ]
    },
    {
        "id": "38741f5a.4d77b",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload._rev",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 930,
        "y": 300,
        "wires": [
            [
                "2c76f9bc.608506"
            ]
        ]
    },
    {
        "id": "2c76f9bc.608506",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 970,
        "y": 340,
        "wires": [
            [
                "cd822a.9e0ffdd8"
            ]
        ]
    },
    {
        "id": "cd822a.9e0ffdd8",
        "type": "debug",
        "z": "dc8c4370.78e2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 380,
        "wires": []
    },
    {
        "id": "83605eaf.3b40b",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "// let query = {\n//     \"selector\": {\n//         \"docType\":\"select-option\",\n//         \"type\": msg.req.params.key,\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\nlet query = {}\nlet body = msg.payload\nlet type = msg.payload.type;\n\n\nquery[\"key\"] = [msg.req.params.tenant, body.label, body.batchIdList]\nmsg.payload = query;\nmsg.type = type;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 4080,
        "wires": [
            [
                "92a15a53.78a268"
            ]
        ]
    },
    {
        "id": "dc802115.be194",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4320,
        "y": 740,
        "wires": [
            [
                "70c1143d.fc843c"
            ]
        ]
    },
    {
        "id": "90a9fc07.bfbfd",
        "type": "debug",
        "z": "3517e109.8c2a3e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3440,
        "y": 1000,
        "wires": []
    },
    {
        "id": "efd83ae4.d2b008",
        "type": "debug",
        "z": "3517e109.8c2a3e",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 3640,
        "y": 1040,
        "wires": []
    },
    {
        "id": "864e5918.7a1218",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "modify asset",
        "info": "",
        "x": 3480,
        "y": 1060,
        "wires": []
    },
    {
        "id": "64316362.75742c",
        "type": "function",
        "z": "889b2901.b7a768",
        "name": "",
        "func": "msg.oldData = {...msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 80,
        "wires": [
            [
                "1ab5466e.17097a"
            ]
        ]
    },
    {
        "id": "1ab5466e.17097a",
        "type": "function",
        "z": "889b2901.b7a768",
        "name": "",
        "func": "let errMsg =\"Process completed. \"\nlet constField = [\n    {\n        name: \"pupationRackID\",\n        errMsg: \"Rack Id\"\n    }\n];\nmsg.err = false;\nfor(let field of constField){\n    let fieldName = field.name;\n    if(Array.isArray(msg.oldData[fieldName])){\n        if(JSON.stringify(msg.oldData[fieldName]) !== JSON.stringify(msg.original[fieldName])){\n            msg.err = true;\n            if(errMsg === \"Process completed. \"){\n                errMsg = errMsg + field.errMsg \n            }\n            else{\n                errMsg = errMsg + \", \"+ field.errMsg \n            }\n        }\n    }\n    else if(msg.oldData[fieldName] !== msg.original[fieldName]){\n        msg.err = true;\n        if(errMsg === \"Process completed. \"){\n            errMsg = errMsg + field.errMsg \n        }\n        else{\n            errMsg = errMsg + \", \"+ field.errMsg \n        }\n       \n    }\n}\nmsg.errMsg = errMsg + \" cannot be changed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "e1016d3f.29ed7"
            ]
        ]
    },
    {
        "id": "e1016d3f.29ed7",
        "type": "switch",
        "z": "889b2901.b7a768",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 80,
        "wires": [
            [
                "50104f0d.6c598"
            ],
            [
                "71d3bf15.5dff8"
            ]
        ]
    },
    {
        "id": "71d3bf15.5dff8",
        "type": "function",
        "z": "889b2901.b7a768",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 160,
        "wires": [
            [
                "f89124d0.8eebe8"
            ]
        ]
    },
    {
        "id": "f89124d0.8eebe8",
        "type": "http response",
        "z": "889b2901.b7a768",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1320,
        "y": 160,
        "wires": []
    },
    {
        "id": "9cd07a2b.887a68",
        "type": "cloudantplus in",
        "z": "889b2901.b7a768",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "64316362.75742c"
            ]
        ]
    },
    {
        "id": "c3c7074f.491058",
        "type": "function",
        "z": "889b2901.b7a768",
        "name": "Get Old submission data",
        "func": "msg.original = {...msg.payload};\nmsg.payload = msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "9cd07a2b.887a68"
            ]
        ]
    },
    {
        "id": "50104f0d.6c598",
        "type": "function",
        "z": "889b2901.b7a768",
        "name": "",
        "func": "msg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "34bad8ab.474428",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Query",
        "func": "\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"prePupaeChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 160,
        "wires": [
            [
                "18385781.0fdea8"
            ]
        ]
    },
    {
        "id": "18385781.0fdea8",
        "type": "cloudantplus in",
        "z": "3869881b.e92898",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 570,
        "y": 160,
        "wires": [
            [
                "40ac7cd9.1d1ee4"
            ]
        ]
    },
    {
        "id": "40ac7cd9.1d1ee4",
        "type": "switch",
        "z": "3869881b.e92898",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 270,
        "y": 220,
        "wires": [
            [
                "47fea63f.8d43c8"
            ],
            [
                "4c21de97.99edb"
            ],
            [
                "a27b3553.a614c8"
            ]
        ]
    },
    {
        "id": "47fea63f.8d43c8",
        "type": "change",
        "z": "3869881b.e92898",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "preChamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 520,
        "y": 220,
        "wires": [
            [
                "330f05bb.7823ea"
            ]
        ]
    },
    {
        "id": "4c21de97.99edb",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 260,
        "wires": [
            [
                "b8555e52.89f6b"
            ]
        ]
    },
    {
        "id": "a27b3553.a614c8",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 320,
        "wires": [
            [
                "9e21902b.58faf"
            ]
        ]
    },
    {
        "id": "330f05bb.7823ea",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"pupationChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 220,
        "wires": [
            [
                "1a2f9e79.9c5692"
            ]
        ]
    },
    {
        "id": "b8555e52.89f6b",
        "type": "http response",
        "z": "3869881b.e92898",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 700,
        "y": 260,
        "wires": []
    },
    {
        "id": "9e21902b.58faf",
        "type": "http response",
        "z": "3869881b.e92898",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 700,
        "y": 320,
        "wires": []
    },
    {
        "id": "1a2f9e79.9c5692",
        "type": "cloudantplus in",
        "z": "3869881b.e92898",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 790,
        "y": 160,
        "wires": [
            [
                "9989263b.754ba8"
            ]
        ]
    },
    {
        "id": "9989263b.754ba8",
        "type": "switch",
        "z": "3869881b.e92898",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 220,
        "wires": [
            [
                "551e99ae.1ba198"
            ],
            [
                "911af2bb.893bf"
            ],
            [
                "c6bb1005.b7775"
            ]
        ]
    },
    {
        "id": "551e99ae.1ba198",
        "type": "change",
        "z": "3869881b.e92898",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1050,
        "y": 180,
        "wires": [
            [
                "3eec0ed3.5ca302"
            ]
        ]
    },
    {
        "id": "911af2bb.893bf",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 220,
        "wires": [
            [
                "4d00416b.6146f"
            ]
        ]
    },
    {
        "id": "c6bb1005.b7775",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 280,
        "wires": [
            [
                "e8450d37.6ab1c"
            ]
        ]
    },
    {
        "id": "3eec0ed3.5ca302",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"pupationRackID\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1230,
        "y": 180,
        "wires": [
            [
                "c17d96c8.af9278"
            ]
        ]
    },
    {
        "id": "4d00416b.6146f",
        "type": "http response",
        "z": "3869881b.e92898",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1280,
        "y": 220,
        "wires": []
    },
    {
        "id": "e8450d37.6ab1c",
        "type": "http response",
        "z": "3869881b.e92898",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1280,
        "y": 280,
        "wires": []
    },
    {
        "id": "c17d96c8.af9278",
        "type": "cloudantplus in",
        "z": "3869881b.e92898",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 1350,
        "y": 140,
        "wires": [
            [
                "38c09a24.b76a46"
            ]
        ]
    },
    {
        "id": "38c09a24.b76a46",
        "type": "switch",
        "z": "3869881b.e92898",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1410,
        "y": 200,
        "wires": [
            [
                "99cab0c1.55b74"
            ],
            [
                "14285d72.1510c3"
            ],
            [
                "aec149a0.b3b038"
            ]
        ]
    },
    {
        "id": "99cab0c1.55b74",
        "type": "change",
        "z": "3869881b.e92898",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1570,
        "y": 160,
        "wires": [
            [
                "b280b2e3.3f4f"
            ]
        ]
    },
    {
        "id": "14285d72.1510c3",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1610,
        "y": 200,
        "wires": [
            [
                "779a93bb.72b58c"
            ]
        ]
    },
    {
        "id": "aec149a0.b3b038",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1610,
        "y": 260,
        "wires": [
            [
                "a9ed99b5.093bc8"
            ]
        ]
    },
    {
        "id": "42ea77e.8baf388",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "",
        "func": "const preChamber = msg.preChamber;\nconst chamber = msg.chamber;\nconst chamberId = msg.original.pupationChamberId;\nconst rackId = msg.original.pupationRackID;\nconst oldChamberId = msg.oldData.pupationChamberId\nconst oldRackId = msg.oldData.pupationRackID\nconst rack = msg.rack;\nvar exceedCapacity = false;\nvar rackOccupied = false;\nvar chamberOccupied = false;\nvar availableNumber;\nvar notValid = false;\nvar inAnotherPupationChamber = false;\nvar inPupationChamber;\nif(chamber.options[chamberId].status == \"OCCUPIED\"){\n    chamberOccupied = true;\n}\nelse{\n    chamberOccupied = false;\n    \n    if(chamber.options[oldChamberId].rackIdList){\n        chamber.options[oldChamberId].rackIdList.splice(chamber.options[oldChamberId].rackIdList.indexOf(oldRackId),1)\n        chamber.options[oldChamberId].occupiedCapacity= chamber.options[oldChamberId].occupiedCapacity -1;\n    }\n    if(chamber.options[oldChamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[oldChamberId].status = \"OCCUPIED\"\n    }\n    else if(chamber.options[oldChamberId].occupiedCapacity <=0){\n        chamber.options[oldChamberId].occupiedCapacity = 0;\n         chamber.options[oldChamberId].status = \"AVAILABLE\"\n    }\n    else{\n        chamber.options[oldChamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n    \n    \n    \n    \n\n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList =[]\n    }\n    if(!chamber.options[chamberId].rackIdList.includes(rackId)){\n            chamber.options[chamberId].rackIdList.push(rackId)\n            chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n    }\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n}\n\n\nif(rack.options[rackId].pupationChamberId){\n    //add tray to this rack\n    if(rack.options[rackId].status == \"OCCUPIED\"){\n        rackOccupied = true;\n    }\n    else{\n        rackOccupied = false;\n        if(rack.options[oldRackId].batchIdList){\n           delete rack.options[oldRackId].batchIdList;\n        }\n        rack.options[oldRackId].occupiedCapacity = rack.options[oldRackId].occupiedCapacity -parseFloat(msg.oldData.trayCount);\n        if(rack.options[oldRackId].occupiedCapacity <= 0 ){\n            rack.options[oldRackId].occupiedCapacity = 0\n           rack.options[oldRackId].status = \"AVAILABLE\"\n        }\n        else if(rack.options[oldRackId].occupiedCapacity == rack.options[oldRackId].capacity){\n            rack.options[oldRackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[oldRackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n        \n        \n        // if(rack.options[rackId].pupationChamberId != chamberId){\n        //     inAnotherPupationChamber = true;\n        //     inPupationChamber = rack.options[rackId].pupationChamberId\n        // }\n        rack.options[rackId].pupationChamberId = chamberId;\n        if(!rack.options[rackId].batchIdList){\n           rack.options[rackId].batchIdList =[]\n        }\n        for(let batchId of msg.original.batchId){\n            if(!rack.options[rackId].batchIdList.includes(batchId)){\n                rack.options[rackId].batchIdList.push(batchId)\n            }\n        }\n        rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n        if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n            exceedCapacity = true\n            availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n        }\n        else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n            rack.options[rackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n    \n    }\n    \n}\nelse{\n    //not from prepupae chamber and not in pupation chamber\n    notValid = true;\n}\n    \n\n\n\nmsg.error = false;\nif(notValid){\n    msg.error = true;\n    msg.errMsg = \"The rack is not from PrePupae Chamber and not in Pupation Chamber.\"\n}\nelse if(inAnotherPupationChamber){\n    msg.error = true;\n    msg.errMsg = \"The rack is in another Pupation Chamber. Do you mean: \" + inPupationChamber;\n}\nelse if(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(rackOccupied && chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack and Chamber are occupied\";\n}\nelse if(rackOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack is occupied\";\n}\nelse if(chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Chamber is occupied\";\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.preChamber = preChamber;\nmsg.payload = [\"rack\", \"chamber\"]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1800,
        "y": 160,
        "wires": [
            [
                "6a15ad69.5b7b34"
            ]
        ]
    },
    {
        "id": "779a93bb.72b58c",
        "type": "http response",
        "z": "3869881b.e92898",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1800,
        "y": 200,
        "wires": []
    },
    {
        "id": "a9ed99b5.093bc8",
        "type": "http response",
        "z": "3869881b.e92898",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1800,
        "y": 260,
        "wires": []
    },
    {
        "id": "6a15ad69.5b7b34",
        "type": "switch",
        "z": "3869881b.e92898",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 160,
        "wires": [
            [
                "b280b2e3.3f4f"
            ],
            [
                "52a2f115.1c63"
            ]
        ]
    },
    {
        "id": "b280b2e3.3f4f",
        "type": "split",
        "z": "3869881b.e92898",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2010,
        "y": 100,
        "wires": [
            [
                "fd37f43a.2e5798"
            ]
        ]
    },
    {
        "id": "52a2f115.1c63",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2090,
        "y": 220,
        "wires": [
            [
                "6d47df86.37d2d"
            ]
        ]
    },
    {
        "id": "fd37f43a.2e5798",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2140,
        "y": 100,
        "wires": [
            [
                "700875c1.80243c"
            ]
        ]
    },
    {
        "id": "6d47df86.37d2d",
        "type": "http response",
        "z": "3869881b.e92898",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 2320,
        "y": 220,
        "wires": []
    },
    {
        "id": "700875c1.80243c",
        "type": "cloudantplus out",
        "z": "3869881b.e92898",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 2290,
        "y": 100,
        "wires": [
            [
                "6fa54ee6.662ee"
            ]
        ]
    },
    {
        "id": "6fa54ee6.662ee",
        "type": "join",
        "z": "3869881b.e92898",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 2430,
        "y": 100,
        "wires": [
            [
                "e7b1e39d.44a81"
            ]
        ]
    },
    {
        "id": "aca7db66.693738",
        "type": "change",
        "z": "3869881b.e92898",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2660,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "efd24139.9940f",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "",
        "func": "let query = {}\nquery.key = msg.payload._id\nmsg.original = {...msg.payload};\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 60,
        "wires": [
            [
                "f752e497.d4df08"
            ]
        ]
    },
    {
        "id": "f752e497.d4df08",
        "type": "cloudantplus in",
        "z": "3869881b.e92898",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "pupation-emergence-setup-id",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "71f450d3.77fdb"
            ]
        ]
    },
    {
        "id": "71f450d3.77fdb",
        "type": "switch",
        "z": "3869881b.e92898",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "b4e75e64.ce6b7"
            ],
            []
        ]
    },
    {
        "id": "b4e75e64.ce6b7",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "",
        "func": "msg.incomplete = msg.payload[0].value.incomplete\nmsg.incompleteEntry = msg.payload[0].value\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 40,
        "wires": [
            [
                "f7d5672f.d660d8"
            ]
        ]
    },
    {
        "id": "f7d5672f.d660d8",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Get Old submission data",
        "func": "msg.payload = msg.original._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 100,
        "wires": [
            [
                "2718c7b4.139e58"
            ]
        ]
    },
    {
        "id": "2718c7b4.139e58",
        "type": "cloudantplus in",
        "z": "3869881b.e92898",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 970,
        "y": 100,
        "wires": [
            [
                "f0856c40.a0c3f"
            ]
        ]
    },
    {
        "id": "f0856c40.a0c3f",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "",
        "func": "msg.oldData = {...msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 80,
        "wires": [
            [
                "aee552f3.42409"
            ]
        ]
    },
    {
        "id": "aee552f3.42409",
        "type": "switch",
        "z": "3869881b.e92898",
        "name": "",
        "property": "incomplete",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1270,
        "y": 80,
        "wires": [
            [
                "6b0c4076.7cc39"
            ],
            [
                "93c86a38.b83a88"
            ]
        ]
    },
    {
        "id": "6b0c4076.7cc39",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "",
        "func": "let errMsg =\"Process completed. \"\nlet constField = [{\n        name: \"batchId\",\n        errMsg: \"Batch Id\"\n    }, \n    {\n        name: \"pupationRackID\",\n        errMsg: \"Rack Id\"\n    }, \n    {\n        name:\"pupationChamberId\",\n        errMsg: \"Chamber Id\"\n    },\n    {\n        name:\"trayCount\",\n        errMsg: \"Tray Count\"\n    }];\nmsg.err = false;\nfor(let field of constField){\n    let fieldName = field.name;\n    if(Array.isArray(msg.oldData[fieldName])){\n        if(JSON.stringify(msg.oldData[fieldName]) !== JSON.stringify(msg.original[fieldName])){\n            msg.err = true;\n            if(errMsg === \"Process completed. \"){\n                errMsg = errMsg + field.errMsg \n            }\n            else{\n                errMsg = errMsg + \", \"+ field.errMsg \n            }\n        }\n    }\n    else if(msg.oldData[fieldName] !== msg.original[fieldName]){\n        msg.err = true;\n        if(errMsg === \"Process completed. \"){\n            errMsg = errMsg + field.errMsg \n        }\n        else{\n            errMsg = errMsg + \", \"+ field.errMsg \n        }\n       \n    }\n}\nmsg.errMsg = errMsg + \" cannot be changed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1460,
        "y": 40,
        "wires": [
            [
                "c9f91f98.91578"
            ]
        ]
    },
    {
        "id": "c9f91f98.91578",
        "type": "switch",
        "z": "3869881b.e92898",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1610,
        "y": 40,
        "wires": [
            [
                "aca7db66.693738"
            ],
            [
                "7f648bbb.a3a5a4"
            ]
        ]
    },
    {
        "id": "7f648bbb.a3a5a4",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1530,
        "y": 100,
        "wires": [
            [
                "5b936fda.c1ade"
            ]
        ]
    },
    {
        "id": "5b936fda.c1ade",
        "type": "http response",
        "z": "3869881b.e92898",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1780,
        "y": 100,
        "wires": []
    },
    {
        "id": "e7b1e39d.44a81",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "",
        "func": "let incomplete = msg.incompleteEntry;\nlet data = msg.original;\nlet dontSave = [\"_id\", \"_rev\"]\nfor(let key in incomplete){\n    if(data[key] && !dontSave.includes(key)){\n        incomplete[key] = data[key]\n    }\n}\nmsg.payload = incomplete;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2500,
        "y": 160,
        "wires": [
            [
                "90294204.2ad9c"
            ]
        ]
    },
    {
        "id": "90294204.2ad9c",
        "type": "cloudantplus out",
        "z": "3869881b.e92898",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 2650,
        "y": 160,
        "wires": [
            [
                "aca7db66.693738"
            ]
        ]
    },
    {
        "id": "93c86a38.b83a88",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "",
        "func": "let errMsg =\"Not Updated. \"\nlet constField = [{\n        name: \"batchId\",\n        errMsg: \"Batch Id\"\n    }, \n    {\n        name: \"pupationRackID\",\n        errMsg: \"Rack Id\"\n    }];\nmsg.err = false;\nfor(let field of constField){\n    let fieldName = field.name;\n    if(Array.isArray(msg.oldData[fieldName])){\n        if(JSON.stringify(msg.oldData[fieldName]) !== JSON.stringify(msg.original[fieldName])){\n            msg.err = true;\n            if(errMsg === \"Process completed. \"){\n                errMsg = errMsg + field.errMsg \n            }\n            else{\n                errMsg = errMsg + \", \"+ field.errMsg \n            }\n        }\n    }\n    else if(msg.oldData[fieldName] !== msg.original[fieldName]){\n        msg.err = true;\n        if(errMsg === \"Process completed. \"){\n            errMsg = errMsg + field.errMsg \n        }\n        else{\n            errMsg = errMsg + \", \"+ field.errMsg \n        }\n       \n    }\n}\nmsg.errMsg = errMsg + \" cannot be changed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 380,
        "wires": [
            [
                "b8d1f4a2.b733b8"
            ]
        ]
    },
    {
        "id": "b8d1f4a2.b733b8",
        "type": "switch",
        "z": "3869881b.e92898",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 380,
        "wires": [
            [
                "34bad8ab.474428"
            ],
            [
                "35a7b83e.46be48"
            ]
        ]
    },
    {
        "id": "35a7b83e.46be48",
        "type": "function",
        "z": "3869881b.e92898",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "dbdf46ad.76b9b8"
            ]
        ]
    },
    {
        "id": "dbdf46ad.76b9b8",
        "type": "http response",
        "z": "3869881b.e92898",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 440,
        "y": 440,
        "wires": []
    },
    {
        "id": "4842e228.c2039c",
        "type": "function",
        "z": "a87207ef.fd5e68",
        "name": "",
        "func": "msg.oldData = {...msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 80,
        "wires": [
            [
                "4043ab34.5c5614"
            ]
        ]
    },
    {
        "id": "4043ab34.5c5614",
        "type": "function",
        "z": "a87207ef.fd5e68",
        "name": "",
        "func": "let errMsg =\"Process completed. \"\nlet constField = [{\n        name: \"batchId\",\n        errMsg: \"Batch Id\"\n    }, \n    {\n        name: \"breedingNurserySetupRackId\",\n        errMsg: \"Rack Id\"\n    }, \n    {\n        name:\"nurseryTraysOutCount\",\n        errMsg: \"tray count\"\n    }];\nmsg.err = false;\nfor(let field of constField){\n    let fieldName = field.name;\n    if(Array.isArray(msg.oldData[fieldName])){\n        if(JSON.stringify(msg.oldData[fieldName]) !== JSON.stringify(msg.original[fieldName])){\n            msg.err = true;\n            if(errMsg === \"Process completed. \"){\n                errMsg = errMsg + field.errMsg \n            }\n            else{\n                errMsg = errMsg + \", \"+ field.errMsg \n            }\n        }\n    }\n    else if(msg.oldData[fieldName] !== msg.original[fieldName]){\n        msg.err = true;\n        if(errMsg === \"Process completed. \"){\n            errMsg = errMsg + field.errMsg \n        }\n        else{\n            errMsg = errMsg + \", \"+ field.errMsg \n        }\n       \n    }\n}\nmsg.errMsg = errMsg + \" cannot be changed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "c536da29.afaac8"
            ]
        ]
    },
    {
        "id": "c536da29.afaac8",
        "type": "switch",
        "z": "a87207ef.fd5e68",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 80,
        "wires": [
            [
                "596df90c.973b48"
            ],
            [
                "d22130ae.d5e54"
            ]
        ]
    },
    {
        "id": "d22130ae.d5e54",
        "type": "function",
        "z": "a87207ef.fd5e68",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 160,
        "wires": [
            [
                "61cdfaee.5269a4"
            ]
        ]
    },
    {
        "id": "61cdfaee.5269a4",
        "type": "http response",
        "z": "a87207ef.fd5e68",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1320,
        "y": 160,
        "wires": []
    },
    {
        "id": "61367c28.abec14",
        "type": "cloudantplus in",
        "z": "a87207ef.fd5e68",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "4842e228.c2039c"
            ]
        ]
    },
    {
        "id": "fa056cda.b49cb",
        "type": "function",
        "z": "a87207ef.fd5e68",
        "name": "Get Old submission data",
        "func": "msg.original = {...msg.payload};\nmsg.payload = msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "61367c28.abec14"
            ]
        ]
    },
    {
        "id": "596df90c.973b48",
        "type": "function",
        "z": "a87207ef.fd5e68",
        "name": "",
        "func": "msg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "825796d3.bc37f8",
        "type": "function",
        "z": "4bf465ff.30673c",
        "name": "",
        "func": "msg.oldData = {...msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 80,
        "wires": [
            [
                "f420a7e4.42cf28"
            ]
        ]
    },
    {
        "id": "f420a7e4.42cf28",
        "type": "function",
        "z": "4bf465ff.30673c",
        "name": "",
        "func": "let errMsg =\"Process completed. \"\nlet constField = [{\n        name: \"batchId\",\n        errMsg: \"Batch Id\"\n    }, \n    {\n        name: \"breedingGrowOutSetupRackId\",\n        errMsg: \"Rack Id\"\n    }, \n    {\n        name:\"growthChamberId\",\n        errMsg: \"Chamber Id\"\n    }];\nmsg.err = false;\nfor(let field of constField){\n    let fieldName = field.name;\n    if(Array.isArray(msg.oldData[fieldName])){\n        if(JSON.stringify(msg.oldData[fieldName]) !== JSON.stringify(msg.original[fieldName])){\n            msg.err = true;\n            if(errMsg === \"Process completed. \"){\n                errMsg = errMsg + field.errMsg \n            }\n            else{\n                errMsg = errMsg + \", \"+ field.errMsg \n            }\n        }\n    }\n    else if(msg.oldData[fieldName] !== msg.original[fieldName]){\n        msg.err = true;\n        if(errMsg === \"Process completed. \"){\n            errMsg = errMsg + field.errMsg \n        }\n        else{\n            errMsg = errMsg + \", \"+ field.errMsg \n        }\n       \n    }\n}\nmsg.errMsg = errMsg + \" cannot be changed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 80,
        "wires": [
            [
                "321fe289.9fb18e"
            ]
        ]
    },
    {
        "id": "321fe289.9fb18e",
        "type": "switch",
        "z": "4bf465ff.30673c",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 910,
        "y": 80,
        "wires": [
            [
                "3f77d4d5.c6784c"
            ],
            [
                "87fe1a83.fa7bd8"
            ]
        ]
    },
    {
        "id": "87fe1a83.fa7bd8",
        "type": "function",
        "z": "4bf465ff.30673c",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 160,
        "wires": [
            [
                "1dddc351.5ae54d"
            ]
        ]
    },
    {
        "id": "1dddc351.5ae54d",
        "type": "http response",
        "z": "4bf465ff.30673c",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1320,
        "y": 160,
        "wires": []
    },
    {
        "id": "de48c088.f85fd",
        "type": "cloudantplus in",
        "z": "4bf465ff.30673c",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "825796d3.bc37f8"
            ]
        ]
    },
    {
        "id": "8bbdc690.c58b98",
        "type": "function",
        "z": "4bf465ff.30673c",
        "name": "Get Old submission data",
        "func": "msg.original = {...msg.payload};\nmsg.payload = msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "de48c088.f85fd"
            ]
        ]
    },
    {
        "id": "3f77d4d5.c6784c",
        "type": "function",
        "z": "4bf465ff.30673c",
        "name": "",
        "func": "msg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "ae479c5c.6aab3",
        "type": "function",
        "z": "f4445896.32f858",
        "name": "proceed",
        "func": "let line = msg.req.params.line\nlet form = msg.req.params.form\nlet proceed = false\nlet allowed = {\n    'breeding': {\n        'nursery-setup': true,\n        'grow-out-setup': true,\n        'pupation-setup': true,\n        'pupation-emergence-setup-detail': true,\n        'pupation-setup-detail': true\n    },\n    'farming': {\n        'grow-out-setup': true\n    }\n}\n\nif (allowed[line] && allowed[line][form]) {\n    proceed = true\n}\n\nmsg.topic = \"masterData\"\nmsg.proceed = proceed\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 120,
        "wires": [
            [
                "de68bc5.a4be54"
            ]
        ]
    },
    {
        "id": "de68bc5.a4be54",
        "type": "switch",
        "z": "f4445896.32f858",
        "name": "",
        "property": "proceed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 370,
        "y": 120,
        "wires": [
            [
                "b0c9624f.2f0a1"
            ],
            [
                "da4b7371.dfb1e"
            ]
        ]
    },
    {
        "id": "7e7873b0.7efabc",
        "type": "link in",
        "z": "f4445896.32f858",
        "name": "",
        "links": [
            "da4b7371.dfb1e",
            "10fda2b6.c6db9d",
            "858727a.c4403d8",
            "3b3eaa15.c00086",
            "e11fd337.66646",
            "b44656e2.b79678"
        ],
        "x": 675,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "da4b7371.dfb1e",
        "type": "link out",
        "z": "f4445896.32f858",
        "name": "",
        "links": [
            "7e7873b0.7efabc",
            "bcc04085.4e705"
        ],
        "x": 475,
        "y": 140,
        "wires": []
    },
    {
        "id": "45334815.410d68",
        "type": "link in",
        "z": "f4445896.32f858",
        "name": "",
        "links": [
            "b0c9624f.2f0a1"
        ],
        "x": 75,
        "y": 260,
        "wires": [
            [
                "3aa54842.b157f8"
            ]
        ]
    },
    {
        "id": "b0c9624f.2f0a1",
        "type": "link out",
        "z": "f4445896.32f858",
        "name": "",
        "links": [
            "45334815.410d68",
            "b726bb06.85adf8",
            "f79be891.e37a58",
            "10a5932d.f921ad"
        ],
        "x": 475,
        "y": 100,
        "wires": []
    },
    {
        "id": "3aa54842.b157f8",
        "type": "switch",
        "z": "f4445896.32f858",
        "name": "",
        "property": "req.params.line",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "breeding",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 260,
        "wires": [
            [
                "dd0ceb0.a4f8618"
            ]
        ]
    },
    {
        "id": "dd0ceb0.a4f8618",
        "type": "switch",
        "z": "f4445896.32f858",
        "name": "",
        "property": "req.params.form",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nursery-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-setup-detail",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 350,
        "y": 260,
        "wires": [
            [
                "e8c9cedd.f4f89"
            ],
            [
                "e8c9cedd.f4f89"
            ],
            [
                "e8c9cedd.f4f89"
            ]
        ]
    },
    {
        "id": "a3ddcd9f.8d95a",
        "type": "comment",
        "z": "f4445896.32f858",
        "name": "breeding nursery-setup/pupation-setup",
        "info": "",
        "x": 310,
        "y": 220,
        "wires": []
    },
    {
        "id": "e8c9cedd.f4f89",
        "type": "moment",
        "z": "f4445896.32f858",
        "name": "",
        "topic": "setupDateId",
        "input": "payload.timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "setupDateId",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 510,
        "y": 260,
        "wires": [
            [
                "4a879261.4e8e8c"
            ]
        ]
    },
    {
        "id": "4a879261.4e8e8c",
        "type": "function",
        "z": "f4445896.32f858",
        "name": "",
        "func": "let payload = msg.payload\n\npayload['setupDateId'] = msg.setupDateId\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 260,
        "wires": [
            [
                "10fda2b6.c6db9d"
            ]
        ]
    },
    {
        "id": "10fda2b6.c6db9d",
        "type": "link out",
        "z": "f4445896.32f858",
        "name": "",
        "links": [
            "7e7873b0.7efabc"
        ],
        "x": 795,
        "y": 260,
        "wires": []
    },
    {
        "id": "b726bb06.85adf8",
        "type": "link in",
        "z": "f4445896.32f858",
        "name": "",
        "links": [
            "b0c9624f.2f0a1"
        ],
        "x": 75,
        "y": 360,
        "wires": [
            [
                "75a0bd1c.974114"
            ]
        ]
    },
    {
        "id": "75a0bd1c.974114",
        "type": "switch",
        "z": "f4445896.32f858",
        "name": "",
        "property": "req.params.line",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "breeding",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "farming",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 360,
        "wires": [
            [
                "65307b50.070794"
            ],
            [
                "65307b50.070794"
            ]
        ]
    },
    {
        "id": "65307b50.070794",
        "type": "switch",
        "z": "f4445896.32f858",
        "name": "",
        "property": "req.params.form",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "grow-out-setup",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 360,
        "wires": [
            [
                "6423e339.516efc"
            ]
        ]
    },
    {
        "id": "9d492d1c.167d",
        "type": "comment",
        "z": "f4445896.32f858",
        "name": "breeding/farming grow-out-setup",
        "info": "",
        "x": 290,
        "y": 320,
        "wires": []
    },
    {
        "id": "6423e339.516efc",
        "type": "moment",
        "z": "f4445896.32f858",
        "name": "",
        "topic": "setupDateId",
        "input": "payload.timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "setupDateId",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 510,
        "y": 360,
        "wires": [
            [
                "509dc754.9e4de8"
            ]
        ]
    },
    {
        "id": "509dc754.9e4de8",
        "type": "function",
        "z": "f4445896.32f858",
        "name": "",
        "func": "let payload = msg.payload\n\npayload['setupDateId'] = msg.setupDateId\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 360,
        "wires": [
            [
                "858727a.c4403d8"
            ]
        ]
    },
    {
        "id": "858727a.c4403d8",
        "type": "link out",
        "z": "f4445896.32f858",
        "name": "",
        "links": [
            "7e7873b0.7efabc"
        ],
        "x": 795,
        "y": 360,
        "wires": []
    },
    {
        "id": "10a5932d.f921ad",
        "type": "link in",
        "z": "f4445896.32f858",
        "name": "",
        "links": [
            "b0c9624f.2f0a1"
        ],
        "x": 75,
        "y": 460,
        "wires": [
            [
                "20617815.446e58"
            ]
        ]
    },
    {
        "id": "20617815.446e58",
        "type": "switch",
        "z": "f4445896.32f858",
        "name": "",
        "property": "req.params.line",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "breeding",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 210,
        "y": 460,
        "wires": [
            [
                "5e1a4cde.5f64c4"
            ]
        ]
    },
    {
        "id": "5e1a4cde.5f64c4",
        "type": "switch",
        "z": "f4445896.32f858",
        "name": "",
        "property": "req.params.form",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "pupation-emergence-setup-detail",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 350,
        "y": 460,
        "wires": [
            [
                "cf5a7b31.e62308"
            ]
        ]
    },
    {
        "id": "99aa2f0.b9b76d",
        "type": "comment",
        "z": "f4445896.32f858",
        "name": "breeding nursery-setup/pupation-setup",
        "info": "",
        "x": 310,
        "y": 420,
        "wires": []
    },
    {
        "id": "cf5a7b31.e62308",
        "type": "moment",
        "z": "f4445896.32f858",
        "name": "",
        "topic": "setupDateId",
        "input": "payload.timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "setupDateId",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 510,
        "y": 460,
        "wires": [
            [
                "f15e3744.7f8838"
            ]
        ]
    },
    {
        "id": "f15e3744.7f8838",
        "type": "function",
        "z": "f4445896.32f858",
        "name": "",
        "func": "let payload = msg.payload\n\npayload['setupDateId'] = msg.setupDateId\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 460,
        "wires": [
            [
                "b44656e2.b79678"
            ]
        ]
    },
    {
        "id": "b44656e2.b79678",
        "type": "link out",
        "z": "f4445896.32f858",
        "name": "",
        "links": [
            "7e7873b0.7efabc"
        ],
        "x": 795,
        "y": 460,
        "wires": []
    },
    {
        "id": "cb2e2bc.b5c02d8",
        "type": "moment",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "5",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "expectedBatchId",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 260,
        "y": 140,
        "wires": [
            [
                "9a843322.fe1cb"
            ]
        ]
    },
    {
        "id": "9a843322.fe1cb",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "func": "msg.payload.expectedBatchId = msg.expectedBatchId;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 300,
        "y": 200,
        "wires": [
            [
                "91a53d4f.3aab4"
            ]
        ]
    },
    {
        "id": "9cfa9c15.fb12c",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "Query",
        "func": "\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"breedingGrowOutSetupRackId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "5defe2b7.c4ad4c"
            ]
        ]
    },
    {
        "id": "5defe2b7.c4ad4c",
        "type": "cloudantplus in",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 630,
        "y": 200,
        "wires": [
            [
                "8bce594.4b3a6a8"
            ]
        ]
    },
    {
        "id": "8bce594.4b3a6a8",
        "type": "switch",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 330,
        "y": 260,
        "wires": [
            [
                "a8bb67fc.27d978"
            ],
            [
                "3b891f37.e211c"
            ],
            [
                "2a040373.42604c"
            ]
        ]
    },
    {
        "id": "a8bb67fc.27d978",
        "type": "change",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 570,
        "y": 260,
        "wires": [
            [
                "e2c089e6.b87a48"
            ]
        ]
    },
    {
        "id": "3b891f37.e211c",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 300,
        "wires": [
            [
                "54eb2339.0ab0bc"
            ]
        ]
    },
    {
        "id": "2a040373.42604c",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 360,
        "wires": [
            [
                "e6bab2a1.3bcc4"
            ]
        ]
    },
    {
        "id": "e2c089e6.b87a48",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"growthChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 260,
        "wires": [
            [
                "9e037259.07723"
            ]
        ]
    },
    {
        "id": "54eb2339.0ab0bc",
        "type": "http response",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 780,
        "y": 300,
        "wires": []
    },
    {
        "id": "e6bab2a1.3bcc4",
        "type": "http response",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 800,
        "y": 360,
        "wires": []
    },
    {
        "id": "9e037259.07723",
        "type": "cloudantplus in",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 870,
        "y": 200,
        "wires": [
            [
                "94b98bd8.6c3528"
            ]
        ]
    },
    {
        "id": "94b98bd8.6c3528",
        "type": "switch",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 950,
        "y": 260,
        "wires": [
            [
                "10c53e35.eec052"
            ],
            [
                "91a9d02c.18a62"
            ],
            [
                "f0f792e3.45814"
            ]
        ]
    },
    {
        "id": "10c53e35.eec052",
        "type": "change",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 220,
        "wires": [
            [
                "4a86d7c7.2582a8"
            ]
        ]
    },
    {
        "id": "91a9d02c.18a62",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1190,
        "y": 300,
        "wires": [
            [
                "db453de7.7e272"
            ]
        ]
    },
    {
        "id": "f0f792e3.45814",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1190,
        "y": 360,
        "wires": [
            [
                "6f71c0c.5162e4"
            ]
        ]
    },
    {
        "id": "d81e0d72.a8e04",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "func": "const chamberId = msg.original.growthChamberId;\nconst oldChamberId = msg.oldData.growthChamberId;\nconst rack = msg.rack;\nconst rackId = msg.original.breedingGrowOutSetupRackId;\nconst oldRackId = msg.oldData.breedingGrowOutSetupRackId;\nconst chamber = msg.chamber;\nvar rackOccupied;\nvar chamberOccupied;\n\nif(chamberId !== oldChamberId && chamber.options[chamberId].status == \"OCCUPIED\"){\n    chamberOccupied = true;\n}\nelse{\n    chamberOccupied = false;\n\n    if(!chamber.options[oldChamberId].rackIdList){\n        chamber.options[oldChamberId].rackIdList =[]\n    }\n    if(chamber.options[oldChamberId].rackIdList.includes(oldRackId)) {\n        chamber.options[oldChamberId].rackIdList = chamber.options[oldChamberId].rackIdList.filter(_rackId => _rackId !== oldRackId);\n        // delete chamber.options[oldChamberId].rackIdList[oldRackId];\n    }\n    \n    if(oldRackId == rackId) {\n        rack.options[rackId].setupDateId = \"\"\n    }\n    \n    chamber.options[oldChamberId].occupiedCapacity= chamber.options[oldChamberId].occupiedCapacity -1 < 0? 0:chamber.options[oldChamberId].occupiedCapacity -1;\n    if(chamber.options[oldChamberId].occupiedCapacity == chamber.options[oldChamberId].capacity){\n        chamber.options[oldChamberId].status = \"OCCUPIED\"\n    }\n    else if(chamber.options[oldChamberId].occupiedCapacity == 0){\n        chamber.options[oldChamberId].status = \"AVAILABLE\"\n    }\n    else{\n        chamber.options[oldChamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n    \n        \n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList = []\n    }\n    \n    chamber.options[chamberId].rackIdList.push(rackId);\n\n    \n    chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n        else if(chamber.options[chamberId].occupiedCapacity == 0){\n        chamber.options[chamberId].status = \"AVAILABLE\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n}\n\n\nif(rackId !== oldRackId && rack.options[rackId].status== \"OCCUPIED\"){\n    rackOccupied = true;\n}\nelse{\n    rackOccupied = false;\n    \n    rack.options[oldRackId].status = \"AVAILABLE\"\n    \n    rack.options[rackId].status = \"OCCUPIED\"\n    // if(!rack.options[rackId].batchIdList){\n    //     rack.options[rackId].batchIdList ={}\n    // }\n    \n    // if(rack.options[oldRackId].batchIdList){\n    //     delete rack.options[oldRackId].batchIdList\n    // }\n    \n    // rack.options[rackId].batchIdList = msg.original.batchId\n    \n    if(!rack.options[rackId].setupDateId){\n       rack.options[rackId].setupDateId = \"\"\n    }\n    rack.options[rackId].setupDateId = msg.setupDateId\n    \n    if(!rack.options[rackId].growthChamberId){\n        rack.options[rackId].growthChamberId = {}\n    }\n    if(rack.options[oldRackId].growthChamberId ){\n       delete rack.options[oldRackId].growthChamberId  \n    }\n    \n    rack.options[rackId].growthChamberId = msg.original.growthChamberId\n}\nmsg.occupied = false;\nif(rackOccupied && chamberOccupied){\n    msg.errorMsg = \"Rack and Chamber are occupied\";\n    msg.occupied = true;\n}\nelse if(rackOccupied){\n    msg.errorMsg = \"Rack is occupied\";\n    msg.occupied = true;\n}\nelse if(chamberOccupied){\n    msg.errorMsg = \"Chamber is occupied\";\n    msg.occupied = true;\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2020,
        "y": 220,
        "wires": [
            [
                "8cd5faa3.429528"
            ]
        ]
    },
    {
        "id": "db453de7.7e272",
        "type": "http response",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1400,
        "y": 300,
        "wires": []
    },
    {
        "id": "6f71c0c.5162e4",
        "type": "http response",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1400,
        "y": 360,
        "wires": []
    },
    {
        "id": "8cd5faa3.429528",
        "type": "switch",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "property": "occupied",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 2170,
        "y": 220,
        "wires": [
            [
                "da49e2a0.fc389"
            ],
            [
                "c5256527.ad8748"
            ]
        ]
    },
    {
        "id": "da49e2a0.fc389",
        "type": "split",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 2230,
        "y": 160,
        "wires": [
            [
                "eb0333e8.f474a"
            ]
        ]
    },
    {
        "id": "c5256527.ad8748",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "Generate error message (Rack Occupied)",
        "func": "msg.payload = {\n    \"message\": msg.errorMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2380,
        "y": 300,
        "wires": [
            [
                "f0fab3bd.c8ea"
            ]
        ]
    },
    {
        "id": "eb0333e8.f474a",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2360,
        "y": 160,
        "wires": [
            [
                "80f2f736.960248"
            ]
        ]
    },
    {
        "id": "f0fab3bd.c8ea",
        "type": "http response",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 2660,
        "y": 300,
        "wires": []
    },
    {
        "id": "80f2f736.960248",
        "type": "cloudantplus out",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 2530,
        "y": 160,
        "wires": [
            [
                "dd3e815a.90bd6"
            ]
        ]
    },
    {
        "id": "dd3e815a.90bd6",
        "type": "join",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 2670,
        "y": 160,
        "wires": [
            [
                "ed0dcaa4.bc97d8"
            ]
        ]
    },
    {
        "id": "d39e31c.eeaa4d",
        "type": "cloudantplus in",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 750,
        "y": 140,
        "wires": [
            [
                "cb78b1f5.12771"
            ]
        ]
    },
    {
        "id": "91a53d4f.3aab4",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "Get Old submission data",
        "func": "msg.original = msg.payload;\nmsg.payload = msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 140,
        "wires": [
            [
                "d39e31c.eeaa4d"
            ]
        ]
    },
    {
        "id": "f42795ce.d66c78",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "func": "let query = {}\nquery.key = msg.payload._id\nmsg.original = {...msg.payload};\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 80,
        "wires": [
            [
                "fd781afb.3fa748"
            ]
        ]
    },
    {
        "id": "fd781afb.3fa748",
        "type": "cloudantplus in",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "grow-out-setup-id",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "8ba8f2e5.04b8f"
            ]
        ]
    },
    {
        "id": "498a41c.89c6cc",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "func": "msg.incomplete = msg.payload[0].value.incomplete;\nmsg.incompleteEntry = msg.payload[0].value;\nmsg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 60,
        "wires": [
            [
                "cb2e2bc.b5c02d8"
            ]
        ]
    },
    {
        "id": "8ba8f2e5.04b8f",
        "type": "switch",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 80,
        "wires": [
            [
                "498a41c.89c6cc"
            ],
            []
        ]
    },
    {
        "id": "a6c20024.1d98c",
        "type": "switch",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "property": "incomplete",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1050,
        "y": 120,
        "wires": [
            [
                "22c4b9c6.029406"
            ],
            [
                "9cfa9c15.fb12c"
            ]
        ]
    },
    {
        "id": "22c4b9c6.029406",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "func": "let errMsg =\"Process completed. \"\nlet constField = [{\n        name: \"batchId\",\n        errMsg: \"Batch Id\"\n    }, \n    {\n        name: \"breedingGrowOutSetupRackId\",\n        errMsg: \"Rack Id\"\n    }, \n    {\n        name:\"growthChamberId\",\n        errMsg: \"Chamber Id\"\n    }];\nmsg.err = false;\nfor(let field of constField){\n    let fieldName = field.name;\n    if(Array.isArray(msg.oldData[fieldName])){\n        if(JSON.stringify(msg.oldData[fieldName]) !== JSON.stringify(msg.original[fieldName])){\n            msg.err = true;\n            if(errMsg === \"Process completed. \"){\n                errMsg = errMsg + field.errMsg \n            }\n            else{\n                errMsg = errMsg + \", \"+ field.errMsg \n            }\n        }\n    }\n    else if(msg.oldData[fieldName] !== msg.original[fieldName]){\n        msg.err = true;\n        if(errMsg === \"Process completed. \"){\n            errMsg = errMsg + field.errMsg \n        }\n        else{\n            errMsg = errMsg + \", \"+ field.errMsg \n        }\n       \n    }\n}\nmsg.errMsg = errMsg + \" cannot be changed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 60,
        "wires": [
            [
                "8a318c23.4e42b"
            ]
        ]
    },
    {
        "id": "8a318c23.4e42b",
        "type": "switch",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1370,
        "y": 60,
        "wires": [
            [
                "afda572f.9120c8"
            ],
            [
                "f773b166.7b7b4"
            ]
        ]
    },
    {
        "id": "f773b166.7b7b4",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1290,
        "y": 120,
        "wires": [
            [
                "6668ec3b.3ebed4"
            ]
        ]
    },
    {
        "id": "6668ec3b.3ebed4",
        "type": "http response",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1620,
        "y": 120,
        "wires": []
    },
    {
        "id": "cb78b1f5.12771",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "func": "msg.oldData = {...msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 920,
        "y": 120,
        "wires": [
            [
                "a6c20024.1d98c"
            ]
        ]
    },
    {
        "id": "ed0dcaa4.bc97d8",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "func": "let incomplete = msg.incompleteEntry;\nlet data = msg.original;\nlet dontSave = [\"_id\", \"_rev\"]\nfor(let key in incomplete){\n    if(data[key] && !dontSave.includes(key)){\n        incomplete[key] = data[key]\n    }\n}\nmsg.payload = incomplete;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2800,
        "y": 160,
        "wires": [
            [
                "c11be1c7.4ff96"
            ]
        ]
    },
    {
        "id": "c11be1c7.4ff96",
        "type": "cloudantplus out",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 2950,
        "y": 160,
        "wires": [
            [
                "afda572f.9120c8"
            ]
        ]
    },
    {
        "id": "afda572f.9120c8",
        "type": "change",
        "z": "3b1bcef5.c78bb2",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3120,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "de1a182f.aaaef8",
        "type": "function",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "func": "const chamberId = msg.original.growthChamberId;\nconst oldChamberId = msg.oldData.growthChamberId;\nconst rack = msg.rack;\nconst rackId = msg.original.breedingGrowOutSetupRackId;\nconst oldRackId = msg.oldData.breedingGrowOutSetupRackId;\nconst chamber = msg.chamber;\nvar rackOccupied;\nvar chamberOccupied;\n\nif(chamberId !== oldChamberId && chamber.options[chamberId].status == \"OCCUPIED\"){\n    chamberOccupied = true;\n}\nelse{\n    chamberOccupied = false;\n\n    if(!chamber.options[oldChamberId].rackIdList){\n        chamber.options[oldChamberId].rackIdList ={}\n    }\n    if(chamber.options[oldChamberId].rackIdList[oldRackId]) {\n        delete chamber.options[oldChamberId].rackIdList[oldRackId];\n    }\n    \n    chamber.options[oldChamberId].occupiedCapacity= chamber.options[oldChamberId].occupiedCapacity -1 < 0? 0:chamber.options[oldChamberId].occupiedCapacity -1;\n    if(chamber.options[oldChamberId].occupiedCapacity == chamber.options[oldChamberId].capacity){\n        chamber.options[oldChamberId].status = \"OCCUPIED\"\n    }\n    else if(chamber.options[oldChamberId].occupiedCapacity == 0){\n        chamber.options[oldChamberId].status = \"AVAILABLE\"\n    }\n    else{\n        chamber.options[oldChamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n    \n        \n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList ={}\n    }\n    \n    chamber.options[chamberId].rackIdList[rackId] = \n    {\n        label: rack.options[rackId].label,\n        batchIdList: msg.original.batchId\n    }\n\n    \n    chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n        else if(chamber.options[chamberId].occupiedCapacity == 0){\n        chamber.options[chamberId].status = \"AVAILABLE\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n}\n\n\nif(rackId !== oldRackId && rack.options[rackId].status== \"OCCUPIED\"){\n    rackOccupied = true;\n}\nelse{\n    rackOccupied = false;\n    \n    rack.options[oldRackId].status = \"AVAILABLE\"\n    \n    rack.options[rackId].status = \"OCCUPIED\"\n    if(!rack.options[rackId].batchIdList){\n        rack.options[rackId].batchIdList ={}\n    }\n    \n    if(rack.options[oldRackId].batchIdList){\n        delete rack.options[oldRackId].batchIdList\n    }\n    \n    rack.options[rackId].batchIdList = msg.original.batchId\n    if(!rack.options[rackId].growthChamberId){\n        rack.options[rackId].growthChamberId = {}\n    }\n    if(rack.options[oldRackId].growthChamberId ){\n       delete rack.options[oldRackId].growthChamberId  \n    }\n    \n    rack.options[rackId].growthChamberId = msg.original.growthChamberId\n}\nmsg.occupied = false;\nif(rackOccupied && chamberOccupied){\n    msg.errorMsg = \"Rack and Chamber are occupied\";\n    msg.occupied = true;\n}\nelse if(rackOccupied){\n    msg.errorMsg = \"Rack is occupied\";\n    msg.occupied = true;\n}\nelse if(chamberOccupied){\n    msg.errorMsg = \"Chamber is occupied\";\n    msg.occupied = true;\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2020,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "f26e54b9.024e58",
        "type": "comment",
        "z": "3b1bcef5.c78bb2",
        "name": "backup",
        "info": "",
        "x": 2010,
        "y": 320,
        "wires": []
    },
    {
        "id": "4a86d7c7.2582a8",
        "type": "change",
        "z": "3b1bcef5.c78bb2",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "oriPayload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 220,
        "wires": [
            [
                "bcf5df0a.a3ee4"
            ]
        ]
    },
    {
        "id": "bcf5df0a.a3ee4",
        "type": "subflow:f4445896.32f858",
        "z": "3b1bcef5.c78bb2",
        "name": "",
        "env": [],
        "x": 1600,
        "y": 220,
        "wires": [
            [
                "d39bc84b.fddb58"
            ]
        ]
    },
    {
        "id": "d39bc84b.fddb58",
        "type": "change",
        "z": "3b1bcef5.c78bb2",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "oriPayload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1840,
        "y": 220,
        "wires": [
            [
                "d81e0d72.a8e04"
            ]
        ]
    },
    {
        "id": "e53ca944.8a5ac8",
        "type": "switch",
        "z": "da75c902.1b7f18",
        "name": "process action?",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "END",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 380,
        "y": 160,
        "wires": [
            [
                "2e2741ef.1b46ce"
            ],
            [
                "857218f.71cc3e8"
            ],
            [
                "896c22a1.8e1e8"
            ]
        ]
    },
    {
        "id": "adbb7925.4bbb58",
        "type": "switch",
        "z": "da75c902.1b7f18",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 720,
        "wires": [
            [
                "b3b26ae5.c1c8a8"
            ],
            [
                "b52e69fb.9e0d78"
            ],
            [
                "89cdc949.2290e8"
            ]
        ]
    },
    {
        "id": "b52e69fb.9e0d78",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 720,
        "wires": [
            [
                "98b59900.a855d8"
            ]
        ]
    },
    {
        "id": "98b59900.a855d8",
        "type": "http response",
        "z": "da75c902.1b7f18",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 720,
        "wires": []
    },
    {
        "id": "89cdc949.2290e8",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not found'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 760,
        "wires": [
            [
                "48c57eb4.31874"
            ]
        ]
    },
    {
        "id": "48c57eb4.31874",
        "type": "http response",
        "z": "da75c902.1b7f18",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 760,
        "wires": []
    },
    {
        "id": "b3b26ae5.c1c8a8",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\n\n\ndata['end_updated_date'] = new Date()\ndata['end_timestamp'] = msg.original.timestamp\ndata['selectProcess'] = msg.original.selectProcess\n\n\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 680,
        "wires": [
            [
                "69facf25.b152f"
            ]
        ]
    },
    {
        "id": "69facf25.b152f",
        "type": "cloudantplus out",
        "z": "da75c902.1b7f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 850,
        "y": 680,
        "wires": [
            [
                "8e51465b.76b948"
            ]
        ]
    },
    {
        "id": "b8e771c1.60b55",
        "type": "link in",
        "z": "da75c902.1b7f18",
        "name": "",
        "links": [
            "857218f.71cc3e8"
        ],
        "x": 195,
        "y": 600,
        "wires": [
            [
                "afd5aeed.098ce"
            ]
        ]
    },
    {
        "id": "857218f.71cc3e8",
        "type": "link out",
        "z": "da75c902.1b7f18",
        "name": "from check out",
        "links": [
            "b8e771c1.60b55"
        ],
        "x": 575,
        "y": 200,
        "wires": []
    },
    {
        "id": "e7bcf6ae.324078",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\n\n\n// data['username'] = msg.protengaUser.username\ndata['start_updated_date'] = new Date()\ndata['start_timestamp'] = msg.original.timestamp\ndata['selectProcess'] = msg.original.selectProcess\n\n\n\nmsg.payload = {...data};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 460,
        "wires": [
            [
                "feb36a22.b2e228",
                "f6da1bee.35da78"
            ]
        ]
    },
    {
        "id": "feb36a22.b2e228",
        "type": "cloudantplus out",
        "z": "da75c902.1b7f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 830,
        "y": 460,
        "wires": [
            [
                "8e51465b.76b948"
            ]
        ]
    },
    {
        "id": "37d9000.b0c1e",
        "type": "switch",
        "z": "da75c902.1b7f18",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 500,
        "wires": [
            [
                "e7bcf6ae.324078"
            ],
            [
                "38ea0b16.de51c4"
            ],
            [
                "23c3b394.4eb94c"
            ]
        ]
    },
    {
        "id": "38ea0b16.de51c4",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 500,
        "wires": [
            [
                "6ae38990.300738"
            ]
        ]
    },
    {
        "id": "6ae38990.300738",
        "type": "http response",
        "z": "da75c902.1b7f18",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 500,
        "wires": []
    },
    {
        "id": "2e2741ef.1b46ce",
        "type": "link out",
        "z": "da75c902.1b7f18",
        "name": "from check in",
        "links": [
            "f7c0cad4.17eb58"
        ],
        "x": 575,
        "y": 160,
        "wires": []
    },
    {
        "id": "f7c0cad4.17eb58",
        "type": "link in",
        "z": "da75c902.1b7f18",
        "name": "",
        "links": [
            "2e2741ef.1b46ce"
        ],
        "x": 195,
        "y": 380,
        "wires": [
            [
                "dbc18ae9.e24a48"
            ]
        ]
    },
    {
        "id": "896c22a1.8e1e8",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'That action was not defined.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 220,
        "wires": [
            [
                "535c405c.8dd27"
            ]
        ]
    },
    {
        "id": "535c405c.8dd27",
        "type": "http response",
        "z": "da75c902.1b7f18",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 420,
        "y": 280,
        "wires": []
    },
    {
        "id": "4e2cb8e.f1d1448",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "",
        "func": "msg.original = {...msg.payload}\nmsg.payload = msg.payload._id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "fb9c785b.c80818"
            ]
        ]
    },
    {
        "id": "fb9c785b.c80818",
        "type": "cloudantplus in",
        "z": "da75c902.1b7f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "85541ef4.d0512"
            ]
        ]
    },
    {
        "id": "85541ef4.d0512",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "",
        "func": "msg.err = false;\nif(msg.payload.action !== msg.original.action){\n    msg.err = true;\n    msg.errMsg = \"Action cannot be changed\"\n}\nif(msg.payload.selectProcess !== msg.original.selectProcess){\n    msg.err = true;\n    msg.errMsg = \"Process cannot be changed\"\n}\nmsg.payload = {...msg.original};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 760,
        "y": 40,
        "wires": [
            [
                "4da3a067.8a4f7"
            ]
        ]
    },
    {
        "id": "4da3a067.8a4f7",
        "type": "switch",
        "z": "da75c902.1b7f18",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 100,
        "wires": [
            [
                "7807f357.b6a69c"
            ],
            [
                "e53ca944.8a5ac8"
            ]
        ]
    },
    {
        "id": "30bfeb89.e11fa4",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 380,
        "wires": [
            [
                "37d9000.b0c1e"
            ]
        ]
    },
    {
        "id": "9fa13324.12785",
        "type": "cloudantplus in",
        "z": "da75c902.1b7f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "process-incomplete",
        "index": "process-incomplete-start",
        "x": 550,
        "y": 380,
        "wires": [
            [
                "30bfeb89.e11fa4",
                "d177a6bd.3ef3c8"
            ]
        ]
    },
    {
        "id": "dbc18ae9.e24a48",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "set process type",
        "func": "msg.original = {...msg.payload}\nmsg.payload = {\"key\": msg.payload._id}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 380,
        "wires": [
            [
                "9fa13324.12785"
            ]
        ]
    },
    {
        "id": "23c3b394.4eb94c",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not found.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 540,
        "wires": [
            [
                "fcd62e8b.d075b"
            ]
        ]
    },
    {
        "id": "fcd62e8b.d075b",
        "type": "http response",
        "z": "da75c902.1b7f18",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 540,
        "wires": []
    },
    {
        "id": "afd5aeed.098ce",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "set process type",
        "func": "msg.original = {...msg.payload}\nmsg.payload = {\"key\": msg.payload._id}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 600,
        "wires": [
            [
                "21c23140.379c8e"
            ]
        ]
    },
    {
        "id": "21c23140.379c8e",
        "type": "cloudantplus in",
        "z": "da75c902.1b7f18",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "process-incomplete",
        "index": "process-incomplete-end",
        "x": 550,
        "y": 600,
        "wires": [
            [
                "ec6d34c5.096ae8"
            ]
        ]
    },
    {
        "id": "ec6d34c5.096ae8",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 600,
        "wires": [
            [
                "adbb7925.4bbb58"
            ]
        ]
    },
    {
        "id": "7807f357.b6a69c",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: msg.errMsg\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 100,
        "wires": [
            [
                "4930c15d.25c2"
            ]
        ]
    },
    {
        "id": "4930c15d.25c2",
        "type": "http response",
        "z": "da75c902.1b7f18",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1060,
        "y": 100,
        "wires": []
    },
    {
        "id": "f6da1bee.35da78",
        "type": "debug",
        "z": "da75c902.1b7f18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 400,
        "wires": []
    },
    {
        "id": "d177a6bd.3ef3c8",
        "type": "debug",
        "z": "da75c902.1b7f18",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 740,
        "y": 340,
        "wires": []
    },
    {
        "id": "8e51465b.76b948",
        "type": "function",
        "z": "da75c902.1b7f18",
        "name": "",
        "func": "msg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "973c9445.149f58",
        "type": "switch",
        "z": "e98ab834.68c228",
        "name": "attendance action?",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "CHECK_IN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CHECK_OUT",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 390,
        "y": 160,
        "wires": [
            [
                "2f2d5eef.821412"
            ],
            [
                "ad119354.96b57"
            ],
            [
                "778a6eff.a0ed7"
            ]
        ]
    },
    {
        "id": "9aa0fe59.0110a",
        "type": "switch",
        "z": "e98ab834.68c228",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 720,
        "wires": [
            [
                "a2c98ef.47fe67"
            ],
            [
                "e7cc7ee9.5f3ee"
            ],
            [
                "6d4fc8f2.936e68"
            ]
        ]
    },
    {
        "id": "e7cc7ee9.5f3ee",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 720,
        "wires": [
            [
                "f383e31d.eb366"
            ]
        ]
    },
    {
        "id": "f383e31d.eb366",
        "type": "http response",
        "z": "e98ab834.68c228",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 720,
        "wires": []
    },
    {
        "id": "6d4fc8f2.936e68",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: \"Not found\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 760,
        "wires": [
            [
                "104a7b1d.fbf495"
            ]
        ]
    },
    {
        "id": "104a7b1d.fbf495",
        "type": "http response",
        "z": "e98ab834.68c228",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 840,
        "y": 760,
        "wires": []
    },
    {
        "id": "a2c98ef.47fe67",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\nlet inMilliseconds = +new Date(data.in_timestamp)\nlet inHours = Math.floor((inMilliseconds / (1000 * 60 * 60)) % 24)\nlet inMinutes = Math.floor((inMilliseconds / (1000 * 60)) % 60)\nlet outMilliseconds = +new Date(msg.original.timestamp)\nlet outHours = Math.floor((outMilliseconds / (1000 * 60 * 60)) % 24)\nlet outMinutes = Math.floor((outMilliseconds / (1000 * 60)) % 60)\n\ndata['out_updated_date'] = new Date()\ndata['out_timestamp'] = msg.original.timestamp\ndata['total_hours'] = outHours - inHours\ndata['total_minutes'] = outMinutes - inMinutes\n\nif (msg.original.temperature) {\n    data['out_temp'] = msg.original.temperature\n}\nif (msg.original.comment) {\n    data['out_comment'] = msg.original.comment\n}\n\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 680,
        "wires": [
            [
                "a5840780.204f68"
            ]
        ]
    },
    {
        "id": "a5840780.204f68",
        "type": "cloudantplus out",
        "z": "e98ab834.68c228",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 850,
        "y": 680,
        "wires": [
            [
                "a275f2bf.20f48"
            ]
        ]
    },
    {
        "id": "dd0904ef.aeb578",
        "type": "link in",
        "z": "e98ab834.68c228",
        "name": "",
        "links": [
            "ad119354.96b57"
        ],
        "x": 195,
        "y": 600,
        "wires": [
            [
                "a74e316e.816ee"
            ]
        ]
    },
    {
        "id": "ad119354.96b57",
        "type": "link out",
        "z": "e98ab834.68c228",
        "name": "from check out",
        "links": [
            "dd0904ef.aeb578"
        ],
        "x": 575,
        "y": 200,
        "wires": []
    },
    {
        "id": "ddfdb963.882bc8",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\n\n\ndata['in_updated_date'] = new Date()\ndata['in_timestamp'] = msg.original.timestamp\n\nif (msg.original.temperature) {\n    data['in_temp'] = msg.original.temperature\n}\nif (msg.original.comment) {\n    data['in_comment'] = msg.original.comment\n}\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 460,
        "wires": [
            [
                "a092fec1.e8e17"
            ]
        ]
    },
    {
        "id": "a092fec1.e8e17",
        "type": "cloudantplus out",
        "z": "e98ab834.68c228",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 850,
        "y": 460,
        "wires": [
            [
                "a275f2bf.20f48"
            ]
        ]
    },
    {
        "id": "c6107171.8bdec",
        "type": "switch",
        "z": "e98ab834.68c228",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 500,
        "wires": [
            [
                "ddfdb963.882bc8"
            ],
            [
                "dfe824f1.79bd08"
            ],
            [
                "6da56706.5d16d8"
            ]
        ]
    },
    {
        "id": "dfe824f1.79bd08",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 500,
        "wires": [
            [
                "9b4a8ef4.7b3e1"
            ]
        ]
    },
    {
        "id": "9b4a8ef4.7b3e1",
        "type": "http response",
        "z": "e98ab834.68c228",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 500,
        "wires": []
    },
    {
        "id": "f7774186.87161",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "set attendance type",
        "func": "msg.original = {...msg.payload}\nmsg.payload = {\"key\": msg.payload._id}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 380,
        "wires": [
            [
                "8ad2f3ff.33fab"
            ]
        ]
    },
    {
        "id": "2f2d5eef.821412",
        "type": "link out",
        "z": "e98ab834.68c228",
        "name": "from check in",
        "links": [
            "bd12f4ae.9d7f38"
        ],
        "x": 575,
        "y": 160,
        "wires": []
    },
    {
        "id": "bd12f4ae.9d7f38",
        "type": "link in",
        "z": "e98ab834.68c228",
        "name": "",
        "links": [
            "2f2d5eef.821412"
        ],
        "x": 195,
        "y": 380,
        "wires": [
            [
                "f7774186.87161"
            ]
        ]
    },
    {
        "id": "778a6eff.a0ed7",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'That attendance was not defined.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 240,
        "wires": [
            [
                "c97e8008.037f8"
            ]
        ]
    },
    {
        "id": "c97e8008.037f8",
        "type": "http response",
        "z": "e98ab834.68c228",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 420,
        "y": 280,
        "wires": []
    },
    {
        "id": "e6ff423a.93cea",
        "type": "comment",
        "z": "e98ab834.68c228",
        "name": "check-in, check-out, lunch check-in, lunch check-out",
        "info": "",
        "x": 370,
        "y": 340,
        "wires": []
    },
    {
        "id": "8ad2f3ff.33fab",
        "type": "cloudantplus in",
        "z": "e98ab834.68c228",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "attendance-incomplete",
        "index": "attendance-incomplete-in",
        "x": 550,
        "y": 380,
        "wires": [
            [
                "bd8685c.48d1278"
            ]
        ]
    },
    {
        "id": "bd8685c.48d1278",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 380,
        "wires": [
            [
                "c6107171.8bdec"
            ]
        ]
    },
    {
        "id": "6da56706.5d16d8",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not found.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 540,
        "wires": [
            [
                "8ce3486e.748b18"
            ]
        ]
    },
    {
        "id": "8ce3486e.748b18",
        "type": "http response",
        "z": "e98ab834.68c228",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 540,
        "wires": []
    },
    {
        "id": "a74e316e.816ee",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "set attendance type",
        "func": "msg.original = {...msg.payload}\nmsg.payload = {\"key\": msg.payload._id}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 600,
        "wires": [
            [
                "f38d853e.fd3298"
            ]
        ]
    },
    {
        "id": "f38d853e.fd3298",
        "type": "cloudantplus in",
        "z": "e98ab834.68c228",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "attendance-incomplete",
        "index": "attendance-incomplete-out",
        "x": 530,
        "y": 600,
        "wires": [
            [
                "f11cd34b.cd7db"
            ]
        ]
    },
    {
        "id": "f11cd34b.cd7db",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 600,
        "wires": [
            [
                "9aa0fe59.0110a"
            ]
        ]
    },
    {
        "id": "68a1c2d1.f4b97c",
        "type": "cloudantplus in",
        "z": "e98ab834.68c228",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "841219eb.ebb668"
            ]
        ]
    },
    {
        "id": "9bde7aef.489ea8",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "",
        "func": "msg.original = {...msg.payload}\nmsg.payload = msg.payload._id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 80,
        "wires": [
            [
                "68a1c2d1.f4b97c"
            ]
        ]
    },
    {
        "id": "841219eb.ebb668",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "",
        "func": "msg.err = false;\nif(msg.payload.action !== msg.original.action){\n    msg.err = true;\n    msg.errMsg = \"Action cannot be changed\"\n}\nmsg.payload = {...msg.original};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 40,
        "wires": [
            [
                "2c0e310d.c6e1be"
            ]
        ]
    },
    {
        "id": "2c0e310d.c6e1be",
        "type": "switch",
        "z": "e98ab834.68c228",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 740,
        "y": 100,
        "wires": [
            [
                "80362d84.d4bb"
            ],
            [
                "973c9445.149f58"
            ]
        ]
    },
    {
        "id": "80362d84.d4bb",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: msg.errMsg\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 950,
        "y": 80,
        "wires": [
            [
                "cc49d7bc.9525d8"
            ]
        ]
    },
    {
        "id": "cc49d7bc.9525d8",
        "type": "http response",
        "z": "e98ab834.68c228",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1140,
        "y": 80,
        "wires": []
    },
    {
        "id": "a275f2bf.20f48",
        "type": "function",
        "z": "e98ab834.68c228",
        "name": "",
        "func": "msg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 540,
        "wires": [
            []
        ]
    },
    {
        "id": "55d5b9a.3c9ba48",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "Query",
        "func": "\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"breedingGrowOutSetupRackId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 160,
        "wires": [
            [
                "5bdad217.e5d96c"
            ]
        ]
    },
    {
        "id": "5bdad217.e5d96c",
        "type": "cloudantplus in",
        "z": "6b49a642.175118",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 570,
        "y": 160,
        "wires": [
            [
                "274f6cf4.6a44e4"
            ]
        ]
    },
    {
        "id": "274f6cf4.6a44e4",
        "type": "switch",
        "z": "6b49a642.175118",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 230,
        "y": 220,
        "wires": [
            [
                "1d9b14c2.ff8dab"
            ],
            [
                "65364ec0.5f217"
            ],
            [
                "ddd5ceb.d29853"
            ]
        ]
    },
    {
        "id": "1d9b14c2.ff8dab",
        "type": "change",
        "z": "6b49a642.175118",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 220,
        "wires": [
            [
                "52441476.0c208c"
            ]
        ]
    },
    {
        "id": "65364ec0.5f217",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 260,
        "wires": [
            [
                "fb8fca1.337ec38"
            ]
        ]
    },
    {
        "id": "ddd5ceb.d29853",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 320,
        "wires": [
            [
                "491f3a2a.7ed8c4"
            ]
        ]
    },
    {
        "id": "52441476.0c208c",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"growthChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 220,
        "wires": [
            [
                "f55bd768.030978"
            ]
        ]
    },
    {
        "id": "fb8fca1.337ec38",
        "type": "http response",
        "z": "6b49a642.175118",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 680,
        "y": 260,
        "wires": []
    },
    {
        "id": "491f3a2a.7ed8c4",
        "type": "http response",
        "z": "6b49a642.175118",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 700,
        "y": 320,
        "wires": []
    },
    {
        "id": "f55bd768.030978",
        "type": "cloudantplus in",
        "z": "6b49a642.175118",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 830,
        "y": 160,
        "wires": [
            [
                "13f45360.4dcbbd"
            ]
        ]
    },
    {
        "id": "13f45360.4dcbbd",
        "type": "switch",
        "z": "6b49a642.175118",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 910,
        "y": 220,
        "wires": [
            [
                "45bab546.e4c99c"
            ],
            [
                "6c107275.516e3c"
            ],
            [
                "d4fadffa.cb1d2"
            ]
        ]
    },
    {
        "id": "45bab546.e4c99c",
        "type": "change",
        "z": "6b49a642.175118",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1110,
        "y": 200,
        "wires": [
            [
                "c5d9aafa.a0dcb8"
            ]
        ]
    },
    {
        "id": "6c107275.516e3c",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 280,
        "wires": [
            [
                "f67377ce.a9a158"
            ]
        ]
    },
    {
        "id": "d4fadffa.cb1d2",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 340,
        "wires": [
            [
                "b170c72.707a438"
            ]
        ]
    },
    {
        "id": "c5d9aafa.a0dcb8",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "",
        "func": "const chamberId = msg.original.growthChamberId;\nconst rack = msg.rack;\nconst rackId = msg.original.breedingGrowOutSetupRackId;\nconst chamber = msg.chamber;\nvar rackOccupied;\nvar chamberOccupied;\n\n    chamberOccupied = false;\n\n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList = []\n    }\n    \n    node.warn(rackId);\n    node.warn(chamber.options[chamberId].rackIdList);\n    if(chamber.options[chamberId].rackIdList.length > 0) {\n        chamber.options[chamberId].rackIdList = chamber.options[chamberId].rackIdList.filter(_rackId => _rackId != rackId);\n    }\n    \n    chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity -1 < 0? 0:chamber.options[chamberId].occupiedCapacity -1;\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else if(chamber.options[chamberId].occupiedCapacity == 0){\n        chamber.options[chamberId].status = \"AVAILABLE\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n\n\n\n\n    rackOccupied = false;\n    \n    rack.options[rackId].status = \"AVAILABLE\"\n    \n    \n    if(rack.options[rackId].batchIdList){\n        delete rack.options[rackId].batchIdList\n    }\n    \n    if(rack.options[rackId].setupDateId){\n    rack.options[rackId].setupDateId = \"\";\n    }\n    \n    if(rack.options[rackId].growthChamberId ){\n       delete rack.options[rackId].growthChamberId  \n    }\n\nmsg.occupied = false;\nif(rackOccupied && chamberOccupied){\n    msg.errorMsg = \"Rack and Chamber are occupied\";\n    msg.occupied = true;\n}\nelse if(rackOccupied){\n    msg.errorMsg = \"Rack is occupied\";\n    msg.occupied = true;\n}\nelse if(chamberOccupied){\n    msg.errorMsg = \"Chamber is occupied\";\n    msg.occupied = true;\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1320,
        "y": 200,
        "wires": [
            [
                "3f932586.aeadea"
            ]
        ]
    },
    {
        "id": "f67377ce.a9a158",
        "type": "http response",
        "z": "6b49a642.175118",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1380,
        "y": 280,
        "wires": []
    },
    {
        "id": "b170c72.707a438",
        "type": "http response",
        "z": "6b49a642.175118",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1380,
        "y": 340,
        "wires": []
    },
    {
        "id": "3f932586.aeadea",
        "type": "switch",
        "z": "6b49a642.175118",
        "name": "",
        "property": "occupied",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1490,
        "y": 240,
        "wires": [
            [
                "8eae9174.c697"
            ],
            [
                "3f3caf1c.c349f"
            ]
        ]
    },
    {
        "id": "8eae9174.c697",
        "type": "split",
        "z": "6b49a642.175118",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1530,
        "y": 180,
        "wires": [
            [
                "c9cb97b.1122e68"
            ]
        ]
    },
    {
        "id": "3f3caf1c.c349f",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "Generate error message (Rack Occupied)",
        "func": "msg.payload = {\n    \"message\": msg.errorMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1680,
        "y": 320,
        "wires": [
            [
                "9b4ea952.41ff18"
            ]
        ]
    },
    {
        "id": "c9cb97b.1122e68",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1660,
        "y": 180,
        "wires": [
            [
                "ef2fcef2.0bfa5"
            ]
        ]
    },
    {
        "id": "9b4ea952.41ff18",
        "type": "http response",
        "z": "6b49a642.175118",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1960,
        "y": 320,
        "wires": []
    },
    {
        "id": "ef2fcef2.0bfa5",
        "type": "cloudantplus out",
        "z": "6b49a642.175118",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1830,
        "y": 180,
        "wires": [
            [
                "de24fd54.ad1cf"
            ]
        ]
    },
    {
        "id": "de24fd54.ad1cf",
        "type": "join",
        "z": "6b49a642.175118",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1970,
        "y": 180,
        "wires": [
            [
                "6b7e7cfb.9159d4"
            ]
        ]
    },
    {
        "id": "e1feae02.06f1f",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "",
        "func": "let query = {}\nquery.key = msg.payload._id\nmsg.original = {...msg.payload};\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "c274776c.0e8d48"
            ]
        ]
    },
    {
        "id": "c274776c.0e8d48",
        "type": "cloudantplus in",
        "z": "6b49a642.175118",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "grow-out-setup-id",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "d2313d55.1a2cc"
            ]
        ]
    },
    {
        "id": "ba335933.b8eff8",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "",
        "func": "msg.incomplete = msg.payload[0].value.incomplete;\nmsg.incompleteEntry = msg.payload[0].value;\nmsg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 80,
        "wires": [
            [
                "7f04c41a.6632cc"
            ]
        ]
    },
    {
        "id": "d2313d55.1a2cc",
        "type": "switch",
        "z": "6b49a642.175118",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 100,
        "wires": [
            [
                "ba335933.b8eff8"
            ],
            []
        ]
    },
    {
        "id": "7f04c41a.6632cc",
        "type": "switch",
        "z": "6b49a642.175118",
        "name": "",
        "property": "incomplete",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 80,
        "wires": [
            [
                "4821fb0c.a74c54"
            ],
            [
                "55d5b9a.3c9ba48"
            ]
        ]
    },
    {
        "id": "6b7e7cfb.9159d4",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "",
        "func": "let incomplete = msg.incompleteEntry;\nincomplete.deleted = true;\nmsg.payload = incomplete;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2100,
        "y": 180,
        "wires": [
            [
                "d661a685.2d2878"
            ]
        ]
    },
    {
        "id": "d661a685.2d2878",
        "type": "cloudantplus out",
        "z": "6b49a642.175118",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 2250,
        "y": 180,
        "wires": [
            [
                "9de96842.4fef98"
            ]
        ]
    },
    {
        "id": "9de96842.4fef98",
        "type": "change",
        "z": "6b49a642.175118",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2420,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "b058d6.f16df728",
        "type": "http response",
        "z": "6b49a642.175118",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1280,
        "y": 60,
        "wires": []
    },
    {
        "id": "4821fb0c.a74c54",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Process completed, cannot delete this submission.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1070,
        "y": 60,
        "wires": [
            [
                "b058d6.f16df728"
            ]
        ]
    },
    {
        "id": "c708f052.517d2",
        "type": "function",
        "z": "6b49a642.175118",
        "name": "",
        "func": "const chamberId = msg.original.growthChamberId;\nconst rack = msg.rack;\nconst rackId = msg.original.breedingGrowOutSetupRackId;\nconst chamber = msg.chamber;\nvar rackOccupied;\nvar chamberOccupied;\n\n    chamberOccupied = false;\n\n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList ={}\n    }\n    if(chamber.options[chamberId].rackIdList[rackId]) {\n        delete chamber.options[chamberId].rackIdList[rackId];\n    }\n    \n    chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity -1 < 0? 0:chamber.options[chamberId].occupiedCapacity -1;\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else if(chamber.options[chamberId].occupiedCapacity == 0){\n        chamber.options[chamberId].status = \"AVAILABLE\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n\n\n\n\n    rackOccupied = false;\n    \n    rack.options[rackId].status = \"AVAILABLE\"\n    \n    \n    if(rack.options[rackId].batchIdList){\n        delete rack.options[rackId].batchIdList\n    }\n    \n    if(rack.options[rackId].growthChamberId ){\n       delete rack.options[rackId].growthChamberId  \n    }\n\nmsg.occupied = false;\nif(rackOccupied && chamberOccupied){\n    msg.errorMsg = \"Rack and Chamber are occupied\";\n    msg.occupied = true;\n}\nelse if(rackOccupied){\n    msg.errorMsg = \"Rack is occupied\";\n    msg.occupied = true;\n}\nelse if(chamberOccupied){\n    msg.errorMsg = \"Chamber is occupied\";\n    msg.occupied = true;\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1340,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "33a6c626.d212aa",
        "type": "comment",
        "z": "6b49a642.175118",
        "name": "backup",
        "info": "",
        "x": 1340,
        "y": 100,
        "wires": []
    },
    {
        "id": "720c22b2.3e3f9c",
        "type": "switch",
        "z": "fb81e8b7.35b228",
        "name": "process action?",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "START",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "END",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 380,
        "y": 200,
        "wires": [
            [
                "f42eb780.a73078"
            ],
            [
                "68ef8d0f.7d72f4"
            ],
            [
                "152295cf.e0adda"
            ]
        ]
    },
    {
        "id": "8f3475ca.2d6fb8",
        "type": "switch",
        "z": "fb81e8b7.35b228",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 760,
        "wires": [
            [
                "5e4f7612.192408"
            ],
            [
                "462aa176.dee6c"
            ],
            [
                "472de963.e5dd38"
            ]
        ]
    },
    {
        "id": "462aa176.dee6c",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 760,
        "wires": [
            [
                "b091b6f3.6d7be8"
            ]
        ]
    },
    {
        "id": "b091b6f3.6d7be8",
        "type": "http response",
        "z": "fb81e8b7.35b228",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 760,
        "wires": []
    },
    {
        "id": "472de963.e5dd38",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not found'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 800,
        "wires": [
            [
                "11d90dcd.b87a12"
            ]
        ]
    },
    {
        "id": "11d90dcd.b87a12",
        "type": "http response",
        "z": "fb81e8b7.35b228",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 800,
        "wires": []
    },
    {
        "id": "5e4f7612.192408",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\ndata.end_deleted =true;\ndata.incomplete = true;\n\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 720,
        "wires": [
            [
                "27ce22d1.892f7e"
            ]
        ]
    },
    {
        "id": "27ce22d1.892f7e",
        "type": "cloudantplus out",
        "z": "fb81e8b7.35b228",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 850,
        "y": 720,
        "wires": [
            [
                "9ed15110.2bf19"
            ]
        ]
    },
    {
        "id": "c852e963.deafe8",
        "type": "link in",
        "z": "fb81e8b7.35b228",
        "name": "",
        "links": [
            "68ef8d0f.7d72f4"
        ],
        "x": 195,
        "y": 640,
        "wires": [
            [
                "3f6f8353.9685dc"
            ]
        ]
    },
    {
        "id": "68ef8d0f.7d72f4",
        "type": "link out",
        "z": "fb81e8b7.35b228",
        "name": "from check out",
        "links": [
            "c852e963.deafe8"
        ],
        "x": 575,
        "y": 240,
        "wires": []
    },
    {
        "id": "4dffffdb.3797e",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\ndata.start_deleted = true;\n\nmsg.payload = {...data};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 500,
        "wires": [
            [
                "43c4b6ce.65e848"
            ]
        ]
    },
    {
        "id": "43c4b6ce.65e848",
        "type": "cloudantplus out",
        "z": "fb81e8b7.35b228",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 830,
        "y": 500,
        "wires": [
            [
                "9ed15110.2bf19"
            ]
        ]
    },
    {
        "id": "986fc32d.10aaa",
        "type": "switch",
        "z": "fb81e8b7.35b228",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 450,
        "y": 540,
        "wires": [
            [
                "4dffffdb.3797e"
            ],
            [
                "68e8bf67.1e662"
            ],
            [
                "1a941180.8c2fdf"
            ]
        ]
    },
    {
        "id": "68e8bf67.1e662",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 540,
        "wires": [
            [
                "5c8bbd58.bce6d4"
            ]
        ]
    },
    {
        "id": "5c8bbd58.bce6d4",
        "type": "http response",
        "z": "fb81e8b7.35b228",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 540,
        "wires": []
    },
    {
        "id": "f42eb780.a73078",
        "type": "link out",
        "z": "fb81e8b7.35b228",
        "name": "from check in",
        "links": [
            "676b35e.a1651cc"
        ],
        "x": 575,
        "y": 200,
        "wires": []
    },
    {
        "id": "676b35e.a1651cc",
        "type": "link in",
        "z": "fb81e8b7.35b228",
        "name": "",
        "links": [
            "f42eb780.a73078"
        ],
        "x": 195,
        "y": 420,
        "wires": [
            [
                "62d0371c.2796c8"
            ]
        ]
    },
    {
        "id": "152295cf.e0adda",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'That action was not defined.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 260,
        "wires": [
            [
                "ba6e7752.ba4258"
            ]
        ]
    },
    {
        "id": "ba6e7752.ba4258",
        "type": "http response",
        "z": "fb81e8b7.35b228",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 420,
        "y": 320,
        "wires": []
    },
    {
        "id": "28826601.54044a",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 420,
        "wires": [
            [
                "986fc32d.10aaa"
            ]
        ]
    },
    {
        "id": "c7971521.6d52c8",
        "type": "cloudantplus in",
        "z": "fb81e8b7.35b228",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "process-incomplete",
        "index": "process-incomplete-start",
        "x": 550,
        "y": 420,
        "wires": [
            [
                "28826601.54044a"
            ]
        ]
    },
    {
        "id": "62d0371c.2796c8",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "set process type",
        "func": "msg.original = {...msg.payload}\nmsg.payload = {\"key\": msg.payload._id}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 420,
        "wires": [
            [
                "c7971521.6d52c8"
            ]
        ]
    },
    {
        "id": "1a941180.8c2fdf",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not found.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 580,
        "wires": [
            [
                "6237dd44.fde144"
            ]
        ]
    },
    {
        "id": "6237dd44.fde144",
        "type": "http response",
        "z": "fb81e8b7.35b228",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 840,
        "y": 580,
        "wires": []
    },
    {
        "id": "3f6f8353.9685dc",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "set process type",
        "func": "msg.original = {...msg.payload}\nmsg.payload = {\"key\": msg.payload._id}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 640,
        "wires": [
            [
                "8a9a1baf.fa3c18"
            ]
        ]
    },
    {
        "id": "8a9a1baf.fa3c18",
        "type": "cloudantplus in",
        "z": "fb81e8b7.35b228",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "process-incomplete",
        "index": "process-incomplete-end",
        "x": 550,
        "y": 640,
        "wires": [
            [
                "68ebd9ba.d34b58"
            ]
        ]
    },
    {
        "id": "68ebd9ba.d34b58",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 640,
        "wires": [
            [
                "8f3475ca.2d6fb8"
            ]
        ]
    },
    {
        "id": "9ed15110.2bf19",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "",
        "func": "msg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1090,
        "y": 560,
        "wires": [
            []
        ]
    },
    {
        "id": "f04ccebe.10aa8",
        "type": "function",
        "z": "fb81e8b7.35b228",
        "name": "",
        "func": "msg.original = {...msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 200,
        "wires": [
            [
                "720c22b2.3e3f9c"
            ]
        ]
    },
    {
        "id": "4478521b.40ee9c",
        "type": "switch",
        "z": "340d7d68.d117b2",
        "name": "attendance action?",
        "property": "payload.action",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "CHECK_IN",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "CHECK_OUT",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 410,
        "y": 200,
        "wires": [
            [
                "359ebae6.934e36"
            ],
            [
                "3e782d62.4d44c2"
            ],
            [
                "7a9c68c1.bfce58"
            ]
        ]
    },
    {
        "id": "3fc1c7e8.602638",
        "type": "switch",
        "z": "340d7d68.d117b2",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 760,
        "wires": [
            [
                "e1907c08.caa2f"
            ],
            [
                "69721c26.2df5f4"
            ],
            [
                "3de48764.5fb788"
            ]
        ]
    },
    {
        "id": "69721c26.2df5f4",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 760,
        "wires": [
            [
                "e5581367.f26fb"
            ]
        ]
    },
    {
        "id": "e5581367.f26fb",
        "type": "http response",
        "z": "340d7d68.d117b2",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 860,
        "y": 760,
        "wires": []
    },
    {
        "id": "3de48764.5fb788",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: \"Not found\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 800,
        "wires": [
            [
                "d8229001.64ae1"
            ]
        ]
    },
    {
        "id": "d8229001.64ae1",
        "type": "http response",
        "z": "340d7d68.d117b2",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 860,
        "y": 800,
        "wires": []
    },
    {
        "id": "e1907c08.caa2f",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\ndata.out_deleted = true;\ndata.incomplete = true;\n\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 720,
        "wires": [
            [
                "694d34a2.963b5c"
            ]
        ]
    },
    {
        "id": "694d34a2.963b5c",
        "type": "cloudantplus out",
        "z": "340d7d68.d117b2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 870,
        "y": 720,
        "wires": [
            [
                "57401ca0.48feb4"
            ]
        ]
    },
    {
        "id": "e7f080de.73278",
        "type": "link in",
        "z": "340d7d68.d117b2",
        "name": "",
        "links": [
            "3e782d62.4d44c2"
        ],
        "x": 215,
        "y": 640,
        "wires": [
            [
                "ad6aa398.778d9"
            ]
        ]
    },
    {
        "id": "3e782d62.4d44c2",
        "type": "link out",
        "z": "340d7d68.d117b2",
        "name": "from check out",
        "links": [
            "e7f080de.73278"
        ],
        "x": 595,
        "y": 240,
        "wires": []
    },
    {
        "id": "d3e4baa.5fd7648",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "structure data",
        "func": "let data = msg.payload[0].value\ndata.in_deleted = true;\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 500,
        "wires": [
            [
                "7d7ef89c.f390e8"
            ]
        ]
    },
    {
        "id": "7d7ef89c.f390e8",
        "type": "cloudantplus out",
        "z": "340d7d68.d117b2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 870,
        "y": 500,
        "wires": [
            [
                "57401ca0.48feb4"
            ]
        ]
    },
    {
        "id": "a892dbb1.fc0e98",
        "type": "switch",
        "z": "340d7d68.d117b2",
        "name": "has result?",
        "property": "resultCount",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 470,
        "y": 540,
        "wires": [
            [
                "d3e4baa.5fd7648"
            ],
            [
                "b0279be.d15e168"
            ],
            [
                "a185680a.b1d498"
            ]
        ]
    },
    {
        "id": "b0279be.d15e168",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not unique.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 540,
        "wires": [
            [
                "78cfedb7.456cf4"
            ]
        ]
    },
    {
        "id": "78cfedb7.456cf4",
        "type": "http response",
        "z": "340d7d68.d117b2",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 860,
        "y": 540,
        "wires": []
    },
    {
        "id": "3fb50299.b1a9ce",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "set attendance type",
        "func": "msg.original = {...msg.payload}\nmsg.payload = {\"key\": msg.payload._id}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 420,
        "wires": [
            [
                "4511d847.01f0e8"
            ]
        ]
    },
    {
        "id": "359ebae6.934e36",
        "type": "link out",
        "z": "340d7d68.d117b2",
        "name": "from check in",
        "links": [
            "2f9fea4c.390e66"
        ],
        "x": 595,
        "y": 200,
        "wires": []
    },
    {
        "id": "2f9fea4c.390e66",
        "type": "link in",
        "z": "340d7d68.d117b2",
        "name": "",
        "links": [
            "359ebae6.934e36"
        ],
        "x": 215,
        "y": 420,
        "wires": [
            [
                "3fb50299.b1a9ce"
            ]
        ]
    },
    {
        "id": "7a9c68c1.bfce58",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'That attendance was not defined.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 280,
        "wires": [
            [
                "52a7c20f.f62c6c"
            ]
        ]
    },
    {
        "id": "52a7c20f.f62c6c",
        "type": "http response",
        "z": "340d7d68.d117b2",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 440,
        "y": 320,
        "wires": []
    },
    {
        "id": "3495a83a.279848",
        "type": "comment",
        "z": "340d7d68.d117b2",
        "name": "check-in, check-out, lunch check-in, lunch check-out",
        "info": "",
        "x": 390,
        "y": 380,
        "wires": []
    },
    {
        "id": "4511d847.01f0e8",
        "type": "cloudantplus in",
        "z": "340d7d68.d117b2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "attendance-incomplete",
        "index": "attendance-incomplete-in",
        "x": 570,
        "y": 420,
        "wires": [
            [
                "e1bd4f20.9051c"
            ]
        ]
    },
    {
        "id": "e1bd4f20.9051c",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 750,
        "y": 420,
        "wires": [
            [
                "a892dbb1.fc0e98"
            ]
        ]
    },
    {
        "id": "a185680a.b1d498",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "generate message",
        "func": "msg.payload = {\n    toast: true,\n    dialog: false,\n    dialogType: '',\n    message: 'Not found.'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 580,
        "wires": [
            [
                "c0fd8701.ca02a8"
            ]
        ]
    },
    {
        "id": "c0fd8701.ca02a8",
        "type": "http response",
        "z": "340d7d68.d117b2",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 860,
        "y": 580,
        "wires": []
    },
    {
        "id": "ad6aa398.778d9",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "set attendance type",
        "func": "msg.original = {...msg.payload}\nmsg.payload = {\"key\": msg.payload._id}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 350,
        "y": 640,
        "wires": [
            [
                "4714a455.c057ac"
            ]
        ]
    },
    {
        "id": "4714a455.c057ac",
        "type": "cloudantplus in",
        "z": "340d7d68.d117b2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "attendance-incomplete",
        "index": "attendance-incomplete-out",
        "x": 550,
        "y": 640,
        "wires": [
            [
                "bcd3d4ad.9e78b8"
            ]
        ]
    },
    {
        "id": "bcd3d4ad.9e78b8",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "count result",
        "func": "let count = 0\n\nif (Array.isArray(msg.payload)) {\n    count = msg.payload.length\n}\n\nmsg.resultCount = count\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 730,
        "y": 640,
        "wires": [
            [
                "3fc1c7e8.602638"
            ]
        ]
    },
    {
        "id": "391aea04.fbf8f6",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "",
        "func": "msg.original = {...msg.payload}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 200,
        "wires": [
            [
                "4478521b.40ee9c"
            ]
        ]
    },
    {
        "id": "57401ca0.48feb4",
        "type": "function",
        "z": "340d7d68.d117b2",
        "name": "",
        "func": "msg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "c918c77.7bc2238",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "reset racks",
        "func": "let rackIds = msg.original.pupationRackID\nlet doc = msg.rack\nlet racks = doc.options\nlet doc1 = msg.chamber\nlet chambers = doc1.options\nlet chamberList = []\nmsg.error = false;\nfor (let id of rackIds) {\n    if (racks[id]) {\n        let rack = racks[id]\n        if(rack.pupationChamberId){\n            rack.occupiedCapacity = 0\n            rack.status = \"AVAILABLE\"\n            let chamberObj = {}\n            chamberObj.id = rack.pupationChamberId;\n            chamberObj.rackId = id;\n            chamberList.push(chamberObj);\n            delete rack.setupDateId\n            delete rack.batchIdList\n            delete rack.pupationChamberId\n            \n            racks[id] = rack\n        }\n        else{\n            msg.error = true;\n            msg.errMsg = id+ \": Only Racks in Pupation Chamber can be harvested.\" \n        }\n        \n    }\n}\n\nfor (let chamberId of chamberList) {\n    if (chambers[chamberId.id]) {\n        let chamber = chambers[chamberId.id]\n        \n        chamber.occupiedCapacity = chamber.occupiedCapacity - 1;\n        if(chamber.occupiedCapacity == 0){\n            chamber.status = \"AVAILABLE\"\n        }\n        else{\n            chamber.status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n        let rackIdList = chamber.rackIdList;\n        rackIdList.splice(rackIdList.indexOf(chamberId.rackId), 1);\n        \n        chamber.rackIdList = rackIdList;\n        chambers[chamberId.id] = chamber;\n    }\n}\n\n\ndoc1.options = chambers\ndoc.options = racks\nmsg.racks = doc;\nmsg.chambers = doc1;\nmsg.payload = [\"racks\", \"chambers\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3390,
        "y": 2520,
        "wires": [
            [
                "ff544832.bd96e8"
            ]
        ]
    },
    {
        "id": "62830912.86b718",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const chamberId = msg.original.growthChamberId;\nconst rack = msg.rack;\nconst rackId = msg.original.breedingGrowOutSetupRackId;\nconst chamber = msg.chamber;\n\n// delete chamber.options[chamberId].rackIdList[rackId]\n// if(typeof chamber.options[chamberId].rackIdList === 'object') {\n//     //old data structure\n//     keyNames = Object.keys( chamber.options[chamberId].rackIdList )\n//      chamber.options[chamberId].rackIdList = keyNames[0];\n// }\n// else {\n//     //new data structure\n    \n// }\nchamber.options[chamberId].rackIdList = chamber.options[chamberId].rackIdList.filter(_rackId => _rackId !== rackId);\n\nchamber.options[chamberId].occupiedCapacity = chamber.options[chamberId].occupiedCapacity -1;\nif(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n    chamber.options[chamberId].status = \"OCCUPIED\"\n}\nelse if(chamber.options[chamberId].occupiedCapacity == 0){\n    chamber.options[chamberId].status = \"AVAILABLE\"\n}\nelse{\n    chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n}\nrack.options[rackId].status = \"AVAILABLE\"\ndelete rack.options[rackId].setupDateId\ndelete rack.options[rackId].growthChamberId\ndelete rack.options[rackId].batchIdList\n\n\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3460,
        "y": 1100,
        "wires": [
            [
                "f709239b.2462c"
            ]
        ]
    },
    {
        "id": "14523fe4.c5daa",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const chamberId = msg.original.growthChamberId;\nconst rack = msg.rack;\nconst rackId = msg.original.breedingGrowOutSetupRackId;\nconst chamber = msg.chamber;\nvar rackOccupied;\nvar chamberOccupied;\n\nif(chamber.options[chamberId].status == \"OCCUPIED\"){\n    chamberOccupied = true;\n}\nelse{\n    //chamber modify here\n    chamberOccupied = false;\n    \n    // if(!chamber.options[chamberId].batchIdList){\n    //     chamber.options[chamberId].batchIdList ={}\n    // }\n    // chamber.options[chamberId].batchIdList = msg.original.batchId\n    \n    // if(!chamber.options[chamberId].rackIdList){\n    //     chamber.options[chamberId].rackIdList ={}\n    // }\n    // chamber.options[chamberId].rackIdList[rackId] = \n    // {\n    //     label: rack.options[rackId].label,\n    //     setupDateId: msg.setupDateId\n    // }\n    \n    \n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList = []\n    } \n    \n    if(!chamber.options[chamberId].rackIdList.includes(rackId)) {\n        chamber.options[chamberId].rackIdList.push(rackId);\n    }\n    \n    chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n}\n\n\nif(rack.options[rackId].status== \"OCCUPIED\"){\n    rackOccupied = true;\n}\nelse{\n    //rack modify here\n    rackOccupied = false;\n    rack.options[rackId].status = \"OCCUPIED\"\n    \n    if(!rack.options[rackId].setupDateId){\n       rack.options[rackId].setupDateId ={}\n    }\n    \n    rack.options[rackId].setupDateId = msg.original.setupDateId\n    \n    // rack.options[rackId].batchIdList = msg.original.batchId\n    if(!rack.options[rackId].growthChamberId){\n        rack.options[rackId].growthChamberId = {}\n    }\n    rack.options[rackId].growthChamberId = msg.original.growthChamberId\n}\nmsg.occupied = false;\nif(rackOccupied && chamberOccupied){\n    msg.errorMsg = \"Rack and Chamber are occupied\";\n    msg.occupied = true;\n}\nelse if(rackOccupied){\n    msg.errorMsg = \"Rack is occupied\";\n    msg.occupied = true;\n}\nelse if(chamberOccupied){\n    msg.errorMsg = \"Chamber is occupied\";\n    msg.occupied = true;\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3500,
        "y": 800,
        "wires": [
            [
                "f52c9e28.bd2e3"
            ]
        ]
    },
    {
        "id": "d9baea62.184408",
        "type": "function",
        "z": "2d333c58.be1b84",
        "name": "",
        "func": "query = {}\nquery.key = [msg.original.tenant, msg.payload]\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 140,
        "wires": [
            [
                "399c61bc.2ae92e"
            ]
        ]
    },
    {
        "id": "399c61bc.2ae92e",
        "type": "cloudantplus in",
        "z": "2d333c58.be1b84",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "pupation-emergence-setup",
        "x": 670,
        "y": 140,
        "wires": [
            [
                "3350fba7.b8afc4"
            ]
        ]
    },
    {
        "id": "3350fba7.b8afc4",
        "type": "function",
        "z": "2d333c58.be1b84",
        "name": "",
        "func": "msg.incompleteFound =false;\nif(msg.payload){\n    if(msg.payload[0]){\n        let formValue = msg.payload[0].value;\n        formValue.incomplete = false;\n        formValue.pupationEmergenceCompleteId = msg.pupationEmergenceCompleteId;\n        msg.payload = formValue;\n        msg.incompleteFound = true;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 140,
        "wires": [
            [
                "bff65f6a.b589d"
            ]
        ]
    },
    {
        "id": "bff65f6a.b589d",
        "type": "switch",
        "z": "2d333c58.be1b84",
        "name": "",
        "property": "incompleteFound",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 990,
        "y": 140,
        "wires": [
            [
                "1ea04524.eeaedb"
            ],
            [
                "d988848.30f5c78"
            ]
        ]
    },
    {
        "id": "1ea04524.eeaedb",
        "type": "cloudantplus out",
        "z": "2d333c58.be1b84",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1070,
        "y": 80,
        "wires": [
            [
                "d988848.30f5c78"
            ]
        ]
    },
    {
        "id": "805ba138.a1ad2",
        "type": "split",
        "z": "2d333c58.be1b84",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 350,
        "y": 140,
        "wires": [
            [
                "d9baea62.184408"
            ]
        ]
    },
    {
        "id": "ba3f6990.a4b2b8",
        "type": "function",
        "z": "2d333c58.be1b84",
        "name": "",
        "func": "msg.pupationEmergenceCompleteId = msg.cloudant.id\nmsg.payload = msg.original.pupationRackID\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "805ba138.a1ad2"
            ]
        ]
    },
    {
        "id": "d988848.30f5c78",
        "type": "join",
        "z": "2d333c58.be1b84",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 1210,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "2b1a9662.91694a",
        "type": "function",
        "z": "6cce5602.b9c5a8",
        "name": "",
        "func": "query = {}\nquery.key = [msg.original.tenant, msg.original.breedingGrowOutSetupRackId, msg.original.setupDateId]\nmsg.payload = query;\nmsg.growOutHarvestId = msg.cloudant.id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "6930f9bc.412c38"
            ]
        ]
    },
    {
        "id": "6930f9bc.412c38",
        "type": "cloudantplus in",
        "z": "6cce5602.b9c5a8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "grow-out-setup",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "b810479c.ddf1c8"
            ]
        ]
    },
    {
        "id": "b810479c.ddf1c8",
        "type": "function",
        "z": "6cce5602.b9c5a8",
        "name": "",
        "func": "msg.incompleteFound =false;\nif(msg.payload){\n    if(msg.payload[0]){\n        let formValue = msg.payload[0].value;\n        formValue.incomplete = false;\n        formValue.growOutHarvestId = msg.growOutHarvestId;\n        msg.payload = formValue;\n        msg.incompleteFound = true;\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 100,
        "wires": [
            [
                "821222a0.e467b"
            ]
        ]
    },
    {
        "id": "361bbd20.1bb612",
        "type": "cloudantplus out",
        "z": "6cce5602.b9c5a8",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 770,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "821222a0.e467b",
        "type": "switch",
        "z": "6cce5602.b9c5a8",
        "name": "",
        "property": "incompleteFound",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 100,
        "wires": [
            [
                "361bbd20.1bb612"
            ],
            []
        ]
    },
    {
        "id": "eb9f53b8.a5941",
        "type": "comment",
        "z": "3869881b.e92898",
        "name": "skip",
        "info": "",
        "x": 1830,
        "y": 160,
        "wires": []
    },
    {
        "id": "e7e63dcd.1b64",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "environmentdata db",
        "info": "",
        "x": 190,
        "y": 720,
        "wires": []
    },
    {
        "id": "c912f2bb.7f02b",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "template here",
        "info": "",
        "x": 470,
        "y": 720,
        "wires": []
    },
    {
        "id": "f9cbee3.b9e591",
        "type": "function",
        "z": "a2ccf18.37c751",
        "name": "",
        "func": "msg.payload.ts = msg.payload.ts * 1000\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 80,
        "wires": [
            [
                "4ab9b359.edbd9c"
            ]
        ]
    },
    {
        "id": "e9b94538.1aa428",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "ts",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 120,
        "wires": [
            [
                "f9cbee3.b9e591"
            ],
            [
                "9d25387c.ae19d8"
            ]
        ]
    },
    {
        "id": "4ab9b359.edbd9c",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.ts",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm:ss",
        "locale": "en-US",
        "output": "payload.ts",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 80,
        "wires": [
            [
                "9d25387c.ae19d8"
            ]
        ]
    },
    {
        "id": "9d25387c.ae19d8",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 200,
        "wires": [
            [
                "ad5bd0f5.e104a"
            ],
            [
                "17880250.d65d9e"
            ]
        ]
    },
    {
        "id": "ad5bd0f5.e104a",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 160,
        "wires": [
            [
                "17880250.d65d9e"
            ]
        ]
    },
    {
        "id": "17880250.d65d9e",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 280,
        "wires": [
            [
                "c822b8e6.1a4ba8"
            ],
            [
                "aa2354eb.68dfe8"
            ]
        ]
    },
    {
        "id": "c822b8e6.1a4ba8",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.submission_timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.submission_timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 240,
        "wires": [
            [
                "aa2354eb.68dfe8"
            ]
        ]
    },
    {
        "id": "aa2354eb.68dfe8",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "in_submitted_date",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 360,
        "wires": [
            [
                "66f3480a.7e3708"
            ],
            [
                "87e1df7e.22bd3"
            ]
        ]
    },
    {
        "id": "66f3480a.7e3708",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.in_submitted_date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.in_submitted_date",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 320,
        "wires": [
            [
                "87e1df7e.22bd3"
            ]
        ]
    },
    {
        "id": "87e1df7e.22bd3",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "in_timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 440,
        "wires": [
            [
                "6e2a0ee8.f09f8"
            ],
            [
                "6713951e.494d4c"
            ]
        ]
    },
    {
        "id": "6e2a0ee8.f09f8",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.in_timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.in_timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 400,
        "wires": [
            [
                "6713951e.494d4c"
            ]
        ]
    },
    {
        "id": "6713951e.494d4c",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "out_submitted_date",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 520,
        "wires": [
            [
                "a0c06554.5333d8"
            ],
            [
                "88fdf69e.d3cc28"
            ]
        ]
    },
    {
        "id": "a0c06554.5333d8",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.out_submitted_date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.out_submitted_date",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 480,
        "wires": [
            [
                "88fdf69e.d3cc28"
            ]
        ]
    },
    {
        "id": "88fdf69e.d3cc28",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "out_timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 600,
        "wires": [
            [
                "a7e9a45.7bbcc58"
            ],
            [
                "82486002.1452d"
            ]
        ]
    },
    {
        "id": "a7e9a45.7bbcc58",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.out_timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.out_timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 560,
        "wires": [
            [
                "82486002.1452d"
            ]
        ]
    },
    {
        "id": "82486002.1452d",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "start_timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 680,
        "wires": [
            [
                "7a39bde4.a3cd74"
            ],
            [
                "bc5a6888.9b3828"
            ]
        ]
    },
    {
        "id": "7a39bde4.a3cd74",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.start_timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.start_timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 640,
        "wires": [
            [
                "bc5a6888.9b3828"
            ]
        ]
    },
    {
        "id": "bc5a6888.9b3828",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "start_submitted_date",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 760,
        "wires": [
            [
                "4f832d14.71b394"
            ],
            [
                "98f8d2d6.aae49"
            ]
        ]
    },
    {
        "id": "4f832d14.71b394",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.start_submitted_date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.start_submitted_date",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 720,
        "wires": [
            [
                "98f8d2d6.aae49"
            ]
        ]
    },
    {
        "id": "98f8d2d6.aae49",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "end_timestamp",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 840,
        "wires": [
            [
                "f20dac4a.fa627"
            ],
            [
                "4122de58.6e083"
            ]
        ]
    },
    {
        "id": "f20dac4a.fa627",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.end_timestamp",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.end_timestamp",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 800,
        "wires": [
            [
                "4122de58.6e083"
            ]
        ]
    },
    {
        "id": "4122de58.6e083",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "end_submitted_date",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 920,
        "wires": [
            [
                "400bb6f.5b21248"
            ],
            [
                "a1a3ffc9.61ccc"
            ]
        ]
    },
    {
        "id": "400bb6f.5b21248",
        "type": "moment",
        "z": "a2ccf18.37c751",
        "name": "",
        "topic": "",
        "input": "payload.end_submitted_date",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD-MMM-YYYY HH:mm",
        "locale": "en-US",
        "output": "payload.end_submitted_date",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 620,
        "y": 880,
        "wires": [
            [
                "a1a3ffc9.61ccc"
            ]
        ]
    },
    {
        "id": "a1a3ffc9.61ccc",
        "type": "switch",
        "z": "a2ccf18.37c751",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "batchId",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 270,
        "y": 1000,
        "wires": [
            [
                "eb94169c.826d68"
            ],
            [
                "c4a9e1e2.db872"
            ]
        ]
    },
    {
        "id": "eb94169c.826d68",
        "type": "function",
        "z": "a2ccf18.37c751",
        "name": "",
        "func": "\nif(Array.isArray(msg.payload.batchId)){\n    var batchIdList = \"\"\n    for(let i=0; i<msg.payload.batchId.length;i++){\n        if(i ===0){\n            batchIdList = batchIdList +msg.payload.batchId[i]\n        }\n        else{\n            batchIdList = batchIdList +\"\\, \"+msg.payload.batchId[i]\n        }\n    }\n    batchIdList = batchIdList +\"\"\n    msg.payload.batchId = batchIdList\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 960,
        "wires": [
            [
                "c4a9e1e2.db872"
            ]
        ]
    },
    {
        "id": "31150311.afc91c",
        "type": "split",
        "z": "a2ccf18.37c751",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 270,
        "y": 40,
        "wires": [
            [
                "e9b94538.1aa428"
            ]
        ]
    },
    {
        "id": "c4a9e1e2.db872",
        "type": "join",
        "z": "a2ccf18.37c751",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": "false",
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "x": 670,
        "y": 1020,
        "wires": [
            []
        ]
    },
    {
        "id": "8c8b9c3a.4332e",
        "type": "link out",
        "z": "1f50769f.97b799",
        "name": "",
        "links": [
            "f1590964.dc08a8",
            "30848711.9035a8"
        ],
        "x": 595,
        "y": 420,
        "wires": []
    },
    {
        "id": "130b687f.107c58",
        "type": "link in",
        "z": "1f50769f.97b799",
        "name": "",
        "links": [
            "3d21a906.40b3b6",
            "494f0ce0.c09534"
        ],
        "x": 695,
        "y": 420,
        "wires": [
            [
                "d15df1f4.624e",
                "2fd08f20.ec713"
            ]
        ]
    },
    {
        "id": "4aa3ad47.f7b024",
        "type": "function",
        "z": "6f7f441.17c58bc",
        "name": "query",
        "func": "let form = msg.workstationForm;\nlet line = msg.productionLine;\nlet tenant = msg.tenant;\nlet query = {\n    \"selector\": {\n        \"tenant\": tenant,\n        \"productionLine\": line,\n        \"workstationForm\": form,\n        \"docType\": \"blueprint\"\n    },\n    \"fields\": [],\n    \"sort\": [],\n    \"skip\": 0,\n    \"execution_stats\": true\n}\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "b1ac217e.01076"
            ]
        ]
    },
    {
        "id": "b1ac217e.01076",
        "type": "cloudantplus in",
        "z": "6f7f441.17c58bc",
        "name": "insectConfig1",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "blueprint",
        "index": "blueprint",
        "x": 220,
        "y": 160,
        "wires": [
            [
                "1f94e1ca.168bce"
            ]
        ]
    },
    {
        "id": "1f94e1ca.168bce",
        "type": "switch",
        "z": "6f7f441.17c58bc",
        "name": "hasResult?",
        "property": "payload.execution_stats.results_returned",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 200,
        "wires": [
            [
                "a9092826.5dc9f8"
            ],
            [
                "4f1569c3.0ce768",
                "41d92da7.c4c834"
            ]
        ]
    },
    {
        "id": "4f1569c3.0ce768",
        "type": "function",
        "z": "6f7f441.17c58bc",
        "name": "errMsg",
        "func": "msg.payload = {\n    \"message\": \"No such blueprint found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 240,
        "wires": [
            [
                "a1f0a440.dda998"
            ]
        ]
    },
    {
        "id": "f51f754b.488aa8",
        "type": "function",
        "z": "6f7f441.17c58bc",
        "name": "set fieldKeys for fieldArray",
        "func": "msg.metadataKeyList = []\n\nfor (let field of msg.payload.template) {\n    if (field.fieldArray && field.fieldArray.fieldGroup) {\n        for (let nestedField of field.fieldArray.fieldGroup) {\n            if (nestedField.metadata) msg.metadataKeyList.push(nestedField.key)\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "b265b9dd.352f68"
            ]
        ]
    },
    {
        "id": "a9092826.5dc9f8",
        "type": "change",
        "z": "6f7f441.17c58bc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.docs[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 120,
        "wires": [
            [
                "f51f754b.488aa8"
            ]
        ]
    },
    {
        "id": "b265b9dd.352f68",
        "type": "function",
        "z": "6f7f441.17c58bc",
        "name": "set fieldKeys for fieldGroup",
        "func": "for (let field of msg.payload.template) {\n    if (field.fieldGroup) {\n        for (let nestedField of field.fieldGroup) {\n            if (nestedField.metadata) msg.metadataKeyList.push(nestedField.key)\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 200,
        "wires": [
            [
                "33aa9052.586dd"
            ]
        ]
    },
    {
        "id": "33aa9052.586dd",
        "type": "function",
        "z": "6f7f441.17c58bc",
        "name": "set fieldKeys for other than above",
        "func": "let hardCodedMetadata = [\"daily_index\", \"device_ip\",\"facility_id\",\n\"user_name\", \"user_id\", \"form_id\", \"form_version\", \"processDocument\",\n\"description\", \"device_id\", \"_id\", \"_rev\"];\nfor (let field of msg.payload.template) {\n    if (field.metadata) msg.metadataKeyList.push(field.key)\n}\nmsg.metadataKeyList.push(...hardCodedMetadata);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "a1f0a440.dda998",
        "type": "function",
        "z": "6f7f441.17c58bc",
        "name": "generate message error",
        "func": "var notification = flow.get('notification');\nif(notification != null){\n    object = {\n        accessId: msg.token.access_id,\n        message: \"500\"\n    }\n    notification.push(object);\n} else {\n    notification = [];\n     object = {\n        accessId: msg.token.access_id,\n        message: \"500\"\n    }\n    notification.push(object);\n}\n\nflow.set('notification', notification);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "41d92da7.c4c834",
        "type": "cloudantplus out",
        "z": "6f7f441.17c58bc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "payonly": false,
        "operation": "insert",
        "x": 520,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "7f2eb93e.8f52f8",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "prepare payload",
        "func": "var limit = msg.allDoc.doc_count;\nif(limit < 25){\n    limit = 25;\n}\nvar fields = msg.original.fields\nvar selectors =msg.original.selectors\nvar sorts = msg.sort\nvar selectorObj = {};\n  var isArray = [\"eggTrapList\"]\n  var selector = selectors.split(\", \")\n  for(var sel of selector)\n  {\n      if(sel.includes(\">=\")){\n        let s = sel.split(\">=\");\n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          var a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$gte\"] = s[1]\n          }\n          else{\n          let a1 ={};\n          a1[a[1]] = {\"$gte\": s[1]}\n          selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$gte\"] = s[1];\n          }\n          else{\n            selectorObj[s[0]] = {\"$gte\": s[1]}\n          }\n        }\n      }\n      else if(sel.includes(\">\")){\n        var s = sel.split(\">\");\n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          let a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$gt\"] = s[1]\n          }\n          else{\n            let a1 ={};\n            a1[a[1]] = {\"$gt\": s[1]}\n            selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$gt\"] = s[1];\n          }\n          else{\n            selectorObj[s[0]] = {\"$gt\": s[1]}\n          }\n        }\n        \n      }\n      else if(sel.includes(\"<=\")){\n        let s = sel.split(\"<=\");\n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          let a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$lte\"] = s[1]\n          }\n          else{\n            let a1 ={};\n            a1[a[1]] = {\"$lte\": s[1]}\n            selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$lte\"] = s[1];\n          }\n          else{\n            selectorObj[s[0]] = {\"$lte\": s[1]}\n          }\n        }\n      }\n      else if(sel.includes(\"<\")){\n        let s = sel.split(\"<\");        \n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          let a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$lt\"] = s[1]\n          }\n          else{\n            let a1 ={};\n            a1[a[1]] = {\"$lt\": s[1]}\n            selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$lt\"] = s[1];\n          }\n          else{\n            selectorObj[s[0]] = {\"$lt\": s[1]}\n          }\n        }\n      }\n      else if(sel.includes(\"=\")){\n        let s = sel.split(\"=\");        \n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          let a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$eq\"] = s[1]\n          }\n          else{\n            let a1 ={};\n            a1[a[1]] = {\"$eq\": s[1]}\n            selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$eq\"] = s[1];\n          }\n          else{\n            selectorObj[s[0]] = {\"$eq\": s[1]}\n          }\n        }\n      }\n      else if(sel.includes(\" in \")){\n        let s = sel.split(\" in \");\n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          let a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$in\"] = s[1]\n          }\n          else{\n            let a1 ={};\n            a1[a[1]] = {\"$in\": s[1].split(\",\")}\n            selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$in\"] = s[1].split(\",\");\n          }\n          else{\n            selectorObj[s[0]] = {\"$in\": s[1].split(\",\")}\n          }\n        }\n    }\n    \n  }\n  \n  var body ={}\n  body.limit = limit;\n  body.selector = selectorObj;\n  if(fields !== null && fields !== \"\"){\n      body.fields = fields.split(\", \");\n  }\n  if(sorts !== null && sorts !== \"\"){\n      body.sort=sorts;\n  }\n  msg.payloadForGetAllDoc = body;\n  msg.endpoint = env.get(\"INSECT_DB\") + \"/\" + msg.original.database + \"/_find\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "df5d3a65.fc36d8"
            ]
        ]
    },
    {
        "id": "c47f33f5.4cf0e",
        "type": "switch",
        "z": "d35f6c55.31d32",
        "name": "",
        "property": "payload.sort",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 120,
        "wires": [
            [
                "1af29d44.2ba183"
            ],
            [
                "3b69a498.e7100c"
            ]
        ]
    },
    {
        "id": "1af29d44.2ba183",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "create index",
        "func": "var sortArray = msg.payload.sort.split(\", \");\nvar indices = [];\nvar sorts = [];\nfor(let sortString of sortArray){\n    let sort = sortString.split(\":\");\n    let key = sort[0];\n    sortObject = {};\n    indexObject = {};\n    indexObject.index = {\n        \"fields\":[key]\n    }\n    indexObject.name = key +\"-index\"\n    indexObject.type = \"json\"\n    indices.push(indexObject)\n    sortObject[key] = sort[1]\n    sorts.push(sortObject)\n}\n\nmsg.endpoint = env.get(\"INSECT_DB\") + \"/\" + msg.original.database + \"/_index\"\nmsg.payload = indices;\nmsg.sort = sorts;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "3c165dc5.fb2202"
            ]
        ]
    },
    {
        "id": "3c165dc5.fb2202",
        "type": "split",
        "z": "d35f6c55.31d32",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 160,
        "wires": [
            [
                "75c970a6.e57d4"
            ]
        ]
    },
    {
        "id": "75c970a6.e57d4",
        "type": "http request",
        "z": "d35f6c55.31d32",
        "name": "httpRequest1",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "{{{endpoint}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 200,
        "wires": [
            [
                "dff6c14a.70695"
            ]
        ]
    },
    {
        "id": "f17bc8e.8252738",
        "type": "change",
        "z": "d35f6c55.31d32",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "7e5c3bb8.856244"
            ]
        ]
    },
    {
        "id": "dff6c14a.70695",
        "type": "join",
        "z": "d35f6c55.31d32",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 430,
        "y": 240,
        "wires": [
            [
                "3b69a498.e7100c"
            ]
        ]
    },
    {
        "id": "9a462895.b433f8",
        "type": "http request",
        "z": "d35f6c55.31d32",
        "name": "httpRequest3",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "{{{endpoint}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1170,
        "y": 500,
        "wires": [
            [
                "d73ef9b1.a79b48"
            ]
        ]
    },
    {
        "id": "ed3e8b51.2f4258",
        "type": "http request",
        "z": "d35f6c55.31d32",
        "name": "httpRequest2",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{endpoint}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 320,
        "wires": [
            [
                "34e837c6.49fe18"
            ]
        ]
    },
    {
        "id": "3b69a498.e7100c",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "",
        "func": "msg.endpoint =msg.endpoint = env.get(\"INSECT_DB\") + \"/\" + msg.original.database; + \"/_all_doc\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 280,
        "wires": [
            [
                "ed3e8b51.2f4258"
            ]
        ]
    },
    {
        "id": "34e837c6.49fe18",
        "type": "json",
        "z": "d35f6c55.31d32",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 320,
        "wires": [
            [
                "e0500977.b80368"
            ]
        ]
    },
    {
        "id": "d73ef9b1.a79b48",
        "type": "json",
        "z": "d35f6c55.31d32",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1330,
        "y": 500,
        "wires": [
            [
                "70217e28.cd976"
            ]
        ]
    },
    {
        "id": "fbf69430.446098",
        "type": "switch",
        "z": "d35f6c55.31d32",
        "name": "statusCode 200?",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1190,
        "y": 680,
        "wires": [
            [],
            [
                "3dabe8fb.e50578",
                "9f92940.e232d7"
            ]
        ]
    },
    {
        "id": "a06a9919.a55ae8",
        "type": "subflow:6f7f441.17c58bc",
        "z": "d35f6c55.31d32",
        "name": "",
        "env": [],
        "x": 980,
        "y": 320,
        "wires": [
            [
                "7f2eb93e.8f52f8"
            ]
        ]
    },
    {
        "id": "e0500977.b80368",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "",
        "func": "msg.allDoc = msg.payload;\nlet selector = msg.original.selectors;\nlet keys = selector.split(\", \");\nfor(let key of keys){\n    if(key.includes(\"productionLine\")){\n        let value = key.split(\"=\")[1]\n        msg.productionLine= value;\n    }\n    else if(key.includes(\"workstationForm\")){\n        let value = key.split(\"=\")[1]\n        msg.workstationForm= value;\n    }\n    else if(key.includes(\"tenant\")){\n        let value = key.split(\"=\")[1]\n        msg.tenant= value;\n    }\n}\nmsg.tenant = \"001\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 320,
        "wires": [
            [
                "a06a9919.a55ae8"
            ]
        ]
    },
    {
        "id": "3dabe8fb.e50578",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "Generete Error in flow",
        "func": "var notification = flow.get('notification');\nif(notification != null){\n    object = {\n        accessId: msg.token.access_id,\n        message: \"400\"\n    }\n    notification.push(object);\n} else {\n    notification = [];\n     object = {\n        accessId: msg.token.access_id,\n        message: \"400\"\n    }\n    notification.push(object);\n}\nflow.set('notification', notification);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "aba49ced.12828",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "findKeys",
        "func": "// This is for environmentdata database only\n\nlet docs = msg.payload.docs // [{}]\nlet allKeys = []\n\n// [{temp: 30, distance: 20},\n// {temp: 20}]\n\n// [{temp: 30, distance: 20},\n// {temp: 20, distance: null}]\n\n// null\n// \"\"\n// \"n/a\"\n\nfor (let doc of docs) {\n    \n    for (let keyInDoc in doc) {\n        let foundKey = false;\n        \n        if(allKeys.length == 0) {\n            allKeys.push(keyInDoc)\n        }\n        \n        for(var x = 0; x < allKeys.length; x++) {\n            let key = allKeys[x];\n            if(key === keyInDoc) {\n                foundKey = true\n                break;\n            }\n        }\n        \n        if(foundKey == false) {\n            allKeys.push(keyInDoc);\n        }\n    }\n}\n\nfor (let doc of docs) {\n    for (var i = 0; i < allKeys.length; i++) {\n        let key = allKeys[i];\n        let foundKey = false;\n        let dynamicKey = \"\";\n        \n         for(let keyInDoc in doc) {\n            \n            if(key === keyInDoc) {\n                foundKey = true\n                break;\n            }\n        }\n        \n        if(foundKey == false) {\n            dynamicKey = allKeys[i]\n            doc[dynamicKey] = null;\n        }\n    }\n}\n\nmsg.payload.docs = docs;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "9f92940.e232d7",
        "type": "cloudantplus out",
        "z": "d35f6c55.31d32",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "payonly": false,
        "operation": "insert",
        "x": 1460,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "7e5c3bb8.856244",
        "type": "switch",
        "z": "d35f6c55.31d32",
        "name": "",
        "property": "payload.database",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "environmentdata",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 80,
        "wires": [
            [
                "95b9f5c4.a3ff18"
            ],
            [
                "c47f33f5.4cf0e"
            ]
        ]
    },
    {
        "id": "95b9f5c4.a3ff18",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "",
        "func": "msg.payload = {}\n\nlet selectors = msg.original.selectors;\nlet locationtest\nlet split\nlet location\nlet startTime\nlet startTimetest\nlet endTime\nlet endTimetest\n\nlet keys= []; \n\n\n\nif(selectors.includes(\"location=\")) {\n    split = selectors.split(',');\n    location = split[0].replace(/\\s+/g, '');\n    locationtest  = location.replace(\"location=\", '');\n\n    \n    startTime = split[1].replace(/\\s+/g, '');\n    startTimetest = parseInt(startTime.replace(\"ts>=\", ''));\n\n    endTime = split[2].replace(/\\s+/g, '');\n    endTimetest = parseInt(endTime.replace(\"ts<=\", ''));\n    \n    let body = {};\n    body.startkey = [startTimetest];\n    body.endkey = [endTimetest];\n    keys = body;\n    // keys.push(body);\n    \n    node.warn(keys);\n\n} else {\n    split = selectors.split(',');\n    location = split[0].replace(/\\s+/g, '');\n    locationtest  = location.replace(\"locationin\", '');\n    \n    startTime = split[split.length-2].replace(/\\s+/g, '');\n    startTimetest = parseInt(startTime.replace(\"ts>=\", ''));\n\n    endTime = split[split.length-1].replace(/\\s+/g, '');\n    endTimetest = parseInt(endTime.replace(\"ts<=\", ''));\n    \n    let body = {};\n    body.startkey = [startTimetest];\n    body.endkey = [endTimetest];\n    keys = body;\n    // keys.push(body);\n    \n    // for(var x = 1; x < split.length - 2; x++ ) {\n    //     locationtest = locationtest.concat(\",\"+split[x]);\n    //     body.startkey = [locationtest,startTimetest];\n    //     body.endkey = [locationtest,endTimetest];\n    //     keys.push(body);\n    // }\n}\nlet query = {}\nquery = keys;\n// msg.endpoint = env.get(\"INSECT_DB\") + \"/\" + msg.original.database + \"/_design/locationWithTime/_view/locationWithTime\";\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 80,
        "wires": [
            [
                "f7d32c38.755bf"
            ]
        ]
    },
    {
        "id": "f7d32c38.755bf",
        "type": "cloudantplus in",
        "z": "d35f6c55.31d32",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "environmentdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "locationWithTime",
        "index": "locationWithTime",
        "x": 950,
        "y": 140,
        "wires": [
            [
                "cf9a7b5c.118cd8"
            ]
        ]
    },
    {
        "id": "cf9a7b5c.118cd8",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "onlyValueInPayload",
        "func": "for(var x = 0; x < msg.payload.length; x++) {\n    msg.payload[x] = msg.payload[x].value;\n}\n\nlet docs = msg.payload;\n\nmsg.payload = {};\n\nmsg.payload.docs = docs;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 140,
        "wires": [
            [
                "b90b1b3e.7d8848"
            ]
        ]
    },
    {
        "id": "b90b1b3e.7d8848",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "",
        "func": "let selectors = msg.original.selectors;\nvar split;\nvar location;\nvar locationtest;\n\nif(selectors.includes(\"location=\")) {\n    split = selectors.split(',');\n    location = split[0].replace(/\\s+/g, '');\n    locationtest  = location.replace(\"location=\", '');\n    \n    msg.payload.docs = msg.payload.docs.filter(function(doc) {\n        return doc.location == locationtest;\n    });\n} else {\n    split = selectors.split(',');\n    location = split[0].replace(/\\s+/g, '');\n    locationtest  = location.replace(\"locationin\", '');\n    \n    for(var x = 1; x < split.length - 2; x++ ) {\n        locationtest = locationtest.concat(\",\"+split[x]);\n    }\n    array = locationtest.split(',');\n    msg.payload.docs = msg.payload.docs.filter(function(doc) {\n        for(var y = 0; y < array.length; y++){\n            if(doc.location == array[y]) {\n                return true\n            }\n            \n        }\n    });\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 180,
        "wires": [
            [
                "aba49ced.12828"
            ]
        ]
    },
    {
        "id": "da998989.5ad0a8",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "change Selector to Timestamp",
        "func": "msg.payload = msg.payloadForGetAllDoc\n\nmsg.payload.selector['timestamp'] = msg.payload.selector['submission_timestamp']\ndelete msg.payload.selector['submission_timestamp'];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 580,
        "wires": [
            [
                "187cc18c.79da9e"
            ]
        ]
    },
    {
        "id": "54ceae6b.60664",
        "type": "delay",
        "z": "d35f6c55.31d32",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 460,
        "y": 440,
        "wires": [
            [
                "66c9f63e.b69418"
            ]
        ]
    },
    {
        "id": "66c9f63e.b69418",
        "type": "cloudantplus in",
        "z": "d35f6c55.31d32",
        "name": "insectConfigBlue",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "blueprint",
        "index": "blueprint",
        "x": 470,
        "y": 480,
        "wires": [
            [
                "fa6d2837.488bf8"
            ]
        ]
    },
    {
        "id": "df5d3a65.fc36d8",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "preparePayloadForBlueprint",
        "func": "let query = {}\nquery[\"key\"] = [msg.tenant, msg.productionLine, msg.workstationForm];\n\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 400,
        "wires": [
            [
                "54ceae6b.60664"
            ]
        ]
    },
    {
        "id": "fa6d2837.488bf8",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "checkBlueprintHasTimestamp",
        "func": "//fields\nlet templates = msg.payload[0].value.template;\nmsg.hasTimestamp = false;\n//level 1 search for timestamp key\n\nfor(var x = 0; x < templates.length; x++ ) {\n    let template = templates[x];\n    \n    if(template['key'] && template['key'] == \"timestamp\") {\n        msg.hasTimestamp = true;\n    }\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 520,
        "wires": [
            [
                "c594a781.464f68"
            ]
        ]
    },
    {
        "id": "c594a781.464f68",
        "type": "switch",
        "z": "d35f6c55.31d32",
        "name": "",
        "property": "hasTimestamp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 580,
        "wires": [
            [
                "da998989.5ad0a8"
            ],
            [
                "e4310f68.52ce9"
            ]
        ]
    },
    {
        "id": "e4310f68.52ce9",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "submissionTimeStamp",
        "func": "msg.payload = msg.payloadForGetAllDoc;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 620,
        "wires": [
            [
                "187cc18c.79da9e"
            ]
        ]
    },
    {
        "id": "2c22d8b0.1f6538",
        "type": "moment",
        "z": "3517e109.8c2a3e",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "17",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "expectedBatchId",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 2040,
        "y": 1340,
        "wires": [
            [
                "742b4f50.2d026"
            ]
        ]
    },
    {
        "id": "742b4f50.2d026",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Set expected batchId",
        "func": "msg.payload.expectedBatchId = msg.expectedBatchId;\nmsg.payload.rackUsed = false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2280,
        "y": 1340,
        "wires": [
            [
                "ccfccc24.52c63"
            ]
        ]
    },
    {
        "id": "38a6aef6.fa7c42",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "set expected batchId",
        "links": [
            "40f0914e.c32ff"
        ],
        "x": 1895,
        "y": 1340,
        "wires": [
            [
                "2c22d8b0.1f6538"
            ]
        ]
    },
    {
        "id": "ccfccc24.52c63",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "msg.original = msg.payload;\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"pupationRackID\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2470,
        "y": 1340,
        "wires": [
            [
                "bc96e797.066518"
            ]
        ]
    },
    {
        "id": "bc96e797.066518",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 2730,
        "y": 1340,
        "wires": [
            [
                "2247ae5.9aae152"
            ]
        ]
    },
    {
        "id": "2247ae5.9aae152",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2430,
        "y": 1400,
        "wires": [
            [
                "d473d0d5.adb22"
            ],
            [
                "6980cb80.4493d4"
            ],
            [
                "c41656f4.061118"
            ]
        ]
    },
    {
        "id": "d473d0d5.adb22",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2670,
        "y": 1400,
        "wires": [
            [
                "c2ef3daf.1dee9"
            ]
        ]
    },
    {
        "id": "6980cb80.4493d4",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2670,
        "y": 1440,
        "wires": [
            [
                "6a3f037c.6da80c"
            ]
        ]
    },
    {
        "id": "c41656f4.061118",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2670,
        "y": 1500,
        "wires": [
            [
                "d7e8ac2.a2df65"
            ]
        ]
    },
    {
        "id": "c2ef3daf.1dee9",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"prePupaeChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2850,
        "y": 1400,
        "wires": [
            [
                "76b50ee4.e654a"
            ]
        ]
    },
    {
        "id": "6a3f037c.6da80c",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 2860,
        "y": 1440,
        "wires": []
    },
    {
        "id": "d7e8ac2.a2df65",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 2860,
        "y": 1500,
        "wires": []
    },
    {
        "id": "76b50ee4.e654a",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 2950,
        "y": 1340,
        "wires": [
            [
                "3b3b711f.86f51e"
            ]
        ]
    },
    {
        "id": "3b3b711f.86f51e",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3030,
        "y": 1400,
        "wires": [
            [
                "e3fbdf0.c8dbb2"
            ],
            [
                "3927c774.300048"
            ],
            [
                "b4443b1d.a522d8"
            ]
        ]
    },
    {
        "id": "e3fbdf0.c8dbb2",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3210,
        "y": 1360,
        "wires": [
            [
                "bf0ad2cc.f798b"
            ]
        ]
    },
    {
        "id": "3927c774.300048",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3230,
        "y": 1400,
        "wires": [
            [
                "66a611d8.24aff"
            ]
        ]
    },
    {
        "id": "b4443b1d.a522d8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3230,
        "y": 1460,
        "wires": [
            [
                "34d72804.7325b8"
            ]
        ]
    },
    {
        "id": "bf0ad2cc.f798b",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "oriPayload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3420,
        "y": 1360,
        "wires": [
            [
                "46f8796.b53b088"
            ]
        ]
    },
    {
        "id": "66a611d8.24aff",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3440,
        "y": 1400,
        "wires": []
    },
    {
        "id": "34d72804.7325b8",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3440,
        "y": 1460,
        "wires": []
    },
    {
        "id": "46f8796.b53b088",
        "type": "subflow:f4445896.32f858",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 3680,
        "y": 1360,
        "wires": [
            [
                "a387c632.2215e8"
            ]
        ]
    },
    {
        "id": "a387c632.2215e8",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "oriPayload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3920,
        "y": 1360,
        "wires": [
            [
                "7aee1221.f0b5fc"
            ]
        ]
    },
    {
        "id": "7aee1221.f0b5fc",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const chamberId = msg.original.prePupaeChamberId;\nconst chamber = msg.chamber;\nconst rack = msg.rack;\nconst rackId = msg.original.pupationRackID;\nvar exceedCapacity = false\nvar availableNumber = 0;\n\nvar rackOccupied;\nvar chamberOccupied;\nvar inPupationChamber = false;\nvar inAnotherPrePupaeChamber = false;\nvar inPrePupaeChamber;\n\nif(rack.options[rackId].pupationChamberId){\n    //check the rack isit inside the chamber\n    inPupationChamber=true\n}\nelse{\n    //rack is not inside the chamber\n    if(chamber.options[chamberId].status == \"OCCUPIED\"){\n        chamberOccupied = true;\n    }\n    else{\n        chamberOccupied = false;\n        \n        // if(!chamber.options[chamberId].batchIdList){\n        //     chamber.options[chamberId].batchIdList =[]\n        // }\n        // for(let batchId of msg.original.batchId){\n        //     if(!chamber.options[chamberId].batchIdList.includes(batchId)){\n        //         chamber.options[chamberId].batchIdList.push(batchId)\n        //     }\n        // }\n        if(!chamber.options[chamberId].rackIdList){\n            chamber.options[chamberId].rackIdList =[]\n        }\n        if(!chamber.options[chamberId].rackIdList.includes(rackId)){\n                chamber.options[chamberId].rackIdList.push(rackId)\n                chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n        }\n        \n        if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n            chamber.options[chamberId].status = \"OCCUPIED\"\n        }\n        else{\n            chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n        }\n    }\n    \n    \n    if(rack.options[rackId].status == \"OCCUPIED\"){\n        rackOccupied = true;\n    }\n    else{\n        \n        rackOccupied = false;\n        \n        // if(!rack.options[rackId].batchIdList){\n        //   rack.options[rackId].batchIdList =[]\n        // }\n        // for(let batchId of msg.original.batchId){\n        //     if(!rack.options[rackId].batchIdList.includes(batchId)){\n        //         rack.options[rackId].batchIdList.push(batchId)\n        //     }\n        // }\n        if(!rack.options[rackId].setupDateId){\n            rack.options[rackId].setupDateId = {};\n        }\n        \n        if(rack.options[rackId].setupDateId[msg.setupDateId]) {\n            rack.options[rackId].setupDateId[msg.setupDateId] = parseFloat(rack.options[rackId].setupDateId[msg.setupDateId])+parseFloat(msg.original.trayCount)\n        }else {\n            rack.options[rackId].setupDateId[msg.setupDateId] = parseFloat(msg.original.trayCount);\n        }\n        \n        \n        if(rack.options[rackId].prePupaeChamberId){\n            if(rack.options[rackId].prePupaeChamberId !=chamberId){\n                inAnotherPrePupaeChamber = true;\n                inPrePupaeChamber = rack.options[rackId].prePupaeChamberId\n            }\n        }\n        rack.options[rackId].prePupaeChamberId = chamberId;\n        rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n        if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n            exceedCapacity = true\n            availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n        }\n        else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n            rack.options[rackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n    \n    }\n}\n\n\nmsg.error = false;\nif(inAnotherPrePupaeChamber){\n    msg.error = true;\n    msg.errMsg=\"The rack is in another Pre Pupae Chamber. Do you mean: \" + inPrePupaeChamber\n}\nelse if(inPupationChamber){\n    msg.error = true;\n    msg.errMsg = \"The rack is in pupation chamber\";\n}\nelse if(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(rackOccupied && chamberOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Rack and Chamber are occupied\";\n}\nelse if(rackOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Rack is occupied\";\n}\nelse if(chamberOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Chamber is occupied\";\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4080,
        "y": 1360,
        "wires": [
            [
                "26b0bb5e.4c2834"
            ]
        ]
    },
    {
        "id": "26b0bb5e.4c2834",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4235,
        "y": 1361.000020980835,
        "wires": [
            [
                "c13398d5.fe5c28"
            ],
            [
                "67b1df1a.0384c"
            ]
        ]
    },
    {
        "id": "c13398d5.fe5c28",
        "type": "split",
        "z": "3517e109.8c2a3e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4275,
        "y": 1301.000020980835,
        "wires": [
            [
                "36c46c76.450ea4"
            ]
        ]
    },
    {
        "id": "67b1df1a.0384c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4335,
        "y": 1421.000020980835,
        "wires": [
            [
                "632a5775.510c48"
            ]
        ]
    },
    {
        "id": "36c46c76.450ea4",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4405,
        "y": 1301.000020980835,
        "wires": [
            [
                "55c5ce7f.7f45a"
            ]
        ]
    },
    {
        "id": "632a5775.510c48",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 4565,
        "y": 1421.000020980835,
        "wires": []
    },
    {
        "id": "55c5ce7f.7f45a",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 4555,
        "y": 1301.000020980835,
        "wires": [
            [
                "cd4a1b25.ca7a98"
            ]
        ]
    },
    {
        "id": "cd4a1b25.ca7a98",
        "type": "join",
        "z": "3517e109.8c2a3e",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4695,
        "y": 1301.000020980835,
        "wires": [
            [
                "bec1ff9b.aaa42"
            ]
        ]
    },
    {
        "id": "bec1ff9b.aaa42",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4845,
        "y": 1301.000020980835,
        "wires": [
            [
                "259d9fa2.e8541"
            ]
        ]
    },
    {
        "id": "259d9fa2.e8541",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "prepare master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 4980,
        "y": 1301.000020980835,
        "wires": []
    },
    {
        "id": "9313a616.6fae18",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Populate expectedBatchId",
        "info": "",
        "x": 2050,
        "y": 1280,
        "wires": []
    },
    {
        "id": "78253920.2d4758",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Check Pupation Chamber and Rack Occupied",
        "info": "",
        "x": 2590,
        "y": 1300,
        "wires": []
    },
    {
        "id": "4f8d364a.44df28",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const chamberId = msg.original.prePupaeChamberId;\nconst chamber = msg.chamber;\nconst rack = msg.rack;\nconst rackId = msg.original.pupationRackID;\nvar exceedCapacity = false\nvar availableNumber = 0;\n\nvar rackOccupied;\nvar chamberOccupied;\nvar inPupationChamber = false;\nvar inAnotherPrePupaeChamber = false;\nvar inPrePupaeChamber;\n\nif(rack.options[rackId].pupationChamberId){\n    inPupationChamber=true\n}\nelse{\n    if(chamber.options[chamberId].status == \"OCCUPIED\"){\n        chamberOccupied = true;\n    }\n    else{\n        chamberOccupied = false;\n        \n        // if(!chamber.options[chamberId].batchIdList){\n        //     chamber.options[chamberId].batchIdList =[]\n        // }\n        // for(let batchId of msg.original.batchId){\n        //     if(!chamber.options[chamberId].batchIdList.includes(batchId)){\n        //         chamber.options[chamberId].batchIdList.push(batchId)\n        //     }\n        // }\n        if(!chamber.options[chamberId].rackIdList){\n            chamber.options[chamberId].rackIdList =[]\n        }\n        if(!chamber.options[chamberId].rackIdList.includes(rackId)){\n                chamber.options[chamberId].rackIdList.push(rackId)\n                chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n        }\n        \n        if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n            chamber.options[chamberId].status = \"OCCUPIED\"\n        }\n        else{\n            chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n        }\n    }\n    \n    \n    if(rack.options[rackId].status == \"OCCUPIED\"){\n        rackOccupied = true;\n    }\n    else{\n        \n        rackOccupied = false;\n        \n        if(!rack.options[rackId].batchIdList){\n           rack.options[rackId].batchIdList =[]\n        }\n        for(let batchId of msg.original.batchId){\n            if(!rack.options[rackId].batchIdList.includes(batchId)){\n                rack.options[rackId].batchIdList.push(batchId)\n            }\n        }\n        if(rack.options[rackId].prePupaeChamberId){\n            if(rack.options[rackId].prePupaeChamberId !=chamberId){\n                inAnotherPrePupaeChamber = true;\n                inPrePupaeChamber = rack.options[rackId].prePupaeChamberId\n            }\n        }\n        rack.options[rackId].prePupaeChamberId = chamberId;\n        rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n        if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n            exceedCapacity = true\n            availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n        }\n        else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n            rack.options[rackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n    \n    }\n}\n\n\nmsg.error = false;\nif(inAnotherPrePupaeChamber){\n    msg.error = true;\n    msg.errMsg=\"The rack is in another Pre Pupae Chamber. Do you mean: \" + inPrePupaeChamber\n}\nelse if(inPupationChamber){\n    msg.error = true;\n    msg.errMsg = \"The rack is in pupation chamber\";\n}\nelse if(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(rackOccupied && chamberOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Rack and Chamber are occupied\";\n}\nelse if(rackOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Rack is occupied\";\n}\nelse if(chamberOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Chamber is occupied\";\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4000,
        "y": 1280,
        "wires": [
            []
        ]
    },
    {
        "id": "117edad5.783a25",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "backup",
        "info": "",
        "x": 3990,
        "y": 1260,
        "wires": []
    },
    {
        "id": "fe045ac5.ca00b8",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2410,
        "y": 1660,
        "wires": [
            [
                "dbbcee13.c3c34"
            ],
            [
                "eaaf657.15f5d98"
            ],
            [
                "4a7d0f3f.8c7ed"
            ]
        ]
    },
    {
        "id": "2c771dca.5e1f92",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 2710,
        "y": 1600,
        "wires": [
            [
                "fe045ac5.ca00b8"
            ]
        ]
    },
    {
        "id": "dbbcee13.c3c34",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "preChamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2660,
        "y": 1660,
        "wires": [
            [
                "c2e1ae80.f145c"
            ]
        ]
    },
    {
        "id": "eaaf657.15f5d98",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2650,
        "y": 1700,
        "wires": [
            [
                "d70720a3.f7c7e"
            ]
        ]
    },
    {
        "id": "4a7d0f3f.8c7ed",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2650,
        "y": 1760,
        "wires": [
            [
                "ecdf0717.509b18"
            ]
        ]
    },
    {
        "id": "b0970bfd.3c5ce8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "msg.original = msg.payload;\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"prePupaeChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2490,
        "y": 1600,
        "wires": [
            [
                "2c771dca.5e1f92"
            ]
        ]
    },
    {
        "id": "c2e1ae80.f145c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"pupationChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2830,
        "y": 1660,
        "wires": [
            [
                "7709ba84.205e94"
            ]
        ]
    },
    {
        "id": "d70720a3.f7c7e",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 2840,
        "y": 1700,
        "wires": []
    },
    {
        "id": "ecdf0717.509b18",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 2840,
        "y": 1760,
        "wires": []
    },
    {
        "id": "d7c890f6.7bf7c",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "pupation emergence setup",
        "links": [
            "c893e2c5.cdf9d"
        ],
        "x": 2355,
        "y": 1600,
        "wires": [
            [
                "b0970bfd.3c5ce8"
            ]
        ]
    },
    {
        "id": "7709ba84.205e94",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 2930,
        "y": 1600,
        "wires": [
            [
                "73ed6c.36d36294"
            ]
        ]
    },
    {
        "id": "73ed6c.36d36294",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3010,
        "y": 1660,
        "wires": [
            [
                "1fda47bb.70efe8"
            ],
            [
                "22d28abd.e67096"
            ],
            [
                "932e7ec7.85276"
            ]
        ]
    },
    {
        "id": "1fda47bb.70efe8",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3190,
        "y": 1620,
        "wires": [
            [
                "44b14023.075bf"
            ]
        ]
    },
    {
        "id": "22d28abd.e67096",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3210,
        "y": 1660,
        "wires": [
            [
                "73725585.aa7fbc"
            ]
        ]
    },
    {
        "id": "932e7ec7.85276",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3210,
        "y": 1720,
        "wires": [
            [
                "ef786be1.b42558"
            ]
        ]
    },
    {
        "id": "44b14023.075bf",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"pupationRackID\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3370,
        "y": 1620,
        "wires": [
            [
                "eb061fa1.d1457"
            ]
        ]
    },
    {
        "id": "73725585.aa7fbc",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3420,
        "y": 1660,
        "wires": []
    },
    {
        "id": "ef786be1.b42558",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3420,
        "y": 1720,
        "wires": []
    },
    {
        "id": "eb061fa1.d1457",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 3490,
        "y": 1580,
        "wires": [
            [
                "7a296e8c.d675f"
            ]
        ]
    },
    {
        "id": "7a296e8c.d675f",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3570,
        "y": 1640,
        "wires": [
            [
                "8ac9733.feb089"
            ],
            [
                "49b8a0bb.2e298"
            ],
            [
                "1c2fccde.37e873"
            ]
        ]
    },
    {
        "id": "8ac9733.feb089",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3730,
        "y": 1600,
        "wires": [
            [
                "a1df5757.8a4d18"
            ]
        ]
    },
    {
        "id": "49b8a0bb.2e298",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3770,
        "y": 1640,
        "wires": [
            [
                "c1adc9ee.cb22e8"
            ]
        ]
    },
    {
        "id": "1c2fccde.37e873",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3770,
        "y": 1700,
        "wires": [
            [
                "725afaff.33dee4"
            ]
        ]
    },
    {
        "id": "a1df5757.8a4d18",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "oriPayload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3700,
        "y": 1560,
        "wires": [
            [
                "18df8a69.ba19b6"
            ]
        ]
    },
    {
        "id": "c1adc9ee.cb22e8",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3960,
        "y": 1640,
        "wires": []
    },
    {
        "id": "725afaff.33dee4",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 3960,
        "y": 1700,
        "wires": []
    },
    {
        "id": "18df8a69.ba19b6",
        "type": "subflow:f4445896.32f858",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 3740,
        "y": 1520,
        "wires": [
            [
                "bf56340c.ee1528"
            ]
        ]
    },
    {
        "id": "bf56340c.ee1528",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "oriPayload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3840,
        "y": 1480,
        "wires": [
            [
                "7c941f0b.f6af1"
            ]
        ]
    },
    {
        "id": "7c941f0b.f6af1",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const preChamber = msg.preChamber;\nconst chamber = msg.chamber;\nconst chamberId = msg.original.pupationChamberId;\nconst rackId = msg.original.pupationRackID;\nconst rack = msg.rack;\nvar exceedCapacity = false;\nvar rackOccupied = false;\nvar chamberOccupied = false;\nvar availableNumber;\nvar notValid = false;\nvar inAnotherPupationChamber = false;\nvar inPupationChamber;\nif(chamber.options[chamberId].status == \"OCCUPIED\"){\n    chamberOccupied = true;\n}\nelse{\n    chamberOccupied = false;\n\n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList =[]\n    }\n    if(!chamber.options[chamberId].rackIdList.includes(rackId)){\n            chamber.options[chamberId].rackIdList.push(rackId)\n            chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n    }\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n}\n\n\n//from prePupaeChamber to pupae, assuming only one setupId per rack\nif(rack.options[rackId].prePupaeChamberId){\n    node.warn(\"pre to pupa process\")\n    \n    rack.options[rackId].pupationChamberId = chamberId;\n    var preChamberId = rack.options[rackId].prePupaeChamberId\n    preChamber.options[preChamberId].occupiedCapacity = preChamber.options[preChamberId].occupiedCapacity -1;\n    preChamber.options[preChamberId].rackIdList.splice(preChamber.options[preChamberId].rackIdList.indexOf(rackId));\n    if(preChamber.options[preChamberId].occupiedCapacity == 0){\n        preChamber.options[preChamberId].status = \"AVAILABLE\"\n    }\n    else{\n        preChamber.options[preChamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n        \n        if(!rack.options[rackId].setupDateId){\n          rack.options[rackId].setupDateId = {}\n        }\n        \n        rack.options[rackId].setupDateId[msg.setupDateId] = parseFloat(msg.original.trayCount);\n        \n    \n    rack.options[rackId].occupiedCapacity = parseFloat(msg.original.trayCount);\n    if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n        exceedCapacity = true\n        availableNumber = rack.options[rackId].capacity;\n    }\n    else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n        rack.options[rackId].status = \"OCCUPIED\"\n    }\n    else{\n        rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n    }    \n    delete rack.options[rackId].prePupaeChamberId;\n}\nelse if(rack.options[rackId].pupationChamberId){\n    //add tray to this rack (PUPA chamber)\n    node.warn(\"add tray to pupa\")\n    \n    if(rack.options[rackId].status == \"OCCUPIED\"){\n        rackOccupied = true;\n    }\n    else{\n        rackOccupied = false;\n        if(rack.options[rackId].pupationChamberId != chamberId){\n            inAnotherPupationChamber = true;\n            inPupationChamber = rack.options[rackId].pupationChamberId\n        }\n        // if(!rack.options[rackId].batchIdList){\n        //   rack.options[rackId].batchIdList =[]\n        // }\n        \n         if(!rack.options[rackId].setupDateId){\n           rack.options[rackId].setupDateId = {}\n        }\n        \n        \n        if(rack.options[rackId].setupDateId[msg.setupDateId]) {\n            rack.options[rackId].setupDateId[msg.setupDateId] = parseFloat(rack.options[rackId].setupDateId[msg.setupDateId])+parseFloat(msg.original.trayCount)\n        }else {\n            rack.options[rackId].setupDateId[msg.setupDateId] = parseFloat(msg.original.trayCount);\n        }\n            \n            \n        rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n        if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n            exceedCapacity = true\n            availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n        }\n        else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n            rack.options[rackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n    \n    }\n    \n}\nelse{\n    //not from prepupae chamber and not in pupation chamber\n    notValid = true;\n}\n\n\n\n    \n    // rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n    // if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n    //     exceedCapacity = true\n    //     availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n    // }\n    // else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n    //     rack.options[rackId].status = \"OCCUPIED\"\n    // }\n    // else{\n    //     rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n    // }\n    \n\n\n\nmsg.error = false;\nif(notValid){\n    msg.error = true;\n    msg.errMsg = \"The rack is not from PrePupae Chamber and not in Pupation Chamber.\"\n}\nelse if(inAnotherPupationChamber){\n    msg.error = true;\n    msg.errMsg = \"The rack is in another Pupation Chamber. Do you mean: \" + inPupationChamber;\n}\nelse if(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(rackOccupied && chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack and Chamber are occupied\";\n}\nelse if(rackOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack is occupied\";\n}\nelse if(chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Chamber is occupied\";\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.preChamber = preChamber;\nmsg.payload = [\"rack\", \"chamber\", \"preChamber\"]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4000,
        "y": 1600,
        "wires": [
            [
                "f5b246f9.890aa8"
            ]
        ]
    },
    {
        "id": "f5b246f9.890aa8",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4130,
        "y": 1600,
        "wires": [
            [
                "b52e72bd.f48f6"
            ],
            [
                "b70c8302.6d99f"
            ]
        ]
    },
    {
        "id": "b52e72bd.f48f6",
        "type": "split",
        "z": "3517e109.8c2a3e",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 4190,
        "y": 1520,
        "wires": [
            [
                "8330b9af.b4fa98"
            ]
        ]
    },
    {
        "id": "b70c8302.6d99f",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4270,
        "y": 1660,
        "wires": [
            [
                "daaa11dd.51b87"
            ]
        ]
    },
    {
        "id": "8330b9af.b4fa98",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4320,
        "y": 1520,
        "wires": [
            [
                "23efaef7.fb2fc2"
            ]
        ]
    },
    {
        "id": "daaa11dd.51b87",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 4500,
        "y": 1660,
        "wires": []
    },
    {
        "id": "23efaef7.fb2fc2",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 4470,
        "y": 1520,
        "wires": [
            [
                "e182f4c6.e10718"
            ]
        ]
    },
    {
        "id": "e182f4c6.e10718",
        "type": "join",
        "z": "3517e109.8c2a3e",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 4610,
        "y": 1520,
        "wires": [
            [
                "c90fa09.cd7ff6"
            ]
        ]
    },
    {
        "id": "c90fa09.cd7ff6",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4760,
        "y": 1520,
        "wires": [
            [
                "d9a1b13c.28d84"
            ]
        ]
    },
    {
        "id": "d9a1b13c.28d84",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "prepare master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 4895,
        "y": 1560,
        "wires": []
    },
    {
        "id": "2b1258f6.3a4ba8",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Check Pupation Chamber Occupied",
        "info": "",
        "x": 2560,
        "y": 1560,
        "wires": []
    },
    {
        "id": "21a8b4c9.0c067c",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "pupa emergence",
        "info": "",
        "x": 2800,
        "y": 1560,
        "wires": []
    },
    {
        "id": "2fe15524.f7750a",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "backup",
        "info": "",
        "x": 4030,
        "y": 1520,
        "wires": []
    },
    {
        "id": "2e1b3eff.60af92",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const preChamber = msg.preChamber;\nconst chamber = msg.chamber;\nconst chamberId = msg.original.pupationChamberId;\nconst rackId = msg.original.pupationRackID;\nconst rack = msg.rack;\nvar exceedCapacity = false;\nvar rackOccupied = false;\nvar chamberOccupied = false;\nvar availableNumber;\nvar notValid = false;\nvar inAnotherPupationChamber = false;\nvar inPupationChamber;\nif(chamber.options[chamberId].status == \"OCCUPIED\"){\n    chamberOccupied = true;\n}\nelse{\n    chamberOccupied = false;\n    \n    // if(!chamber.options[chamberId].batchIdList){\n    //     chamber.options[chamberId].batchIdList =[]\n    // }\n    // for(let batchId of msg.original.batchId){\n    //     if(!chamber.options[chamberId].batchIdList.includes(batchId)){\n    //         chamber.options[chamberId].batchIdList.push(batchId)\n    //     }\n    // }\n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList =[]\n    }\n    if(!chamber.options[chamberId].rackIdList.includes(rackId)){\n            chamber.options[chamberId].rackIdList.push(rackId)\n            chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n    }\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n}\n\n\n//from prePupaeChamber\nif(rack.options[rackId].prePupaeChamberId){\n    rack.options[rackId].pupationChamberId = chamberId;\n    var preChamberId = rack.options[rackId].prePupaeChamberId\n    console.log(preChamberId)\n    preChamber.options[preChamberId].occupiedCapacity = preChamber.options[preChamberId].occupiedCapacity -1;\n    preChamber.options[preChamberId].rackIdList.splice(preChamber.options[preChamberId].rackIdList.indexOf(rackId));\n    if(preChamber.options[preChamberId].occupiedCapacity == 0){\n        preChamber.options[preChamberId].status = \"AVAILABLE\"\n    }\n    else{\n        preChamber.options[preChamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n    \n        if(!rack.options[rackId].batchIdList){\n            node.warn(\"ASDA\");\n           rack.options[rackId].batchIdList =[]\n        }\n        \n        // Sprint 14 - No more batchId field, but kept it for reference\n        if (msg.original.batchId) for(let batchId of msg.original.batchId){\n            if(!rack.options[rackId].batchIdList.includes(batchId)){\n                rack.options[rackId].batchIdList.push(batchId)\n            }\n        }\n    \n    rack.options[rackId].occupiedCapacity = parseFloat(msg.original.trayCount);\n    if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n        exceedCapacity = true\n        availableNumber = rack.options[rackId].capacity;\n    }\n    else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n        rack.options[rackId].status = \"OCCUPIED\"\n    }\n    else{\n        rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n    }    \n    delete rack.options[rackId].prePupaeChamberId;\n}\nelse if(rack.options[rackId].pupationChamberId){\n    //add tray to this rack\n    if(rack.options[rackId].status == \"OCCUPIED\"){\n        rackOccupied = true;\n    }\n    else{\n        rackOccupied = false;\n        if(rack.options[rackId].pupationChamberId != chamberId){\n            inAnotherPupationChamber = true;\n            inPupationChamber = rack.options[rackId].pupationChamberId\n        }\n        if(!rack.options[rackId].batchIdList){\n           rack.options[rackId].batchIdList =[]\n        }\n        \n        // Sprint 14 - No more batchId field, but kept it for reference\n        if (msg.original.batchId) for(let batchId of msg.original.batchId){\n            if(!rack.options[rackId].batchIdList.includes(batchId)){\n                rack.options[rackId].batchIdList.push(batchId)\n            }\n        }\n        rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n        if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n            exceedCapacity = true\n            availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n        }\n        else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n            rack.options[rackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n    \n    }\n    \n}\nelse{\n    //not from prepupae chamber and not in pupation chamber\n    notValid = true;\n}\n\n\n\n    \n    // rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n    // if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n    //     exceedCapacity = true\n    //     availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n    // }\n    // else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n    //     rack.options[rackId].status = \"OCCUPIED\"\n    // }\n    // else{\n    //     rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n    // }\n    \n\n\n\nmsg.error = false;\nif(notValid){\n    msg.error = true;\n    msg.errMsg = \"The rack is not from PrePupae Chamber and not in Pupation Chamber.\"\n}\nelse if(inAnotherPupationChamber){\n    msg.error = true;\n    msg.errMsg = \"The rack is in another Pupation Chamber. Do you mean: \" + inPupationChamber;\n}\nelse if(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(rackOccupied && chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack and Chamber are occupied\";\n}\nelse if(rackOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack is occupied\";\n}\nelse if(chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Chamber is occupied\";\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.preChamber = preChamber;\nmsg.payload = [\"rack\", \"chamber\", \"preChamber\"]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4020,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "d540c9a9.a00438",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "const preChamber = msg.preChamber;\nconst chamber = msg.chamber;\nconst chamberId = msg.original.pupationChamberId;\nconst rackId = msg.original.pupationRackID;\nconst rack = msg.rack;\nvar exceedCapacity = false;\nvar rackOccupied = false;\nvar chamberOccupied = false;\nvar availableNumber;\nvar notValid = false;\nvar inAnotherPupationChamber = false;\nvar inPupationChamber;\nif(chamber.options[chamberId].status == \"OCCUPIED\"){\n    chamberOccupied = true;\n}\nelse{\n    chamberOccupied = false;\n    \n    // if(!chamber.options[chamberId].batchIdList){\n    //     chamber.options[chamberId].batchIdList =[]\n    // }\n    // for(let batchId of msg.original.batchId){\n    //     if(!chamber.options[chamberId].batchIdList.includes(batchId)){\n    //         chamber.options[chamberId].batchIdList.push(batchId)\n    //     }\n    // }\n    if(!chamber.options[chamberId].rackIdList){\n        chamber.options[chamberId].rackIdList =[]\n    }\n    if(!chamber.options[chamberId].rackIdList.includes(rackId)){\n            chamber.options[chamberId].rackIdList.push(rackId)\n            chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n    }\n    if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n        chamber.options[chamberId].status = \"OCCUPIED\"\n    }\n    else{\n        chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n}\n\n\n//from prePupaeChamber to pupae, assuming only one setupId per rack\nif(rack.options[rackId].prePupaeChamberId){\n    node.warn(\"pre to pupa process\")\n    \n    rack.options[rackId].pupationChamberId = chamberId;\n    var preChamberId = rack.options[rackId].prePupaeChamberId\n    preChamber.options[preChamberId].occupiedCapacity = preChamber.options[preChamberId].occupiedCapacity -1;\n    preChamber.options[preChamberId].rackIdList.splice(preChamber.options[preChamberId].rackIdList.indexOf(rackId));\n    if(preChamber.options[preChamberId].occupiedCapacity == 0){\n        preChamber.options[preChamberId].status = \"AVAILABLE\"\n    }\n    else{\n        preChamber.options[preChamberId].status = \"PARTIALLY_OCCUPIED\"\n    }\n    \n        // if(!rack.options[rackId].batchIdList){\n        //   rack.options[rackId].batchIdList =[]\n        // }\n        \n         if(!rack.options[rackId].setupDateId){\n          rack.options[rackId].setupDateId =[]\n        }\n        \n        //  if(!rack.options[rackId].setupDateId){\n        //   rack.options[rackId].setupDateId = {}\n        // }\n        \n         let found = false;\n            for(let setupDateIdDB of rack.options[rackId].setupDateId) {\n                if(setupDateIdDB == msg.setupDateId){\n                    found = true;\n                }\n            }\n            if(!found) {\n                rack.options[rackId].setupDateId.push(msg.setupDateId)\n            }\n        \n        // rack.options[rackId].setupDateId[msg.setupDateId] = msg.setupDateId\n        \n        // Sprint 14 - No more batchId field, but kept it for reference\n        // if (msg.original.batchId) for(let batchId of msg.original.batchId){\n        //     if(!rack.options[rackId].batchIdList.includes(batchId)){\n        //         rack.options[rackId].batchIdList.push(batchId)\n        //     }\n        // }\n    \n    rack.options[rackId].occupiedCapacity = parseFloat(msg.original.trayCount);\n    if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n        exceedCapacity = true\n        availableNumber = rack.options[rackId].capacity;\n    }\n    else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n        rack.options[rackId].status = \"OCCUPIED\"\n    }\n    else{\n        rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n    }    \n    delete rack.options[rackId].prePupaeChamberId;\n}\nelse if(rack.options[rackId].pupationChamberId){\n    //add tray to this rack (PUPA chamber)\n    node.warn(\"add tray to pupa\")\n    \n    if(rack.options[rackId].status == \"OCCUPIED\"){\n        rackOccupied = true;\n    }\n    else{\n        rackOccupied = false;\n        if(rack.options[rackId].pupationChamberId != chamberId){\n            inAnotherPupationChamber = true;\n            inPupationChamber = rack.options[rackId].pupationChamberId\n        }\n        if(!rack.options[rackId].batchIdList){\n           rack.options[rackId].batchIdList =[]\n        }\n        \n         if(!rack.options[rackId].setupDateId){\n           rack.options[rackId].setupDateId =[]\n        }\n        \n        // Sprint 14 - No more batchId field, but kept it for reference\n        // if (msg.original.batchId) for(let batchId of msg.original.batchId){\n        //     if(!rack.options[rackId].batchIdList.includes(batchId)){\n        //         rack.options[rackId].batchIdList.push(batchId)\n        //     }\n        // }\n        let found = false;\n            for(let setupDateIdDB of rack.options[rackId].setupDateId) {\n                if(setupDateIdDB == msg.setupDateId){\n                    found = true;\n                }\n            }\n            if(!found) {\n                rack.options[rackId].setupDateId.push(msg.setupDateId)\n            }\n            \n            \n        rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n        if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n            exceedCapacity = true\n            availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n        }\n        else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n            rack.options[rackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n    \n    }\n    \n}\nelse{\n    //not from prepupae chamber and not in pupation chamber\n    notValid = true;\n}\n\n\n\n    \n    // rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n    // if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n    //     exceedCapacity = true\n    //     availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n    // }\n    // else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n    //     rack.options[rackId].status = \"OCCUPIED\"\n    // }\n    // else{\n    //     rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n    // }\n    \n\n\n\nmsg.error = false;\nif(notValid){\n    msg.error = true;\n    msg.errMsg = \"The rack is not from PrePupae Chamber and not in Pupation Chamber.\"\n}\nelse if(inAnotherPupationChamber){\n    msg.error = true;\n    msg.errMsg = \"The rack is in another Pupation Chamber. Do you mean: \" + inPupationChamber;\n}\nelse if(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(rackOccupied && chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack and Chamber are occupied\";\n}\nelse if(rackOccupied){\n    msg.error = true;\n    msg.errMsg = \"Rack is occupied\";\n}\nelse if(chamberOccupied){\n    msg.error = true;\n    msg.errMsg = \"Chamber is occupied\";\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.preChamber = preChamber;\nmsg.payload = [\"rack\", \"chamber\", \"preChamber\"]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4020,
        "y": 1560,
        "wires": [
            []
        ]
    },
    {
        "id": "7e456ea7.9fdc3",
        "type": "moment",
        "z": "90996413.448b78",
        "name": "",
        "topic": "",
        "input": "payload",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "17",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "expectedBatchId",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "4c77f2a9.c469ec"
            ]
        ]
    },
    {
        "id": "4c77f2a9.c469ec",
        "type": "function",
        "z": "90996413.448b78",
        "name": "Set expected batchId",
        "func": "msg.payload.expectedBatchId = msg.expectedBatchId;\nmsg.payload.rackUsed = false;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 440,
        "y": 120,
        "wires": [
            [
                "2904913c.1de97e"
            ]
        ]
    },
    {
        "id": "3d4524e5.13120c",
        "type": "function",
        "z": "90996413.448b78",
        "name": "Query",
        "func": "\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"pupationRackID\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 210,
        "y": 200,
        "wires": [
            [
                "8cc186e.1f27778"
            ]
        ]
    },
    {
        "id": "8cc186e.1f27778",
        "type": "cloudantplus in",
        "z": "90996413.448b78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 470,
        "y": 200,
        "wires": [
            [
                "472be4e5.fe596c"
            ]
        ]
    },
    {
        "id": "472be4e5.fe596c",
        "type": "switch",
        "z": "90996413.448b78",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 170,
        "y": 260,
        "wires": [
            [
                "4cbc0607.6afec8"
            ],
            [
                "708ff6f6.bf9398"
            ],
            [
                "d36ca1de.eb31b"
            ]
        ]
    },
    {
        "id": "4cbc0607.6afec8",
        "type": "change",
        "z": "90996413.448b78",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 410,
        "y": 260,
        "wires": [
            [
                "1467746.499cd8c"
            ]
        ]
    },
    {
        "id": "708ff6f6.bf9398",
        "type": "function",
        "z": "90996413.448b78",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 300,
        "wires": [
            [
                "ffff2c5b.ab287"
            ]
        ]
    },
    {
        "id": "d36ca1de.eb31b",
        "type": "function",
        "z": "90996413.448b78",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 360,
        "wires": [
            [
                "8aa53ce8.ad8be"
            ]
        ]
    },
    {
        "id": "1467746.499cd8c",
        "type": "function",
        "z": "90996413.448b78",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"prePupaeChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 260,
        "wires": [
            [
                "805449ea.9c7358"
            ]
        ]
    },
    {
        "id": "ffff2c5b.ab287",
        "type": "http response",
        "z": "90996413.448b78",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 600,
        "y": 300,
        "wires": []
    },
    {
        "id": "8aa53ce8.ad8be",
        "type": "http response",
        "z": "90996413.448b78",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 600,
        "y": 360,
        "wires": []
    },
    {
        "id": "805449ea.9c7358",
        "type": "cloudantplus in",
        "z": "90996413.448b78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 690,
        "y": 200,
        "wires": [
            [
                "49ee9486.f5db1c"
            ]
        ]
    },
    {
        "id": "49ee9486.f5db1c",
        "type": "switch",
        "z": "90996413.448b78",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 770,
        "y": 260,
        "wires": [
            [
                "b596c4f8.a363e8"
            ],
            [
                "a534b4b2.f400f8"
            ],
            [
                "d7a4c58e.35d6a8"
            ]
        ]
    },
    {
        "id": "b596c4f8.a363e8",
        "type": "change",
        "z": "90996413.448b78",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 950,
        "y": 220,
        "wires": [
            [
                "ec525605.2bc258"
            ]
        ]
    },
    {
        "id": "a534b4b2.f400f8",
        "type": "function",
        "z": "90996413.448b78",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 260,
        "wires": [
            [
                "ae823dd0.e4f77"
            ]
        ]
    },
    {
        "id": "d7a4c58e.35d6a8",
        "type": "function",
        "z": "90996413.448b78",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 320,
        "wires": [
            [
                "e51463b6.0d389"
            ]
        ]
    },
    {
        "id": "ae823dd0.e4f77",
        "type": "http response",
        "z": "90996413.448b78",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1180,
        "y": 260,
        "wires": []
    },
    {
        "id": "e51463b6.0d389",
        "type": "http response",
        "z": "90996413.448b78",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1180,
        "y": 320,
        "wires": []
    },
    {
        "id": "bca4881.ac9bd78",
        "type": "switch",
        "z": "90996413.448b78",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 220,
        "wires": [
            [
                "ec525605.2bc258"
            ],
            [
                "cbd48258.ce09d"
            ]
        ]
    },
    {
        "id": "ec525605.2bc258",
        "type": "split",
        "z": "90996413.448b78",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1350,
        "y": 160,
        "wires": [
            [
                "ed29d995.711298"
            ]
        ]
    },
    {
        "id": "cbd48258.ce09d",
        "type": "function",
        "z": "90996413.448b78",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1410,
        "y": 280,
        "wires": [
            [
                "772f20a4.2da13"
            ]
        ]
    },
    {
        "id": "ed29d995.711298",
        "type": "function",
        "z": "90996413.448b78",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1480,
        "y": 160,
        "wires": [
            [
                "800d6c34.97a2c"
            ]
        ]
    },
    {
        "id": "772f20a4.2da13",
        "type": "http response",
        "z": "90996413.448b78",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1640,
        "y": 280,
        "wires": []
    },
    {
        "id": "800d6c34.97a2c",
        "type": "cloudantplus out",
        "z": "90996413.448b78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1630,
        "y": 160,
        "wires": [
            [
                "69bb633d.c8eccc"
            ]
        ]
    },
    {
        "id": "69bb633d.c8eccc",
        "type": "join",
        "z": "90996413.448b78",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1770,
        "y": 160,
        "wires": [
            [
                "61731e5e.53fbd"
            ]
        ]
    },
    {
        "id": "336829b6.893cc6",
        "type": "change",
        "z": "90996413.448b78",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1980,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "fec9dc05.9eba",
        "type": "function",
        "z": "90996413.448b78",
        "name": "",
        "func": "let query = {}\nquery.key = msg.payload._id\nmsg.original = {...msg.payload};\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 60,
        "wires": [
            [
                "8eb193a0.48b16"
            ]
        ]
    },
    {
        "id": "8eb193a0.48b16",
        "type": "cloudantplus in",
        "z": "90996413.448b78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "pupation-setup-id",
        "x": 330,
        "y": 60,
        "wires": [
            [
                "751e540b.5728bc"
            ]
        ]
    },
    {
        "id": "751e540b.5728bc",
        "type": "switch",
        "z": "90996413.448b78",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 510,
        "y": 60,
        "wires": [
            [
                "1de8f5cd.70b62a"
            ],
            []
        ]
    },
    {
        "id": "1de8f5cd.70b62a",
        "type": "function",
        "z": "90996413.448b78",
        "name": "",
        "func": "msg.incomplete = msg.payload[0].value.incomplete\nmsg.incompleteEntry = msg.payload[0].value\nmsg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 40,
        "wires": [
            [
                "7e456ea7.9fdc3"
            ]
        ]
    },
    {
        "id": "2904913c.1de97e",
        "type": "function",
        "z": "90996413.448b78",
        "name": "Get Old submission data",
        "func": "msg.original = msg.payload;\nmsg.payload = msg.payload._id;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 120,
        "wires": [
            [
                "b529846b.0f1068"
            ]
        ]
    },
    {
        "id": "b529846b.0f1068",
        "type": "cloudantplus in",
        "z": "90996413.448b78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 910,
        "y": 120,
        "wires": [
            [
                "db205a8e.3ee368"
            ]
        ]
    },
    {
        "id": "db205a8e.3ee368",
        "type": "function",
        "z": "90996413.448b78",
        "name": "",
        "func": "msg.oldData = {...msg.payload};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1080,
        "y": 100,
        "wires": [
            [
                "7d404a27.160794"
            ]
        ]
    },
    {
        "id": "7d404a27.160794",
        "type": "switch",
        "z": "90996413.448b78",
        "name": "",
        "property": "incomplete",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1210,
        "y": 100,
        "wires": [
            [
                "5df5a682.5a8c58"
            ],
            [
                "3d4524e5.13120c"
            ]
        ]
    },
    {
        "id": "5df5a682.5a8c58",
        "type": "function",
        "z": "90996413.448b78",
        "name": "",
        "func": "let errMsg =\"Process completed. \"\nlet constField = [{\n        name: \"batchId\",\n        errMsg: \"Batch Id\"\n    }, \n    {\n        name: \"pupationRackID\",\n        errMsg: \"Rack Id\"\n    }, \n    {\n        name:\"prePupaeChamberId\",\n        errMsg: \"Chamber Id\"\n    },\n    {\n        name:\"trayCount\",\n        errMsg: \"Tray Count\"\n    }];\nmsg.err = false;\nfor(let field of constField){\n    let fieldName = field.name;\n    if(Array.isArray(msg.oldData[fieldName])){\n        if(JSON.stringify(msg.oldData[fieldName]) !== JSON.stringify(msg.original[fieldName])){\n            msg.err = true;\n            if(errMsg === \"Process completed. \"){\n                errMsg = errMsg + field.errMsg \n            }\n            else{\n                errMsg = errMsg + \", \"+ field.errMsg \n            }\n        }\n    }\n    else if(msg.oldData[fieldName] !== msg.original[fieldName]){\n        msg.err = true;\n        if(errMsg === \"Process completed. \"){\n            errMsg = errMsg + field.errMsg \n        }\n        else{\n            errMsg = errMsg + \", \"+ field.errMsg \n        }\n       \n    }\n}\nmsg.errMsg = errMsg + \" cannot be changed\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1380,
        "y": 40,
        "wires": [
            [
                "aee380c.07ce68"
            ]
        ]
    },
    {
        "id": "aee380c.07ce68",
        "type": "switch",
        "z": "90996413.448b78",
        "name": "",
        "property": "err",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1530,
        "y": 40,
        "wires": [
            [
                "336829b6.893cc6"
            ],
            [
                "4452ac27.4ddf94"
            ]
        ]
    },
    {
        "id": "4452ac27.4ddf94",
        "type": "function",
        "z": "90996413.448b78",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1450,
        "y": 100,
        "wires": [
            [
                "dda8f926.4aeb88"
            ]
        ]
    },
    {
        "id": "dda8f926.4aeb88",
        "type": "http response",
        "z": "90996413.448b78",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1680,
        "y": 100,
        "wires": []
    },
    {
        "id": "61731e5e.53fbd",
        "type": "function",
        "z": "90996413.448b78",
        "name": "",
        "func": "let incomplete = msg.incompleteEntry;\nlet data = msg.original;\nlet dontSave = [\"_id\", \"_rev\"]\nfor(let key in incomplete){\n    if(data[key] && !dontSave.includes(key)){\n        incomplete[key] = data[key]\n    }\n}\nmsg.payload = incomplete;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1840,
        "y": 220,
        "wires": [
            [
                "d8181867.b3a458"
            ]
        ]
    },
    {
        "id": "d8181867.b3a458",
        "type": "cloudantplus out",
        "z": "90996413.448b78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1990,
        "y": 220,
        "wires": [
            [
                "336829b6.893cc6"
            ]
        ]
    },
    {
        "id": "2159b346.aa8d9c",
        "type": "function",
        "z": "90996413.448b78",
        "name": "",
        "func": "const chamberId = msg.original.prePupaeChamberId;\nconst oldChamberId = msg.oldData.prePupaeChamberId\nconst chamber = msg.chamber;\nconst rack = msg.rack;\nconst rackId = msg.original.pupationRackID;\nconst oldRackId = msg.oldData.pupationRackID;\nvar exceedCapacity = false\nvar availableNumber = 0;\n\nvar rackOccupied;\nvar chamberOccupied;\nvar inPupationChamber = false;\nvar inAnotherPrePupaeChamber = false;\nvar inPrePupaeChamber;\n\nif(rack.options[rackId].pupationChamberId){\n    inPupationChamber=true\n}\nelse{\n    if(chamber.options[chamberId].status == \"OCCUPIED\"){\n        chamberOccupied = true;\n    }\n    else{\n        chamberOccupied = false;\n        \n         if(chamber.options[oldChamberId].rackIdList.includes(oldRackId)){\n            chamber.options[oldChamberId].rackIdList.splice(chamber.options[oldChamberId].rackIdList.indexOf(oldRackId), 1)\n            chamber.options[oldChamberId].occupiedCapacity= chamber.options[oldChamberId].occupiedCapacity - 1;\n             \n         }\n        \n        if(chamber.options[oldChamberId].occupiedCapacity == chamber.options[oldChamberId].capacity){\n            chamber.options[oldChamberId].status = \"OCCUPIED\"\n        }\n        else if(chamber.options[oldChamberId].occupiedCapacity == 0){\n            chamber.options[oldChamberId].status = \"AVAILABLE\"\n        }\n        else{\n            chamber.options[oldChamberId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n        \n\n        if(!chamber.options[chamberId].rackIdList){\n            chamber.options[chamberId].rackIdList =[]\n        }\n        if(!chamber.options[chamberId].rackIdList.includes(rackId)){\n                chamber.options[chamberId].rackIdList.push(rackId)\n                chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity +1;\n        }\n        \n        if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n            chamber.options[chamberId].status = \"OCCUPIED\"\n        }\n        else{\n            chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n        }\n    }\n    \n    \n    if(rack.options[rackId].status == \"OCCUPIED\"){\n        rackOccupied = true;\n    }\n    else{\n        \n        rackOccupied = false;\n        \n        if(rack.options[oldRackId].batchIdList){\n           delete rack.options[oldRackId].batchIdList\n        }\n        if(rack.options[oldRackId].prePupaeChamberId){\n            delete rack.options[oldRackId].prePupaeChamberId\n        }\n        rack.options[oldRackId].occupiedCapacity = rack.options[oldRackId].occupiedCapacity -parseFloat(msg.oldData.trayCount);\n        if(rack.options[oldRackId].occupiedCapacity <= 0){\n            rack.options[oldRackId].occupiedCapacity = 0;\n            rack.options[oldRackId].status = \"AVAILABLE\"\n        }\n        else if(rack.options[oldRackId].occupiedCapacity == rack.options[oldRackId].capacity){\n            rack.options[oldRackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[oldRackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n        \n        \n        if(!rack.options[rackId].batchIdList){\n           rack.options[rackId].batchIdList =[]\n        }\n        for(let batchId of msg.original.batchId){\n            if(!rack.options[rackId].batchIdList.includes(batchId)){\n                rack.options[rackId].batchIdList.push(batchId)\n            }\n        }\n        if(rack.options[rackId].prePupaeChamberId){\n            if(rack.options[rackId].prePupaeChamberId !=chamberId){\n                inAnotherPrePupaeChamber = true;\n                inPrePupaeChamber = rack.options[rackId].prePupaeChamberId\n            }\n        }\n        rack.options[rackId].prePupaeChamberId = chamberId;\n        rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity +parseFloat(msg.original.trayCount);\n        if(rack.options[rackId].occupiedCapacity > rack.options[rackId].capacity){\n            exceedCapacity = true\n            availableNumber = rack.options[rackId].capacity - (rack.options[rackId].occupiedCapacity - msg.original.trayCount)\n        }\n        else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n            rack.options[rackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n    \n    }\n}\n\n\nmsg.error = false;\nif(inAnotherPrePupaeChamber){\n    msg.error = true;\n    msg.errMsg=\"The rack is in another Pre Pupae Chamber. Do you mean: \" + inPrePupaeChamber\n}\nelse if(inPupationChamber){\n    msg.error = true;\n    msg.errMsg = \"The rack is in pupation chamber\";\n}\nelse if(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(rackOccupied && chamberOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Rack and Chamber are occupied\";\n}\nelse if(rackOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Rack is occupied\";\n}\nelse if(chamberOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Chamber is occupied\";\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 220,
        "wires": [
            [
                "bca4881.ac9bd78"
            ]
        ]
    },
    {
        "id": "3a2b4329.a33f1c",
        "type": "comment",
        "z": "90996413.448b78",
        "name": "skip",
        "info": "skip update asset data",
        "x": 1250,
        "y": 220,
        "wires": []
    },
    {
        "id": "76f278ac.34af98",
        "type": "function",
        "z": "6781483d.926718",
        "name": "Query",
        "func": "\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"pupationRackID\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "9fcbb7d7.a9f978"
            ]
        ]
    },
    {
        "id": "9fcbb7d7.a9f978",
        "type": "cloudantplus in",
        "z": "6781483d.926718",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 490,
        "y": 240,
        "wires": [
            [
                "44308f5a.ce38a"
            ]
        ]
    },
    {
        "id": "44308f5a.ce38a",
        "type": "switch",
        "z": "6781483d.926718",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 190,
        "y": 300,
        "wires": [
            [
                "a1dc0af4.ace318"
            ],
            [
                "7cbbc133.31b0c"
            ],
            [
                "d3772e1c.4d9fb"
            ]
        ]
    },
    {
        "id": "a1dc0af4.ace318",
        "type": "change",
        "z": "6781483d.926718",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 300,
        "wires": [
            [
                "2bb1df09.cf1e"
            ]
        ]
    },
    {
        "id": "7cbbc133.31b0c",
        "type": "function",
        "z": "6781483d.926718",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "59b74543.89d92c"
            ]
        ]
    },
    {
        "id": "d3772e1c.4d9fb",
        "type": "function",
        "z": "6781483d.926718",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 430,
        "y": 400,
        "wires": [
            [
                "88ad73f5.cef3e"
            ]
        ]
    },
    {
        "id": "2bb1df09.cf1e",
        "type": "function",
        "z": "6781483d.926718",
        "name": "Query",
        "func": "delete msg.rackOccupied\n\nquery = {}\n// if(msg.payload.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(msg.payload.breedingGrowOutSetupRackId);\n//             queries.push(query);\n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"prePupaeChamberId\");\n\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 300,
        "wires": [
            [
                "beeb2ee0.23f65"
            ]
        ]
    },
    {
        "id": "59b74543.89d92c",
        "type": "http response",
        "z": "6781483d.926718",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 620,
        "y": 340,
        "wires": []
    },
    {
        "id": "88ad73f5.cef3e",
        "type": "http response",
        "z": "6781483d.926718",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 620,
        "y": 400,
        "wires": []
    },
    {
        "id": "beeb2ee0.23f65",
        "type": "cloudantplus in",
        "z": "6781483d.926718",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 710,
        "y": 240,
        "wires": [
            [
                "3bad0a1c.9aeb66"
            ]
        ]
    },
    {
        "id": "3bad0a1c.9aeb66",
        "type": "switch",
        "z": "6781483d.926718",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 790,
        "y": 300,
        "wires": [
            [
                "50d8a1ab.ecb6e"
            ],
            [
                "431c8651.8f1408"
            ],
            [
                "93ad6301.3eecb"
            ]
        ]
    },
    {
        "id": "50d8a1ab.ecb6e",
        "type": "change",
        "z": "6781483d.926718",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 260,
        "wires": [
            [
                "e2cfe7c1.0ee458"
            ]
        ]
    },
    {
        "id": "431c8651.8f1408",
        "type": "function",
        "z": "6781483d.926718",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 300,
        "wires": [
            [
                "218ba7c6.4ba8e8"
            ]
        ]
    },
    {
        "id": "93ad6301.3eecb",
        "type": "function",
        "z": "6781483d.926718",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 360,
        "wires": [
            [
                "f042cfd.301543"
            ]
        ]
    },
    {
        "id": "50903f00.f2d41",
        "type": "function",
        "z": "6781483d.926718",
        "name": "",
        "func": "const chamberId = msg.original.prePupaeChamberId;\nconst chamber = msg.chamber;\nconst rack = msg.rack;\nconst rackId = msg.original.pupationRackID;\nvar exceedCapacity = false\nvar availableNumber = 0;\n\nvar rackOccupied;\nvar chamberOccupied;\nvar inPupationChamber = false;\nvar inAnotherPrePupaeChamber = false;\nvar inPrePupaeChamber;\n\n        chamberOccupied = false;\n        \n         if(chamber.options[chamberId].rackIdList.includes(rackId)){\n            chamber.options[chamberId].rackIdList.splice(chamber.options[chamberId].rackIdList.indexOf(rackId), 1)\n            chamber.options[chamberId].occupiedCapacity= chamber.options[chamberId].occupiedCapacity - 1;\n             \n         }\n        \n        if(chamber.options[chamberId].occupiedCapacity == chamber.options[chamberId].capacity){\n            chamber.options[chamberId].status = \"OCCUPIED\"\n        }\n        else if(chamber.options[chamberId].occupiedCapacity == 0){\n            chamber.options[chamberId].status = \"AVAILABLE\"\n        }\n        else{\n            chamber.options[chamberId].status = \"PARTIALLY_OCCUPIED\"\n        }\n        \n    \n    \n        \n        rackOccupied = false;\n        \n        if(rack.options[rackId].batchIdList){\n           delete rack.options[rackId].batchIdList\n        }\n        if(rack.options[rackId].prePupaeChamberId){\n            delete rack.options[rackId].prePupaeChamberId\n        }\n        rack.options[rackId].occupiedCapacity = rack.options[rackId].occupiedCapacity -parseFloat(msg.original.trayCount);\n        if(rack.options[rackId].occupiedCapacity <= 0){\n            rack.options[rackId].occupiedCapacity = 0;\n            rack.options[rackId].status = \"AVAILABLE\"\n        }\n        else if(rack.options[rackId].occupiedCapacity == rack.options[rackId].capacity){\n            rack.options[rackId].status = \"OCCUPIED\"\n        }\n        else{\n            rack.options[rackId].status = \"PARTIALLY_OCCUPIED\"\n        }\n\n\nmsg.error = false;\nif(inAnotherPrePupaeChamber){\n    msg.error = true;\n    msg.errMsg=\"The rack is in another Pre Pupae Chamber. Do you mean: \" + inPrePupaeChamber\n}\nelse if(inPupationChamber){\n    msg.error = true;\n    msg.errMsg = \"The rack is in pupation chamber\";\n}\nelse if(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(rackOccupied && chamberOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Rack and Chamber are occupied\";\n}\nelse if(rackOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Rack is occupied\";\n}\nelse if(chamberOccupied){\n    msg.error = true;\n    msg.errorMsg = \"Chamber is occupied\";\n}\nmsg.rack = rack;\nmsg.chamber = chamber;\nmsg.payload = [\"rack\", \"chamber\"]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 260,
        "wires": [
            [
                "db31047.6b655f8"
            ]
        ]
    },
    {
        "id": "218ba7c6.4ba8e8",
        "type": "http response",
        "z": "6781483d.926718",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1200,
        "y": 300,
        "wires": []
    },
    {
        "id": "f042cfd.301543",
        "type": "http response",
        "z": "6781483d.926718",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1200,
        "y": 360,
        "wires": []
    },
    {
        "id": "db31047.6b655f8",
        "type": "switch",
        "z": "6781483d.926718",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 260,
        "wires": [
            [
                "e2cfe7c1.0ee458"
            ],
            [
                "90946b00.414188"
            ]
        ]
    },
    {
        "id": "e2cfe7c1.0ee458",
        "type": "split",
        "z": "6781483d.926718",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 1370,
        "y": 200,
        "wires": [
            [
                "73d28403.9e8ddc"
            ]
        ]
    },
    {
        "id": "90946b00.414188",
        "type": "function",
        "z": "6781483d.926718",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1430,
        "y": 320,
        "wires": [
            [
                "8ee85d8.47469a"
            ]
        ]
    },
    {
        "id": "73d28403.9e8ddc",
        "type": "function",
        "z": "6781483d.926718",
        "name": "",
        "func": "msg.payload = msg[msg.payload]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1500,
        "y": 200,
        "wires": [
            [
                "5e72144b.3dddec"
            ]
        ]
    },
    {
        "id": "8ee85d8.47469a",
        "type": "http response",
        "z": "6781483d.926718",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1660,
        "y": 320,
        "wires": []
    },
    {
        "id": "5e72144b.3dddec",
        "type": "cloudantplus out",
        "z": "6781483d.926718",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1650,
        "y": 200,
        "wires": [
            [
                "baea7bd9.3297b8"
            ]
        ]
    },
    {
        "id": "baea7bd9.3297b8",
        "type": "join",
        "z": "6781483d.926718",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1790,
        "y": 200,
        "wires": [
            [
                "8136d3ba.f4ed3"
            ]
        ]
    },
    {
        "id": "36cf47a5.77e558",
        "type": "change",
        "z": "6781483d.926718",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2000,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "a36110d.1ca0bf",
        "type": "function",
        "z": "6781483d.926718",
        "name": "",
        "func": "let query = {}\nquery.key = msg.payload._id\nmsg.original = {...msg.payload};\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "eda4e65.3733118"
            ]
        ]
    },
    {
        "id": "eda4e65.3733118",
        "type": "cloudantplus in",
        "z": "6781483d.926718",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "incomplete-form",
        "index": "pupation-setup-id",
        "x": 350,
        "y": 100,
        "wires": [
            [
                "3d8afe73.8fbbd2"
            ]
        ]
    },
    {
        "id": "3d8afe73.8fbbd2",
        "type": "switch",
        "z": "6781483d.926718",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 100,
        "wires": [
            [
                "d5ee7fcd.a7be7"
            ],
            []
        ]
    },
    {
        "id": "1153fcb9.dcc313",
        "type": "switch",
        "z": "6781483d.926718",
        "name": "",
        "property": "incomplete",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 890,
        "y": 80,
        "wires": [
            [
                "15e90568.71f71b"
            ],
            [
                "76f278ac.34af98"
            ]
        ]
    },
    {
        "id": "8136d3ba.f4ed3",
        "type": "function",
        "z": "6781483d.926718",
        "name": "",
        "func": "let incomplete = msg.incompleteEntry;\nincomplete.deleted = true;\nmsg.payload = incomplete;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1860,
        "y": 260,
        "wires": [
            [
                "f8cb5370.f4d23"
            ]
        ]
    },
    {
        "id": "f8cb5370.f4d23",
        "type": "cloudantplus out",
        "z": "6781483d.926718",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 2010,
        "y": 260,
        "wires": [
            [
                "36cf47a5.77e558"
            ]
        ]
    },
    {
        "id": "d5ee7fcd.a7be7",
        "type": "function",
        "z": "6781483d.926718",
        "name": "",
        "func": "msg.incomplete = msg.payload[0].value.incomplete\nmsg.incompleteEntry = msg.payload[0].value\nmsg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 80,
        "wires": [
            [
                "1153fcb9.dcc313"
            ]
        ]
    },
    {
        "id": "5f6b27c.7d81dd8",
        "type": "http response",
        "z": "6781483d.926718",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1340,
        "y": 60,
        "wires": []
    },
    {
        "id": "15e90568.71f71b",
        "type": "function",
        "z": "6781483d.926718",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Process completed, cannot delete this submission.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1130,
        "y": 60,
        "wires": [
            [
                "5f6b27c.7d81dd8"
            ]
        ]
    },
    {
        "id": "6217bbe3.17b564",
        "type": "comment",
        "z": "6781483d.926718",
        "name": "skipdelete Asset",
        "info": "",
        "x": 1240,
        "y": 180,
        "wires": []
    },
    {
        "id": "d2a27b5c.b90a88",
        "type": "delay",
        "z": "161e8c5f.9e3554",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 1800,
        "y": 380,
        "wires": [
            [
                "32e672b.27bd68e"
            ]
        ]
    },
    {
        "id": "59843b99.5270d4",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 820,
        "wires": [
            [
                "6724e850.fbafa8"
            ]
        ]
    },
    {
        "id": "1184d744.586879",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 1215,
        "y": 820,
        "wires": []
    },
    {
        "id": "c6968d0a.5b299",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "let groupLine = 'breeding'\nlet groupForms = [\n    'grow-out-feedstock-preparation'\n]\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    if (line !== groupLine) continue\n    if (!groupForms.includes(form)) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 720,
        "wires": [
            [
                "72b934a3.40df9c"
            ]
        ]
    },
    {
        "id": "6b6caae6.5d1e64",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 720,
        "wires": [
            [
                "c6968d0a.5b299"
            ]
        ]
    },
    {
        "id": "488c43cb.a3d93c",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 720,
        "wires": []
    },
    {
        "id": "72b934a3.40df9c",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet reduced = 0\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let totalFeedPrepared = +row.totalFeedPrepared || 0\n    \n    reduced = reduced + totalFeedPrepared\n}\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 720,
        "wires": [
            [
                "ed7e568e.0bbdd8"
            ]
        ]
    },
    {
        "id": "d93ba9c6.444ba8",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "total-feed-used-breeding",
        "info": "",
        "x": 550,
        "y": 680,
        "wires": []
    },
    {
        "id": "ed7e568e.0bbdd8",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'total-feed-used'\nlet type = 'simple'\nlet label = 'Total feed used for breeding (kg)'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult, unit: 'kg'})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 720,
        "wires": [
            [
                "488c43cb.a3d93c"
            ]
        ]
    },
    {
        "id": "4a2c4e80.9da1",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "let groupLines = [\n    'farming'\n]\nlet groupForms = [\n    'grow-out-feedstock-preparation'\n]\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    if (!groupLines.includes(line)) continue\n    if (!groupForms.includes(form)) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1800,
        "wires": [
            [
                "d4b94c15.05a8"
            ]
        ]
    },
    {
        "id": "36988ec1.aac472",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 1800,
        "wires": [
            [
                "4a2c4e80.9da1"
            ]
        ]
    },
    {
        "id": "e84c9d2a.087ae",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 1800,
        "wires": []
    },
    {
        "id": "d4b94c15.05a8",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet reduced = 0\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let totalFeedPrepared = +row.totalFeedPrepared || 0\n    \n    reduced = reduced + totalFeedPrepared\n}\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 1800,
        "wires": [
            [
                "3bc81284.2fcd2e"
            ]
        ]
    },
    {
        "id": "aec4a924.b407f8",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "total-feed-used-farming",
        "info": "",
        "x": 540,
        "y": 1760,
        "wires": []
    },
    {
        "id": "3bc81284.2fcd2e",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'total-feed-used-farming'\nlet type = 'simple'\nlet label = 'Total feed used for farming (kg)'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult, unit: 'kg'})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 1800,
        "wires": [
            [
                "e84c9d2a.087ae"
            ]
        ]
    },
    {
        "id": "70217e28.cd976",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "DataReplaceLineIntoComma",
        "func": "let docs = msg.payload.docs;\n\nfor(var x = 0; x < docs.length; x++ ) {\n    let doc = docs[x];\n    \n    for(var key in doc) {\n        if(typeof doc[key] == \"string\" && doc[key].includes(\"\\n\")) {\n            const searchRegExp = /\\n/g;\n            doc[key] = doc[key].replace(searchRegExp, \",\");\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 560,
        "wires": [
            [
                "36c36c75.e59f54"
            ]
        ]
    },
    {
        "id": "22e8d93b.d95006",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5-dol-collected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupae-added-to-mc",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3570,
        "y": 340,
        "wires": [
            [
                "7ef9d503.28944c"
            ],
            [
                "4f9ab9e6.c4bc88"
            ],
            [
                "7dd8d571.e7387c"
            ]
        ]
    },
    {
        "id": "7ef9d503.28944c",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "var label = msg.day;\nvar data = []\n\nvar target = msg.target? msg.target.value.value:flow.get('target')[msg.event];\n\n\n//initialize 0 got all days\nfor(let day of label){\n    data.push(0);\n}\n\n//assign value\nfor(let payload of msg.payload){\n    let days = label\n    let key = payload.key\n    let value = payload.value\n    \n    if(!days.includes(key)) continue\n    \n    let finalValue = 0\n    if(data[days.indexOf(key)]) {\n        finalValue = (Math.round(value * 100) / 100) + data[days.indexOf(key)]\n    } else {\n        finalValue = Math.round(value * 100) / 100\n    }\n    \n    data[days.indexOf(key)] = finalValue\n}\n\nfor(var x = 0; x < data.length; x++) {\n    data[x] = data[x].toFixed(2);\n}\n\n//check negative value\nlet max = data[0];\nlet min = data[0];\nfor(let data1 of data){\n    if(data1 > max){\n        max = data1;\n    }\n    if(data1 < min){\n        min = data1;\n    }\n    if(data1 < 0){\n        data1 = 0;\n    }\n}\n\nlet trendUp = true;\nlet ofTarget = Math.round(100*data[6]/target)\nif(ofTarget < target){\n    trendUp = false;\n}\n\nlet payload = {\n    trendUp: trendUp,\n    value: data[6],\n    ofTarget,\n    setpoint: target,\n    unit: 'M',\n    data: data,\n    labels: label,\n    min:min,\n    max:max\n}\nmsg.socketIOEvent = msg.event\nmsg.payload = payload\nflow.set(msg.event+\"Temp\", payload)\nflow.set(msg.event+\"NewData\", false);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3720,
        "y": 300,
        "wires": [
            [
                "f3cb259d.250658"
            ]
        ]
    },
    {
        "id": "4531811.c91218",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "googleDetailChangeFolderHEre",
        "info": "",
        "x": 1850,
        "y": 2820,
        "wires": []
    },
    {
        "id": "c3ef921.12daf7",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "convertToCSV",
        "info": "",
        "x": 1490,
        "y": 2820,
        "wires": []
    },
    {
        "id": "5667f6c4.e04f98",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "addRatioHere",
        "info": "",
        "x": 1300,
        "y": 2820,
        "wires": []
    },
    {
        "id": "9d386153.00882",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "querySetpoint",
        "info": "",
        "x": 730,
        "y": 2820,
        "wires": []
    },
    {
        "id": "c5107b28.0b8578",
        "type": "inject",
        "z": "1f50769f.97b799",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 130,
        "y": 2940,
        "wires": [
            [
                "ee44c88e.dd1248"
            ]
        ]
    },
    {
        "id": "ee44c88e.dd1248",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "today = new Date();\ntoday.setHours(0,0,0,0);\n\nvar firstDayofMonth = new Date(today.getFullYear(), today.getMonth(), 1);\nlet query = {};\nconst tomorrow = new Date(today)\ntomorrow.setDate(tomorrow.getDate() + 1);\ntomorrow.setSeconds(tomorrow.getSeconds() - 1);\n\nlet firstString = firstDayofMonth.toISOString()\nlet tommorowString = tomorrow.toISOString()\nquery.startkey = [\"001\", firstString];\nquery.endkey = [\"001\", tommorowString];\n\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 2860,
        "wires": [
            [
                "1e8d106c.94df9"
            ]
        ]
    },
    {
        "id": "1e8d106c.94df9",
        "type": "cloudantplus in",
        "z": "1f50769f.97b799",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "query-form",
        "index": "query_by_2_key_time_stamp",
        "x": 410,
        "y": 2860,
        "wires": [
            [
                "571971a4.211f6"
            ]
        ]
    },
    {
        "id": "98283ed2.2b146",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 280,
        "y": 2760,
        "wires": [
            [
                "ee44c88e.dd1248"
            ]
        ]
    },
    {
        "id": "571971a4.211f6",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let value = [];\n\nfor(var x = 0; x < msg.payload.length; x++) {\n    let oneValue = msg.payload[x].value;\n    value.push(oneValue);\n}\n\nmsg.allDocs = value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 580,
        "y": 2860,
        "wires": [
            [
                "12960c1f.bcfaa4"
            ]
        ]
    },
    {
        "id": "4ae8bb0c.683f24",
        "type": "cronplus",
        "z": "1f50769f.97b799",
        "name": "",
        "outputField": "payload",
        "timeZone": "Asia/Kuala_Lumpur",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "updateNewData",
                "topic": "updateNewData",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 45 17 * * ? *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 120,
        "y": 2760,
        "wires": [
            [
                "98283ed2.2b146"
            ]
        ]
    },
    {
        "id": "12960c1f.bcfaa4",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.payload = {};\nmsg.payload.key = \"001\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 2860,
        "wires": [
            [
                "84f0aa1.5ad4058"
            ]
        ]
    },
    {
        "id": "84f0aa1.5ad4058",
        "type": "cloudantplus in",
        "z": "1f50769f.97b799",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "setpoints-tenant",
        "index": "setpoints-tenant",
        "x": 910,
        "y": 2860,
        "wires": [
            [
                "b6c4c758.84d448"
            ]
        ]
    },
    {
        "id": "b6c4c758.84d448",
        "type": "change",
        "z": "1f50769f.97b799",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "allSetPoints",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 2860,
        "wires": [
            [
                "47b7376.dd484c8"
            ]
        ]
    },
    {
        "id": "47b7376.dd484c8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let allRatios = {\n     'eggs:pupae': {\n        inputForm: 'pupation-setup',\n        inputField: 'PupaeTotalWeight',\n        inputLine: 'breeding',\n        outputForm: 'egg-collection-basic',\n        outputField: 'eggs',\n        outputLine: 'breeding',\n        displayUnit: \"(g/kg)\",\n        setPoints: [\"emergenceResidenceTime\",\"matingResidenceTime\"]\n        },\n    'Neonates:eggs': {\n        inputForm: 'egg-collection-basic',\n        inputField: 'eggs',\n        inputLine: 'breeding',\n        outputForm: 'neonate-collection',\n        outputField: 'neonates',\n        outputLine: 'breeding',\n        displayUnit: \"(g/g)\",\n        setPoints: [\"hatcheryResidenceTime\"]\n        },\n        'Baby larvae:Neonates': {\n        inputForm: 'neonate-collection',\n        inputField: 'neonates',\n        inputLine: 'breeding',\n        outputForm: 'nursery-harvest',\n        outputField: 'total5Dol',\n        outputLine: 'breeding',\n        displayUnit: \"(g/g)\",\n        setPoints: [\"nurseryResidenceTime\"]\n        },\n        'Adult larvae:Baby larvae(farming)': {\n        inputForm: 'nursery-harvest',\n        inputField: 'farming5DolTotal',\n        inputLine: 'breeding',\n        outputForm: 'grow-out-harvest',\n        outputField: 'totalLarvae',\n        outputLine: 'farming',\n        displayUnit: \"(kg/g)\",\n        setPoints: [\"farmingGrowoutResidenceTime\"]\n        },\n        'Pupae:Baby larvae (breeding)': {\n        inputForm: 'nursery-harvest',\n        inputField: 'breeding5DolTotal',\n        inputLine: 'breeding',\n        outputForm: 'pupation-setup',\n        outputField: 'PupaeTotalWeight',\n        outputLine: 'breeding',\n        displayUnit: \"(kg/g)\",\n        setPoints: [\"breedingGrowoutResidenceTime\",\"pupationResidenceTime\"]\n        }\n    }\nmsg.allRatios = allRatios;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1300,
        "y": 2860,
        "wires": [
            [
                "ecdf32bc.d4e06"
            ]
        ]
    },
    {
        "id": "ecdf32bc.d4e06",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let ratios = msg.allRatios;\nlet allDocs = msg.allDocs;\nlet allSetPoints = msg.allSetPoints\n//filter two process docs;\n\nlet today = new Date();\ntoday.setHours(0,0,0,0);\n\nlet lastDay = new Date(today.getFullYear(), today.getMonth()+1, 0).getDate();\n\nlet month = today.getMonth()+1;\nlet year = today.getFullYear();\n\nconst monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        \nlet minusNumberOfDay = lastDay - today.getDate();\nlet untilDay = lastDay - minusNumberOfDay;\nlet ratioCSV = {};\n\nlet csvHead = \"Date, \";\n\nfor (let ratioKey in ratios) {\n    let residenceTime = 0;\n    let filterDocs = [];\n    let ratioValue = ratios[ratioKey];\n    \n    let inputForm = ratioValue.inputForm;\n    let inputField = ratioValue.inputField;\n    let inputLine = ratioValue.inputLine;\n    let outputForm = ratioValue.outputForm;\n    let outputField = ratioValue.outputField;\n    let outputLine = ratioValue.outputLine;\n    let inputUnit = ratioValue.inputUnit;\n    let outputUnit = ratioValue.outputUnit;\n    let setPoints = ratioValue.setPoints;\n    let displayUnit = ratioValue.displayUnit;\n    \n    let dailyRatios = {};\n    for(let x = 0; x < setPoints.length; x++) {\n        let oneSetPoint = setPoints[x];\n        for(let docSetPoint of allSetPoints) {\n            //from DB\n            if(docSetPoint.value['type'] == oneSetPoint) {\n                residenceTime += parseInt(docSetPoint.value.value);\n            }\n        }\n    }\n    \n    csvHead = csvHead + ratioKey + displayUnit + \", \";\n    \n    for(let doc of allDocs) {\n        if((doc.workstationForm == inputForm && doc.productionLine == inputLine)\n        || (doc.workstationForm == outputForm && doc.productionLine == outputLine)) {\n            filterDocs.push(doc);\n        }\n    }\n    \n    for(let y = 1; y <= untilDay ; y++) {\n        // per day\n        let inputTotal = 0;\n        let outputTotal = 0;\n        let ratioValue = 0;\n        let setupDate = y - residenceTime; \n        // for input , use setupDate, for output use y\n            for(let filterDoc of filterDocs){\n                \n            let inputDate;\n            let outputDate;\n            if (filterDoc[outputFieldKey]) {\n                outputDate = new Date(filterDoc.timestamp).getDate();\n            } else {\n                inputDate = new Date(filterDoc.timestamp).getDate();\n            }\n            \n            \n            var outputFieldKey = outputField\n            let outputFieldValue = 0;\n            if(outputDate == y) {\n                outputFieldValue =  parseFloat(filterDoc[outputFieldKey])\n            } \n            \n            var inputFieldKey = inputField;\n            let inputFieldValue = 0;\n            \n            if(inputDate == setupDate) {\n                inputFieldValue =  parseFloat(filterDoc[inputFieldKey])\n            }\n    \n    \n            inputTotal = inputTotal + inputFieldValue\n            outputTotal = outputTotal + outputFieldValue\n        }\n       \n        ratioValue = outputTotal / inputTotal;\n        if(ratioValue == \"Infinity\") {\n            ratioValue = \"0\"\n        }\n        if(ratioCSV[y + 1]){\n            if(isNaN(ratioValue)){\n                    ratioCSV[y + 1] =  ratioCSV[y + 1] + \", \" + \"0\"\n                } else {\n                    ratioCSV[y + 1] = ratioCSV[y + 1] + \", \" + ratioValue.toString();\n                }\n        } else {\n            //first value\n                if(isNaN(ratioValue)){\n                    let date = y + \"-\" + monthNames[month] + \"-\" + year\n                    ratioCSV[y + 1] = date + \", \"+ \"0\"\n                } else {\n                    let date = y + \"-\" + monthNames[month] + \"-\" + year\n                    ratioCSV[y + 1] = date + \", \"+ ratioValue.toString();\n                }\n                \n            }\n            \n        }\n        \n    }\nlet newObj = {1: csvHead, ...ratioCSV};\n\nmsg.ratioCSV = newObj\n\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1500,
        "y": 2860,
        "wires": [
            [
                "7dbc5df.f8052a4"
            ]
        ]
    },
    {
        "id": "7dbc5df.f8052a4",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let ratioCSV = msg.ratioCSV;\nlet stringCSV = \"\"+ ratioCSV[1] + \"\\n\"\n\nlet size = 0;\n\nfor(oneRatio in ratioCSV) {\n    size = size + 1;\n}\n\nfor(var x = size; x !=1; x--) {\n    stringCSV = stringCSV + ratioCSV[x] + \"\\n\"\n}\n\nmsg.csv = stringCSV\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1680,
        "y": 2860,
        "wires": [
            [
                "2f94ed89.f149e2"
            ]
        ]
    },
    {
        "id": "2f94ed89.f149e2",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "//var folderId = '11m0j9jCoVSpWzVFtU1DkPIrOyQEZG-Up';\n// var folderId = '1Oix4Of_YB6S4pAQl0_FtYtQrddjOCdWW'; use this Prod\n// testing 16ce9_tdAoIALvfq8G0truRqFy3npEK6-  \n\nlet today = new Date();\nlet date = today.getDate();\nlet month = today.getMonth() + 1;\nlet year = today.getFullYear();\nlet filename = \"daily_export_ratio\" + \"_\" + date + \"-\" + month + \"-\" + year\nnode.warn(filename);\n\nvar folderId = '1Oix4Of_YB6S4pAQl0_FtYtQrddjOCdWW';\nvar fileMetadata = {\n  'name': filename,\n \"parents\":[folderId],\n  mimeType: 'application/vnd.google-apps.spreadsheet',\n};\nvar media = {\n  mimeType: 'application/vnd.google-apps.spreadsheet',\n};\n\nmsg.payload = {\n    resource: fileMetadata,\n  media: media,\n  fields: 'id',\n  supportsAllDrives: true\n}, function (err, file) {\n  if (err) {\n    // Handle error\n    node.warn(err);\n    console.error(err);\n  } else {\n      node.warn('File Id: ', file.id);\n    console.log('File Id: ', file.id);\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1840,
        "y": 2860,
        "wires": [
            [
                "32a5e036.a312b"
            ]
        ]
    },
    {
        "id": "32a5e036.a312b",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "",
        "google": "140efa24.f87256",
        "api": "drive:v3",
        "operation": "files.create",
        "x": 1990,
        "y": 2860,
        "wires": [
            [
                "2df8640.da2a99c"
            ]
        ]
    },
    {
        "id": "2df8640.da2a99c",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var csv = msg.csv; \nvar rows = csv.split(\"\\n\");\n\nvar csvRow = rows.map(function (row) {\n        if(row!=\"\"){\n            var result = row.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n            for(let i=0; i<result.length; i++){\n                var element = result[i];\n                if(element[0]===\"\\\"\" && element[element.length -1] === \"\\\"\"){\n                    element = element.replace(/^\"|\"$/g, '');\n                    result[i] = element;\n                }\n            }\n            return result;\n        }\n        else{\n            return;\n        }\n    });\nlet payload = {\n\n      \"values\": csvRow\n}\nmsg.payload = {\n    spreadsheetId: msg.payload.id,\n    \"range\":\"A1\",\n    valueInputOption:\"RAW\",\n    resource: payload\n}\nmsg.rows = rows;\n// let key = env.get(\"GAUTH\")\n// msg.creds = { value: key, type: \"gauth\" }\n// msg.creds = key\n// msg.credentials = { category: 'config', credentials: { creds: JSON.parse(key) } }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2140,
        "y": 2860,
        "wires": [
            [
                "14f61a4a.03d2d6"
            ]
        ]
    },
    {
        "id": "14f61a4a.03d2d6",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.values.update",
        "x": 2290,
        "y": 2860,
        "wires": [
            []
        ]
    },
    {
        "id": "3825d845.a63508",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "folderId",
        "info": "",
        "x": 650,
        "y": 1040,
        "wires": []
    },
    {
        "id": "68370845.361ec8",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "folderId",
        "info": "",
        "x": 1050,
        "y": 1080,
        "wires": []
    },
    {
        "id": "f09bc7b8.19adc8",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "5DOL-dashboard",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "plain",
        "template": "{\n  \"_id\": \"_design/5DOL-dashboard\",\n  \"_rev\": \"50-93fbbda15d4d910f9dbcb461ffebad4f\",\n  \"views\": {\n    \"5DOL-dashboard\": {\n      \"map\": \"function (doc) {\\r\\n  if (doc.workstationForm == \\\"nursery-harvest\\\" && doc.productionLine == \\\"breeding\\\" && !doc.deleted) {\\r\\n    emit(doc.timestamp, doc.totalCountEstimate/1000000);\\r\\n  }\\r\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 490,
        "y": 540,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "a098f2e0.bac8a",
        "type": "comment",
        "z": "2811332b.6f138c",
        "name": "new",
        "info": "",
        "x": 190,
        "y": 140,
        "wires": []
    },
    {
        "id": "fb28262f.8e3f78",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "date",
                "pt": "msg",
                "to": "payload.date",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "endOfDay",
                "pt": "msg",
                "to": "payload.endOfDay",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 680,
        "wires": [
            [
                "6c979d4b.dbdc44"
            ]
        ]
    },
    {
        "id": "a4fc564.78434a8",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "query",
        "func": "let query = {}\n\nquery.startkey = msg.startOfMonth;\nquery.endkey = msg.endOfDay;\n\nmsg.payload= {};\nmsg.payload = query;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 220,
        "wires": [
            [
                "8ba1145f.5120d8"
            ]
        ]
    },
    {
        "id": "8ba1145f.5120d8",
        "type": "cloudantplus in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "dashboard-performance",
        "index": "sum_total_frass",
        "x": 630,
        "y": 220,
        "wires": [
            [
                "1808fa1f.9eb8b6"
            ]
        ]
    },
    {
        "id": "a713bda1.6413e",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "dashboard-performance",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/dashboard-performance\",\n  \"_rev\": \"65-271409bc426d4af57c15467fc2969d17\",\n  \"views\": {\n    \"sum_dried_larvae\": {\n      \"map\": \"function (doc) {\\n  if(doc.output && !doc.deleted && doc.productionLine == \\\"farming\\\" && doc.workstationForm == \\\"drying\\\") {\\n    emit(doc.timestamp, parseFloat(doc.output));\\n  }\\n}\",\n      \"reduce\": \"_sum\"\n    },\n    \"sum_total_frass\": {\n      \"map\": \"function (doc) {\\n  if(doc.totalFrass && !doc.deleted && (doc.productionLine == \\\"breeding\\\" || doc.productionLine == \\\"farming\\\") && doc.workstationForm == \\\"grow-out-harvest\\\") {\\n    emit(doc.timestamp, parseFloat(doc.totalFrass) / 1000);\\n  }\\n}\",\n      \"reduce\": \"_sum\"\n    },\n    \"pupae_added\": {\n      \"map\": \"function (doc) {\\n  if(doc.PupaeTotalWeight && !doc.deleted && doc.productionLine == \\\"breeding\\\" && doc.workstationForm == \\\"pupation-setup\\\") {\\n    emit(doc.timestamp, parseFloat(doc.PupaeTotalWeight));\\n  }\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 510,
        "y": 580,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "101b6469.53bf7c",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "dried-larvae",
        "info": "",
        "x": 510,
        "y": 80,
        "wires": []
    },
    {
        "id": "c538455f.ddae68",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "query",
        "func": "let query = {}\n\nquery.startkey = msg.startOfMonth;\nquery.endkey = msg.endOfDay;\n\nmsg.payload= {};\nmsg.payload = query;\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 120,
        "wires": [
            [
                "a38fe7f1.0d5008"
            ]
        ]
    },
    {
        "id": "a38fe7f1.0d5008",
        "type": "cloudantplus in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "dashboard-performance",
        "index": "sum_dried_larvae",
        "x": 630,
        "y": 120,
        "wires": [
            [
                "23d7068b.9d579a"
            ]
        ]
    },
    {
        "id": "23d7068b.9d579a",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'dried-larvae'\nlet type = 'simple'\nlet label = 'Dried larvae'\nlet setpoints = msg.setpoints\nlet target = parseFloat(setpoints['driedLarvaeTarget']) || 0\nlet reducedResult;\nif(msg.payload.length > 0) {\n    reducedResult = msg.payload[0].value\n} else {\n    reducedResult = 0;\n}\n\nlet data = []\n\ndata.push({label: 'This month to current day:', value: reducedResult, unit: 'kg'})\ndata.push({label: 'Target:', value: target, title: 'driedLarvaeTarget', unit: 'kg'})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 120,
        "wires": [
            [
                "529b4db1.d8f724"
            ]
        ]
    },
    {
        "id": "622741e.59d18c",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "dried-larvae-weight",
        "info": "",
        "x": 530,
        "y": 780,
        "wires": []
    },
    {
        "id": "611cff34.929fc",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "secondday",
        "func": "let query = {}\nquery.startkey = msg.startOfDays[1];\nquery.endkey = msg.endOfDays[1];\n\nmsg.topic = 1;\nmsg.payload = {}\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 900,
        "wires": [
            [
                "b75f186b.c80958"
            ]
        ]
    },
    {
        "id": "6724e850.fbafa8",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "getDate",
        "func": "let docs = msg.payload || []\nlet startOfDay = msg.req.query.date\nlet startOfDayDate = new Date(startOfDay)\nlet startOfDays = []\nlet endOfDays = []\n\nfor (let i = 0; i < 7; i++) {\n    let ms = i * 24 * 60 * 60 * 1000 \n    let msStartOfDay = startOfDayDate.getTime()\n    let date = new Date(msStartOfDay - ms)\n    let day = date.toISOString()\n    \n    startOfDays.push(day)\n}\nstartOfDays.reverse()\n\nfor (let i = 0; i < startOfDays.length; i++) {\n    let day = startOfDays[i]\n    let aggregated = aggregate(day)\n    \n}\n\nfunction aggregate(startOfDay) {\n    let startOfDayDate = new Date(startOfDay)\n    let ms = 24 * 60 * 60 * 1000 // 1 day\n    let msStartOfDay = startOfDayDate.getTime()\n    let msEndOfDay = msStartOfDay + ms - 0.001\n    let day = new Date(msEndOfDay).toISOString();\n    endOfDays.push(day);\n    let total = 0\n    \n    return 0;\n}\n\nmsg.startOfDays = startOfDays;\nmsg.endOfDays = endOfDays;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 820,
        "wires": [
            [
                "8fb46d56.2ae88"
            ]
        ]
    },
    {
        "id": "e5e5adac.f4a67",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "firstday",
        "func": "let query = {}\nquery.startkey = msg.startOfDays[0];\nquery.endkey = msg.endOfDays[0];\n\n\nmsg.topic = 0;\nmsg.payload = {}\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 860,
        "wires": [
            [
                "5d7e04d5.1b521c"
            ]
        ]
    },
    {
        "id": "ae1c2480.191828",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "thirdday",
        "func": "let query = {}\nquery.startkey = msg.startOfDays[2];\nquery.endkey = msg.endOfDays[2];\n\nmsg.topic = 2;\nmsg.payload = {}\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 940,
        "wires": [
            [
                "8d498f88.e0fcd"
            ]
        ]
    },
    {
        "id": "9a13b5a4.3a1f88",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "forthday",
        "func": "let query = {}\nquery.startkey = msg.startOfDays[3];\nquery.endkey = msg.endOfDays[3];\n\nmsg.topic = 3;\nmsg.payload = {}\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 980,
        "wires": [
            [
                "42dc9ef2.514bd"
            ]
        ]
    },
    {
        "id": "fdddc193.a6b71",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "fifthday",
        "func": "let query = {}\nquery.startkey = msg.startOfDays[4];\nquery.endkey = msg.endOfDays[4];\n\nmsg.topic = 4;\nmsg.payload = {}\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 1020,
        "wires": [
            [
                "885dba90.093a98"
            ]
        ]
    },
    {
        "id": "6ad5561a.cb4e88",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "sixthday",
        "func": "let query = {}\nquery.startkey = msg.startOfDays[5];\nquery.endkey = msg.endOfDays[5];\n\nmsg.topic = 5;\nmsg.payload = {}\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 1060,
        "wires": [
            [
                "7111a977.b0bf28"
            ]
        ]
    },
    {
        "id": "da40289a.b7a8e8",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "seventhday",
        "func": "let query = {}\nquery.startkey = msg.startOfDays[6];\nquery.endkey = msg.endOfDays[6];\n\nmsg.topic = 6;\nmsg.payload = {}\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 650,
        "y": 1100,
        "wires": [
            [
                "b4d5ee9b.7e2dc"
            ]
        ]
    },
    {
        "id": "6c1cb9b9.a721c8",
        "type": "join",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "7",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 950,
        "y": 820,
        "wires": [
            [
                "df6475f.18ee088"
            ]
        ]
    },
    {
        "id": "cd26c92b.6a8628",
        "type": "cloudantplus in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "dashboard-performance",
        "index": "sum_dried_larvae",
        "x": 790,
        "y": 820,
        "wires": [
            [
                "6c1cb9b9.a721c8"
            ]
        ]
    },
    {
        "id": "df6475f.18ee088",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'dried-larvae-weight'\nlet type = 'barchart'\nlet label = 'Dried larvae weight (kg)'\nlet data = {}\n\nlet setpoints = msg.setpoints\nlet setpointKey = 'driedLarvaeWeightTarget'\nlet setpointValue = setpoints[setpointKey] || 0\n\nlet reduced = [];\nfor(let key in msg.payload) {\n    if(msg.payload[key].length > 0) {\n        reduced.push(msg.payload[key][0].value)\n    } else {\n        reduced.push(0)\n    }\n    \n}\n\nlet startOfDays = msg.startOfDays\nlet latest = reduced[reduced.length - 1] // We can assume last element is latest\nlet target = setpointValue || 1\nlet ofTarget = 100 * latest / target\nlet aboveTarget = latest >= target\n\ndata.data = reduced\ndata.labels = formatTimestamps(startOfDays)\ndata.min = Math.min(...reduced)\ndata.max = Math.max(...reduced)\ndata.ofTarget = Math.round(ofTarget)\ndata.setpoint = setpointValue\ndata.unit = 'kg'\ndata.trendUp = aboveTarget\ndata.value = latest\n\nmsg.payload = {marker, type, label, data}\nreturn msg;\n\nfunction formatTimestamps(timestamps) {\n    let months = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"]\n    let formatted = []\n    \n    for (let timestamp of timestamps) {\n        let date = new Date(timestamp)\n        let day = date.getDate()\n        let month = date.getMonth()\n        let year = date.getFullYear()\n        let formattedDate = \"\"\n        \n        formattedDate = formattedDate + day\n        formattedDate = formattedDate + \" \"\n        formattedDate = formattedDate + months[month]\n        formattedDate = formattedDate + \" \"\n        formattedDate = formattedDate + year\n        \n        formatted.push(formattedDate)\n    }\n    \n    return formatted\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1100,
        "y": 820,
        "wires": [
            [
                "1184d744.586879"
            ]
        ]
    },
    {
        "id": "7c4af1bd.0364a",
        "type": "subflow:19c17d30.e6e6a3",
        "z": "161e8c5f.9e3554",
        "name": "",
        "env": [],
        "x": 1680,
        "y": 760,
        "wires": [
            [
                "e460b1c0.04cb8"
            ]
        ]
    },
    {
        "id": "611c73b2.81c37c",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "pupation-setup-dashboard",
        "index": "pupation-setup-dashboard",
        "x": 1590,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "4cb38a33.550114",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "pupae_added_to_mc",
        "info": "",
        "x": 1620,
        "y": 140,
        "wires": []
    },
    {
        "id": "6ea273c9.285d8c",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "dashboard-performance",
        "index": "pupae_added",
        "x": 1630,
        "y": 320,
        "wires": [
            [
                "2eab3ab9.9d9216"
            ]
        ]
    },
    {
        "id": "a31ab677.1611b8",
        "type": "inject",
        "z": "dc8c4370.78e2",
        "name": "design names",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "payload": "[\"sortTimestamp\",\"locationWithTime\"]",
        "payloadType": "json",
        "x": 200,
        "y": 760,
        "wires": [
            [
                "52a0e09.943442"
            ]
        ],
        "info": "# Design names\n\nAdd an array of design document names\nto check. Add these names to the split node\nand provide a template containing the code"
    },
    {
        "id": "52a0e09.943442",
        "type": "split",
        "z": "dc8c4370.78e2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 230,
        "y": 800,
        "wires": [
            [
                "e4666e86.45f56"
            ]
        ]
    },
    {
        "id": "e4666e86.45f56",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 210,
        "y": 840,
        "wires": [
            [
                "9bfa6a40.d44548"
            ]
        ]
    },
    {
        "id": "9bfa6a40.d44548",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "should delay?",
        "property": "ENVIRONMENT",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "production",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 200,
        "y": 880,
        "wires": [
            [
                "62fa7534.a2d1cc"
            ],
            [
                "27c6c3c0.2e340c"
            ]
        ]
    },
    {
        "id": "62fa7534.a2d1cc",
        "type": "delay",
        "z": "dc8c4370.78e2",
        "name": "",
        "pauseType": "rate",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 210,
        "y": 920,
        "wires": [
            [
                "27c6c3c0.2e340c"
            ]
        ]
    },
    {
        "id": "27c6c3c0.2e340c",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for GET",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/environmentdata/_design/\"+msg.topic;\nmsg.method=\"GET\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 960,
        "wires": [
            [
                "80b5d34a.a32dd"
            ]
        ]
    },
    {
        "id": "80b5d34a.a32dd",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 210,
        "y": 1000,
        "wires": [
            [
                "8c46b21e.513af"
            ]
        ]
    },
    {
        "id": "8c46b21e.513af",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "existingDoc",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 180,
        "y": 1040,
        "wires": [
            [
                "737140cb.62d81"
            ]
        ]
    },
    {
        "id": "737140cb.62d81",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for PUT",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/environmentdata/_design/\"+msg.topic;\nmsg.method=\"PUT\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 1080,
        "wires": [
            [
                "66fe971a.dbc0b8"
            ]
        ]
    },
    {
        "id": "66fe971a.dbc0b8",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "design names",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sortTimestamp",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "locationWithTime",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 200,
        "y": 1120,
        "wires": [
            [
                "7217e145.86e7c"
            ],
            [
                "37b79567.780cda"
            ]
        ]
    },
    {
        "id": "7217e145.86e7c",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "sortTimestamp",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/sortTimestamp\",\n  \"_rev\": \"22-b27935dd20c938a57a82546dc214afbd\",\n  \"views\": {\n    \"by-device-location\": {\n      \"map\": \"function (doc) {\\n  emit([doc.ID, doc.location, new Date(doc.ts)], doc);\\n}\"\n    },\n    \"by-device\": {\n      \"map\": \"function (doc) {\\n  emit([doc.ID, new Date(doc.ts)], doc);\\n}\"\n    },\n    \"by-timestamp\": {\n      \"map\": \"function (doc) {\\n  if (doc.ts) emit(doc.ts, doc);\\n}\"\n    },\n    \"paginatedBy-timestamp\": {\n      \"map\": \"function (doc) {\\n  if (doc.ts) emit(doc.ts, doc);\\n}\",\n      \"reduce\": \"_count\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 480,
        "y": 760,
        "wires": [
            [
                "c7427947.5cab38"
            ]
        ]
    },
    {
        "id": "37b79567.780cda",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "locationWithTime",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/locationWithTime\",\n  \"_rev\": \"8-7410a8efa282c8f1ebfa05400bf52964\",\n  \"views\": {\n    \"locationWithTime\": {\n      \"map\": \"function (doc) {\\n  if(doc.location){emit([doc.ts], doc);}\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 490,
        "y": 800,
        "wires": [
            [
                "c7427947.5cab38"
            ]
        ]
    },
    {
        "id": "c7427947.5cab38",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "func": "if (msg.existingDoc || msg.existingDoc._rev) {\n    msg.hasRev = true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 760,
        "wires": [
            [
                "45ea4ace.56af04"
            ]
        ]
    },
    {
        "id": "45ea4ace.56af04",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "property": "hasRev",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 820,
        "y": 800,
        "wires": [
            [
                "67990f5d.038de"
            ],
            [
                "73508fe5.1d7a7"
            ]
        ]
    },
    {
        "id": "67990f5d.038de",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload._rev",
                "pt": "msg",
                "to": "existingDoc._rev",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 840,
        "wires": [
            [
                "fa0eb11a.6cbce"
            ]
        ]
    },
    {
        "id": "73508fe5.1d7a7",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload._rev",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 770,
        "y": 880,
        "wires": [
            [
                "fa0eb11a.6cbce"
            ]
        ]
    },
    {
        "id": "fa0eb11a.6cbce",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 810,
        "y": 920,
        "wires": [
            []
        ]
    },
    {
        "id": "4f9ab9e6.c4bc88",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "var label = msg.day;\nvar data = []\n\nvar target = msg.target? msg.target.value.value:flow.get('target')[msg.event];\n\n\n//initialize 0 got all days\nfor(let day of label){\n    data.push(0);\n}\n\n//assign value\nfor(let payload of msg.payload){\n    if(label.includes(payload.key)){\n        data[label.indexOf(payload.key)] = Math.round((data[label.indexOf(payload.key)] + parseFloat(payload.value))*100) / 100;\n    }\n}\n\nfor(var x = 0; x < data.length; x++) {\n    data[x] = data[x].toFixed(2);\n}\n\n\n//check negative value\nlet max = data[0];\nlet min = data[0];\nfor(let data1 of data){\n    if(data1 > max){\n        max = data1;\n    }\n    if(data1 < min){\n        min = data1;\n    }\n    if(data1 < 0){\n        data1 = 0;\n    }\n}\n\nlet trendUp = true;\nlet ofTarget = Math.round(100*data[6]/target)\nif(ofTarget < target){\n    trendUp = false;\n}\n\nlet payload = {\n    trendUp: trendUp,\n    value: data[6],\n    ofTarget,\n    setpoint: target,\n    unit: 'kg',\n    data: data,\n    labels: label,\n    min:min,\n    max:max\n}\nmsg.socketIOEvent = msg.event\nmsg.payload = payload\nflow.set(msg.event+\"Temp\", payload)\nflow.set(msg.event+\"NewData\", false);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3720,
        "y": 340,
        "wires": [
            [
                "f3cb259d.250658"
            ]
        ]
    },
    {
        "id": "8fb46d56.2ae88",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "a9970708.f1c688",
            "27b3990.7bbe168",
            "1dc671b1.75d1de",
            "277d01fb.787a5e",
            "a8733d25.e82d3",
            "6724ebd0.edfc54",
            "67fcfd51.ee9b24"
        ],
        "x": 595,
        "y": 820,
        "wires": []
    },
    {
        "id": "5d7e04d5.1b521c",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "adb60012.0cc8c"
        ],
        "x": 755,
        "y": 860,
        "wires": []
    },
    {
        "id": "adb60012.0cc8c",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "5d7e04d5.1b521c",
            "b75f186b.c80958",
            "8d498f88.e0fcd",
            "42dc9ef2.514bd",
            "885dba90.093a98",
            "7111a977.b0bf28",
            "b4d5ee9b.7e2dc"
        ],
        "x": 675,
        "y": 820,
        "wires": [
            [
                "cd26c92b.6a8628"
            ]
        ]
    },
    {
        "id": "a9970708.f1c688",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "8fb46d56.2ae88"
        ],
        "x": 535,
        "y": 860,
        "wires": [
            [
                "e5e5adac.f4a67"
            ]
        ]
    },
    {
        "id": "b75f186b.c80958",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "adb60012.0cc8c"
        ],
        "x": 755,
        "y": 900,
        "wires": []
    },
    {
        "id": "8d498f88.e0fcd",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "adb60012.0cc8c"
        ],
        "x": 755,
        "y": 940,
        "wires": []
    },
    {
        "id": "42dc9ef2.514bd",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "adb60012.0cc8c"
        ],
        "x": 755,
        "y": 980,
        "wires": []
    },
    {
        "id": "885dba90.093a98",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "adb60012.0cc8c"
        ],
        "x": 755,
        "y": 1020,
        "wires": []
    },
    {
        "id": "7111a977.b0bf28",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "adb60012.0cc8c"
        ],
        "x": 755,
        "y": 1060,
        "wires": []
    },
    {
        "id": "b4d5ee9b.7e2dc",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "adb60012.0cc8c"
        ],
        "x": 755,
        "y": 1100,
        "wires": []
    },
    {
        "id": "27b3990.7bbe168",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "8fb46d56.2ae88"
        ],
        "x": 535,
        "y": 900,
        "wires": [
            [
                "611cff34.929fc"
            ]
        ]
    },
    {
        "id": "1dc671b1.75d1de",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "8fb46d56.2ae88"
        ],
        "x": 535,
        "y": 940,
        "wires": [
            [
                "ae1c2480.191828"
            ]
        ]
    },
    {
        "id": "277d01fb.787a5e",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "8fb46d56.2ae88"
        ],
        "x": 535,
        "y": 980,
        "wires": [
            [
                "9a13b5a4.3a1f88"
            ]
        ]
    },
    {
        "id": "a8733d25.e82d3",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "8fb46d56.2ae88"
        ],
        "x": 535,
        "y": 1020,
        "wires": [
            [
                "fdddc193.a6b71"
            ]
        ]
    },
    {
        "id": "6724ebd0.edfc54",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "8fb46d56.2ae88"
        ],
        "x": 535,
        "y": 1060,
        "wires": [
            [
                "6ad5561a.cb4e88"
            ]
        ]
    },
    {
        "id": "67fcfd51.ee9b24",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "8fb46d56.2ae88"
        ],
        "x": 535,
        "y": 1100,
        "wires": [
            [
                "da40289a.b7a8e8"
            ]
        ]
    },
    {
        "id": "d2e5aff1.e9562",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "// let groupLine = 'farming'\n// let groupLine2 = 'breeding'\nlet groupForms = [\n    'grow-out-harvest'\n]\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    // if (line !== groupLine) continue\n    if (!groupForms.includes(form)) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1200,
        "wires": [
            [
                "838eac01.5c4c8"
            ]
        ]
    },
    {
        "id": "f16188d7.1ce7d8",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 1200,
        "wires": [
            [
                "d2e5aff1.e9562"
            ]
        ]
    },
    {
        "id": "728088a2.96fc68",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 1200,
        "wires": []
    },
    {
        "id": "838eac01.5c4c8",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet reduced = 0\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let total = +row.totalFrass || 0\n    \n    reduced = reduced + total\n}\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 1200,
        "wires": [
            [
                "329f47a1.a9e478"
            ]
        ]
    },
    {
        "id": "617fdb21.818e64",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "frass-weight F&B",
        "info": "Farming and breeding",
        "x": 520,
        "y": 1160,
        "wires": []
    },
    {
        "id": "329f47a1.a9e478",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'frass-weight'\nlet type = 'simple'\nlet label = 'Frass weight (kg)'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult, unit: 'kg'})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 1200,
        "wires": [
            [
                "728088a2.96fc68"
            ]
        ]
    },
    {
        "id": "355a6778.6dff58",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "group",
        "func": "let groupLine = 'farming'\nlet groupForms = [\n    'drying'\n]\nlet rows = msg.payload.masterData\nlet grouped = []\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let line = row.productionLine\n    let form = row.workstationForm\n    \n    if (line !== groupLine) continue\n    if (!groupForms.includes(form)) continue\n    \n    grouped.push(row)\n}\n\nmsg.payload = grouped\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1300,
        "wires": [
            [
                "7f803e20.5a1fd"
            ]
        ]
    },
    {
        "id": "2bc474c0.25b9ec",
        "type": "link in",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "43c89d4b.5e1634"
        ],
        "x": 375,
        "y": 1300,
        "wires": [
            [
                "355a6778.6dff58"
            ]
        ]
    },
    {
        "id": "5ba8a28b.11d35c",
        "type": "link out",
        "z": "19c17d30.e6e6a3",
        "name": "",
        "links": [
            "cb01885.b932e78"
        ],
        "x": 895,
        "y": 1300,
        "wires": []
    },
    {
        "id": "7f803e20.5a1fd",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "reduce",
        "func": "let rows = msg.payload\nlet reduced = 0\n\n// node.warn(rows)\n\nfor (let row of rows) {\n    let total = +row.input || 0\n    \n    reduced = reduced + total\n}\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 1300,
        "wires": [
            [
                "2299da27.535e76"
            ]
        ]
    },
    {
        "id": "4e2300d4.c8f99",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "fresh-larvae-weight",
        "info": "",
        "x": 530,
        "y": 1260,
        "wires": []
    },
    {
        "id": "2299da27.535e76",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "structure",
        "func": "let marker = 'fresh-larvae-weight'\nlet type = 'simple'\nlet label = 'Fresh larvae weight (kg)'\nlet reducedResult = msg.payload\nlet data = []\n\ndata.push({label: '', value: reducedResult, unit: 'kg'})\n\nmsg.payload = {marker, type, label, data}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 1300,
        "wires": [
            [
                "5ba8a28b.11d35c"
            ]
        ]
    },
    {
        "id": "7fb74f9b.af24a",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "var label = msg.day;\nvar data = []\n\nvar target = msg.target? msg.target.value.value:flow.get('target')[msg.event];\n\n\n//initialize 0 got all days\nfor(let day of label){\n    data.push(0);\n}\n\n//assign value\nfor(let payload of msg.payload){\n    if(label.includes(payload.key)){\n        data[label.indexOf(payload.key)] = Math.round((data[label.indexOf(payload.key)] + parseFloat(payload.value)) * 100)/100;\n    }\n    \n}\n\n//check negative value\nlet max = data[0];\nlet min = data[0];\nfor(let data1 of data){\n    if(data1 > max){\n        max = data1;\n    }\n    if(data1 < min){\n        min = data1;\n    }\n    if(data1 < 0){\n        data1 = 0;\n    }\n}\n\nlet trendUp = true;\nlet ofTarget = Math.round(100*data[6]/target)\nif(ofTarget < target){\n    trendUp = false;\n}\n\nlet payload = {\n    trendUp: trendUp,\n    value: data[6],\n    ofTarget,\n    setpoint: target,\n    unit: 'g',\n    data: data,\n    labels: label,\n    min:min,\n    max:max\n}\nmsg.socketIOEvent = msg.event\nmsg.payload = payload\nflow.set(msg.event+\"Temp\", payload)\nflow.set(msg.event+\"NewData\", false);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3200,
        "y": 300,
        "wires": [
            [
                "eb6617b0.fae798"
            ]
        ]
    },
    {
        "id": "d1c021de.3fe1e",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "event",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "5-dol-collected",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupae-added-to-mc",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 3050,
        "y": 260,
        "wires": [
            [
                "31e2d33f.f9f20c"
            ],
            [
                "96a95ced.8112c"
            ],
            [
                "7fb74f9b.af24a"
            ]
        ]
    },
    {
        "id": "31e2d33f.f9f20c",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "var label = msg.day;\nvar data = []\n\nvar target = msg.target? msg.target.value.value:flow.get('target')[msg.event];\n\n\n//initialize 0 got all days\nfor(let day of label){\n    data.push(0);\n}\n\n//assign value\nfor(let payload of msg.payload){\n    let days = label\n    let key = payload.key\n    let value = payload.value\n    \n    if(!days.includes(key)) continue\n    \n    let finalValue = 0\n    \n    // node.warn(data[days.indexOf(key)])\n    // node.warn(value)\n    \n    finalValue = Math.round(value * 100) / 100\n    data[days.indexOf(key)] = finalValue\n}\n\nfor(var x = 0; x < data.length; x++) {\n    data[x] = data[x].toFixed(2);\n}\n\n//check negative value\nlet max = data[0];\nlet min = data[0];\nfor(let data1 of data){\n    if(data1 > max){\n        max = data1;\n    }\n    if(data1 < min){\n        min = data1;\n    }\n    if(data1 < 0){\n        data1 = 0;\n    }\n}\n\nlet trendUp = true;\nlet ofTarget = Math.round(100*data[6]/target)\nif(ofTarget < target){\n    trendUp = false;\n}\n\nlet payload = {\n    trendUp: trendUp,\n    value: data[6],\n    ofTarget,\n    setpoint: target,\n    unit: 'M',\n    data: data,\n    labels: label,\n    min:min,\n    max:max\n}\nmsg.socketIOEvent = msg.event\nmsg.payload = payload\nflow.set(msg.event+\"Temp\", payload)\nflow.set(msg.event+\"NewData\", false);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3200,
        "y": 220,
        "wires": [
            [
                "eb6617b0.fae798"
            ]
        ]
    },
    {
        "id": "96a95ced.8112c",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "var label = msg.day;\nvar data = []\n\nvar target = msg.target? msg.target.value.value:flow.get('target')[msg.event];\n\n\n//initialize 0 got all days\nfor(let day of label){\n    data.push(0);\n}\n\n//assign value\nfor(let payload of msg.payload){\n    if(label.includes(payload.key)){\n        data[label.indexOf(payload.key)] = Math.round((data[label.indexOf(payload.key)] + parseFloat(payload.value))*100) / 100;\n    }\n}\n\nfor(var x = 0; x < data.length; x++) {\n    data[x] = data[x].toFixed(2);\n}\n\n\n//check negative value\nlet max = data[0];\nlet min = data[0];\nfor(let data1 of data){\n    if(data1 > max){\n        max = data1;\n    }\n    if(data1 < min){\n        min = data1;\n    }\n    if(data1 < 0){\n        data1 = 0;\n    }\n}\n\nlet trendUp = true;\nlet ofTarget = Math.round(100*data[6]/target)\nif(ofTarget < target){\n    trendUp = false;\n}\n\nlet payload = {\n    trendUp: trendUp,\n    value: data[6],\n    ofTarget,\n    setpoint: target,\n    unit: 'kg',\n    data: data,\n    labels: label,\n    min:min,\n    max:max\n}\nmsg.socketIOEvent = msg.event\nmsg.payload = payload\nflow.set(msg.event+\"Temp\", payload)\nflow.set(msg.event+\"NewData\", false);\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3200,
        "y": 260,
        "wires": [
            [
                "eb6617b0.fae798"
            ]
        ]
    },
    {
        "id": "187cc18c.79da9e",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "DeletedExistSelector",
        "func": "let deleted = {}\ndeleted['$exists'] = false\n\nmsg.payload.selector.deleted = deleted\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 500,
        "wires": [
            [
                "9a462895.b433f8"
            ]
        ]
    },
    {
        "id": "36c36c75.e59f54",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "findKeys",
        "func": "// This is for environmentdata database only\n\nlet docs = msg.payload.docs // [{}]\nlet allKeys = []\n\n// [{temp: 30, distance: 20},\n// {temp: 20}]\n\n// [{temp: 30, distance: 20},\n// {temp: 20, distance: null}]\n\n// null\n// \"\"\n// \"n/a\"\n\nfor (let doc of docs) {\n    \n    for (let keyInDoc in doc) {\n        let foundKey = false;\n        \n        if(allKeys.length == 0) {\n            allKeys.push(keyInDoc)\n        }\n        \n        for(var x = 0; x < allKeys.length; x++) {\n            let key = allKeys[x];\n            if(key === keyInDoc) {\n                foundKey = true\n                break;\n            }\n        }\n        \n        if(foundKey == false) {\n            allKeys.push(keyInDoc);\n        }\n    }\n}\n\nfor (let doc of docs) {\n    for (var i = 0; i < allKeys.length; i++) {\n        let key = allKeys[i];\n        let foundKey = false;\n        let dynamicKey = \"\";\n        \n         for(let keyInDoc in doc) {\n            \n            if(key === keyInDoc) {\n                foundKey = true\n                break;\n            }\n        }\n        \n        if(foundKey == false) {\n            dynamicKey = allKeys[i]\n            doc[dynamicKey] = null;\n        }\n    }\n}\n\nmsg.payload.docs = docs;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 620,
        "wires": [
            [
                "fbf69430.446098"
            ]
        ]
    },
    {
        "id": "e91acc8f.c8802",
        "type": "catch",
        "z": "d35f6c55.31d32",
        "name": "",
        "scope": [
            "75c970a6.e57d4",
            "9a462895.b433f8",
            "ed3e8b51.2f4258",
            "66c9f63e.b69418"
        ],
        "uncaught": false,
        "x": 430,
        "y": 780,
        "wires": [
            [
                "a12e780.1de8d88"
            ]
        ]
    },
    {
        "id": "a12e780.1de8d88",
        "type": "function",
        "z": "d35f6c55.31d32",
        "name": "",
        "func": "msg.payload = {}\nlet today = new Date();\n\nmsg.payload.message = msg.error.message;\nmsg.payload.source = msg.error.source;\nmsg.payload.date = today;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 760,
        "wires": [
            [
                "24ddeb90.868604"
            ]
        ]
    },
    {
        "id": "24ddeb90.868604",
        "type": "cloudantplus out",
        "z": "d35f6c55.31d32",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 780,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "3d8606f9.63bd3a",
        "type": "catch",
        "z": "6f7f441.17c58bc",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 320,
        "y": 460,
        "wires": [
            [
                "4c14bafe.73fcb4"
            ]
        ]
    },
    {
        "id": "4c14bafe.73fcb4",
        "type": "function",
        "z": "6f7f441.17c58bc",
        "name": "",
        "func": "msg.payload = {}\nlet today = new Date();\n\nmsg.payload.message = msg.error.message;\nmsg.payload.source = msg.error.source;\nmsg.payload.date = today;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 440,
        "wires": [
            [
                "db758d55.f29d8"
            ]
        ]
    },
    {
        "id": "db758d55.f29d8",
        "type": "cloudantplus out",
        "z": "6f7f441.17c58bc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 660,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "42c61c3f.f7d444",
        "type": "comment",
        "z": "d35f6c55.31d32",
        "name": "",
        "info": "Find all the key, and then add all the key to each doc",
        "x": 1180,
        "y": 600,
        "wires": []
    },
    {
        "id": "cfc31a2c.05e148",
        "type": "function",
        "z": "6d154715.fe8408",
        "name": "",
        "func": "let selector = {\n    _id: 'cache'\n}\n\nmsg.payload = {\n    selector\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 80,
        "wires": [
            [
                "85d97f8d.79098"
            ]
        ]
    },
    {
        "id": "85d97f8d.79098",
        "type": "cloudantplus in",
        "z": "6d154715.fe8408",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "sensorDevice",
        "index": "findByDeletedFalse-deviceId",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "ff503a74.bfc2b8"
            ]
        ]
    },
    {
        "id": "40d6ae16.59068",
        "type": "inject",
        "z": "6d154715.fe8408",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 80,
        "wires": [
            [
                "cfc31a2c.05e148"
            ]
        ]
    },
    {
        "id": "ff503a74.bfc2b8",
        "type": "switch",
        "z": "6d154715.fe8408",
        "name": "",
        "property": "payload.docs",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 80,
        "wires": [
            [
                "968f0c52.7d008"
            ]
        ]
    },
    {
        "id": "968f0c52.7d008",
        "type": "function",
        "z": "6d154715.fe8408",
        "name": "",
        "func": "let knownDeviceDataFields = []\n\nmsg.payload = {\n    _id: 'cache',\n    docType: 'cache',\n    cache: {\n        knownDeviceDataFields\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 80,
        "wires": [
            [
                "11a456f1.e503d9"
            ]
        ]
    },
    {
        "id": "11a456f1.e503d9",
        "type": "cloudantplus out",
        "z": "6d154715.fe8408",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 970,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "bae3bb47.7fd958",
        "type": "comment",
        "z": "6d154715.fe8408",
        "name": "Cache",
        "info": "",
        "x": 130,
        "y": 40,
        "wires": []
    },
    {
        "id": "55ea5992.517888",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "detectExportCsvSensorData",
        "func": "let isSensorData = msg.payload.database === 'environmentdata'\nlet isCSV = msg.payload.type === 'csv'\nlet detectExportCsvSensorData = false\n\nif (isSensorData && isCSV) {\n    detectExportCsvSensorData = true\n}\n\nmsg.detectExportCsvSensorData = detectExportCsvSensorData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 200,
        "wires": [
            [
                "7cf12358.fbdb6c"
            ]
        ]
    },
    {
        "id": "7cf12358.fbdb6c",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "detectExportCsvSensorData",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 630,
        "y": 200,
        "wires": [
            [
                "4714fdcd.7af624"
            ],
            [
                "3d21a906.40b3b6"
            ]
        ]
    },
    {
        "id": "f1590964.dc08a8",
        "type": "link in",
        "z": "1f50769f.97b799",
        "name": "",
        "links": [
            "8c8b9c3a.4332e"
        ],
        "x": 235,
        "y": 200,
        "wires": [
            [
                "55ea5992.517888"
            ]
        ]
    },
    {
        "id": "4714fdcd.7af624",
        "type": "link out",
        "z": "1f50769f.97b799",
        "name": "",
        "links": [
            "d508be0a.7e50c"
        ],
        "x": 735,
        "y": 180,
        "wires": []
    },
    {
        "id": "3d21a906.40b3b6",
        "type": "link out",
        "z": "1f50769f.97b799",
        "name": "",
        "links": [
            "130b687f.107c58"
        ],
        "x": 735,
        "y": 220,
        "wires": []
    },
    {
        "id": "8407fdd1.be55a",
        "type": "json",
        "z": "6b99fc65.0259d4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 710,
        "y": 460,
        "wires": [
            [
                "c5d820f1.916e",
                "b1e95b7e.568958",
                "af54a412.dd3318"
            ]
        ]
    },
    {
        "id": "62c0b43f.1e5d4c",
        "type": "switch",
        "z": "6b99fc65.0259d4",
        "name": "Got Auth?",
        "property": "req.headers.authorization",
        "propertyType": "msg",
        "rules": [
            {
                "t": "neq",
                "v": "DB_TOKEN",
                "vt": "env"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 440,
        "wires": [
            [
                "d140f12b.37336",
                "e3ac1c6d.b1fb",
                "8407fdd1.be55a",
                "5789b380.071e2c"
            ],
            [
                "39a53db0.bb3822"
            ]
        ]
    },
    {
        "id": "c5d820f1.916e",
        "type": "cloudantplus out",
        "z": "6b99fc65.0259d4",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "environmentdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 910,
        "y": 460,
        "wires": [
            []
        ]
    },
    {
        "id": "b1e95b7e.568958",
        "type": "debug",
        "z": "6b99fc65.0259d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 420,
        "wires": []
    },
    {
        "id": "af54a412.dd3318",
        "type": "link out",
        "z": "6b99fc65.0259d4",
        "name": "from POST /insectdata Raw Data",
        "links": [
            "927b7e7f.eae9b"
        ],
        "x": 835,
        "y": 500,
        "wires": []
    },
    {
        "id": "762736ff.7322e8",
        "type": "http in",
        "z": "6b99fc65.0259d4",
        "name": "",
        "url": "/insectdata",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 440,
        "wires": [
            [
                "62c0b43f.1e5d4c"
            ]
        ]
    },
    {
        "id": "d140f12b.37336",
        "type": "debug",
        "z": "6b99fc65.0259d4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 730,
        "y": 140,
        "wires": []
    },
    {
        "id": "e3ac1c6d.b1fb",
        "type": "json",
        "z": "6b99fc65.0259d4",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 730,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "5789b380.071e2c",
        "type": "json",
        "z": "6b99fc65.0259d4",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 950,
        "y": 640,
        "wires": [
            [
                "754e5449.cc414c"
            ]
        ]
    },
    {
        "id": "39a53db0.bb3822",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "not accepted",
        "func": "msg.payload = {\n  \"status\" : \"Nice try sucker\"  \n};\nmsg.statusCode = 401;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 640,
        "wires": [
            [
                "f11f95cb.f46528"
            ]
        ]
    },
    {
        "id": "f6b7a95b.ad6338",
        "type": "switch",
        "z": "6b99fc65.0259d4",
        "name": "has form attribute",
        "property": "payload.form",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 580,
        "wires": [
            [
                "62c0b43f.1e5d4c"
            ],
            [
                "9df758e.912e1a8"
            ]
        ]
    },
    {
        "id": "754e5449.cc414c",
        "type": "link out",
        "z": "6b99fc65.0259d4",
        "name": "from POST /insectdata",
        "links": [
            "c0b816ef.005778",
            "17301661.13df1a",
            "78f0a32c.24038c",
            "387c555f.ffba4a",
            "12cff174.06939f"
        ],
        "x": 1055,
        "y": 640,
        "wires": []
    },
    {
        "id": "f11f95cb.f46528",
        "type": "http response",
        "z": "6b99fc65.0259d4",
        "name": "",
        "statusCode": "",
        "headers": {
            "content-type": "application/json"
        },
        "x": 850,
        "y": 680,
        "wires": []
    },
    {
        "id": "9df758e.912e1a8",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "form missing",
        "func": "msg.payload = {\n  \"status\" : \"form attribute is missing\"  \n};\nmsg.statusCode = 400;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 630,
        "y": 680,
        "wires": [
            [
                "f11f95cb.f46528"
            ]
        ]
    },
    {
        "id": "c9285e6c.b8d1b",
        "type": "http in",
        "z": "6b99fc65.0259d4",
        "name": "",
        "url": "/insectforms",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 580,
        "wires": [
            [
                "f6b7a95b.ad6338"
            ]
        ]
    },
    {
        "id": "8c9f9017.c2417",
        "type": "function",
        "z": "6b99fc65.0259d4",
        "name": "all OK",
        "func": "msg.payload = {\n  \"status\" : \"ok\"  \n};\nmsg.statusCode = 201;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 600,
        "wires": [
            [
                "f11f95cb.f46528"
            ]
        ]
    },
    {
        "id": "6271e282.e1a40c",
        "type": "http response",
        "z": "40bdb65b.68cd78",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 760,
        "y": 260,
        "wires": []
    },
    {
        "id": "274bd591.f0a6fa",
        "type": "switch",
        "z": "40bdb65b.68cd78",
        "name": "",
        "property": "checks",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "checks1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 280,
        "wires": [
            [
                "3000439e.0cb02c"
            ],
            [
                "2d033c8e.054164",
                "482a9f0d.1f3eb"
            ]
        ]
    },
    {
        "id": "3cfa01ff.79177e",
        "type": "subflow:a2ccf18.37c751",
        "z": "40bdb65b.68cd78",
        "name": "",
        "env": [],
        "x": 490,
        "y": 360,
        "wires": [
            [
                "60e9bf21.25982"
            ]
        ]
    },
    {
        "id": "d222de14.91fa7",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "storage",
        "func": "let storage = msg.storage || {}\n\nstorage.first = msg.payload\n\nmsg.storage = storage\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 180,
        "wires": [
            [
                "e8f6a35d.857b4"
            ]
        ]
    },
    {
        "id": "60e9bf21.25982",
        "type": "fastcsv",
        "z": "40bdb65b.68cd78",
        "name": "fastcsv",
        "headers": true,
        "headerstr": "",
        "ignoreEmpty": true,
        "discardUnmappedColumns": true,
        "strictColumnHandling": false,
        "delimiter": ",",
        "quote": "\"",
        "escape": "\"",
        "comment": "#",
        "ltrim": false,
        "rtrim": false,
        "rowDelimiter": "\\n",
        "includeEndRowDelimiter": false,
        "quoteHeaders": false,
        "quoteColumns": false,
        "x": 670,
        "y": 360,
        "wires": [
            [
                "de7ff981.897358"
            ]
        ]
    },
    {
        "id": "8a56a590.e46d58",
        "type": "cloudantplus in",
        "z": "40bdb65b.68cd78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "environmentdata",
        "service": "_ext_",
        "search": "_query_",
        "design": "sortTimestamp",
        "index": "by-timestamp",
        "x": 490,
        "y": 180,
        "wires": [
            [
                "d222de14.91fa7"
            ]
        ]
    },
    {
        "id": "de7ff981.897358",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "filename",
        "func": "msg.filename = msg.config.filePath\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 360,
        "wires": [
            [
                "64aaf501.174a6c"
            ]
        ]
    },
    {
        "id": "8016fb96.670458",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "query",
        "func": "let selector = msg.payload.query.selector\nlet sort = msg.payload.query.sort\nlet limit = msg.config.limit\nlet bookmark = ''\nlet use_index = '_design/ts-ID-index'\nlet fields = msg.fields\nlet update = false\nlet conflicts = false\nlet query = {\n    selector,\n    sort,\n    limit,\n    bookmark,\n    use_index,\n    fields,\n    update,\n    conflicts,\n    execution_stats: true\n}\n\nmsg.query = query\nmsg.topic = 'environmentdata'\nmsg.payload = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 180,
        "wires": [
            [
                "8a56a590.e46d58",
                "c993a74d.41da98",
                "11b518c3.8b52b7"
            ]
        ]
    },
    {
        "id": "28102251.4e922e",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "config",
        "func": "let limit = 300\nlet cacheKey = 'knownDeviceDataFields'\nlet requestedFileName = msg.req.body.filename\nlet user = '_' + msg.token.username\n\nlet fileDirectory = 'export-csv-sensor-data/'\nlet fileName = requestedFileName + user\nlet fileExtension = '.csv'\nlet filePath = fileDirectory + fileName + fileExtension\n\nlet config = {\n    limit,\n    cacheKey: 'knownDeviceDataFields',\n    fileDirectory,\n    fileName,\n    fileExtension,\n    filePath\n}\n\nmsg.config = config\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 310,
        "y": 100,
        "wires": [
            [
                "edc7e90e.277b48"
            ]
        ]
    },
    {
        "id": "64aaf501.174a6c",
        "type": "file",
        "z": "40bdb65b.68cd78",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 970,
        "y": 360,
        "wires": [
            [
                "ebd232c2.a33be"
            ]
        ]
    },
    {
        "id": "d84c9c46.1dc7a",
        "type": "while-loop",
        "z": "40bdb65b.68cd78",
        "name": "",
        "condi": "msg.payload.docs.length !== 0",
        "x": 390,
        "y": 580,
        "wires": [
            [
                "ee959c81.e5ffc",
                "339480e7.8529c"
            ],
            [
                "f1641bac.3303e8"
            ]
        ]
    },
    {
        "id": "e8f6a35d.857b4",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "checks",
        "func": "let docs = msg.storage.first.docs\nlet checks = {}\n\nif (docs.length === 0) {\n    checks.checks1 = true\n}\n\nmsg.checks = checks\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 280,
        "wires": [
            [
                "274bd591.f0a6fa"
            ]
        ]
    },
    {
        "id": "2d033c8e.054164",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "map",
        "func": "msg.payload = msg.payload.docs\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 360,
        "wires": [
            [
                "3cfa01ff.79177e"
            ]
        ]
    },
    {
        "id": "f1641bac.3303e8",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "query",
        "func": "let query = msg.query\nlet bookmark = msg.payload.bookmark\n\nquery.bookmark = bookmark\nmsg.query = query\nmsg.payload = query\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 660,
        "wires": [
            [
                "48e7c55d.a2654c",
                "79b2503b.82e55"
            ]
        ]
    },
    {
        "id": "48e7c55d.a2654c",
        "type": "cloudantplus in",
        "z": "40bdb65b.68cd78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "environmentdata",
        "service": "_ext_",
        "search": "_query_",
        "design": "sortTimestamp",
        "index": "by-timestamp",
        "x": 490,
        "y": 660,
        "wires": [
            [
                "6419cb66.77d2a4",
                "96f194b3.4de078",
                "66e17955.6c6cf8"
            ]
        ]
    },
    {
        "id": "798694c3.41661c",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "map",
        "func": "let docs = msg.storage.first.docs\nlet bookmark = msg.storage.first.bookmark\n\nmsg.payload = {\n    docs,\n    bookmark\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 460,
        "wires": [
            [
                "d84c9c46.1dc7a"
            ]
        ]
    },
    {
        "id": "25cd1e63.d70972",
        "type": "switch",
        "z": "40bdb65b.68cd78",
        "name": "",
        "property": "checks",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "checks2",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 440,
        "wires": [
            [
                "183bf34b.779dbd"
            ],
            [
                "798694c3.41661c"
            ]
        ]
    },
    {
        "id": "ebd232c2.a33be",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "checks",
        "func": "let docs = msg.storage.first.docs\nlet checks = msg.checks || {}\n\nif (docs.length < msg.config.limit) {\n    checks.checks2 = true\n}\n\nmsg.checks = checks\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 440,
        "wires": [
            [
                "25cd1e63.d70972"
            ]
        ]
    },
    {
        "id": "96f194b3.4de078",
        "type": "link out",
        "z": "40bdb65b.68cd78",
        "name": "",
        "links": [
            "854b7abd.894c88"
        ],
        "x": 635,
        "y": 660,
        "wires": []
    },
    {
        "id": "854b7abd.894c88",
        "type": "link in",
        "z": "40bdb65b.68cd78",
        "name": "",
        "links": [
            "96f194b3.4de078"
        ],
        "x": 195,
        "y": 580,
        "wires": [
            [
                "d84c9c46.1dc7a"
            ]
        ]
    },
    {
        "id": "9242c813.f9d668",
        "type": "subflow:a2ccf18.37c751",
        "z": "40bdb65b.68cd78",
        "name": "",
        "x": 490,
        "y": 740,
        "wires": [
            [
                "d8368a2c.c01638",
                "cc486bbb.1bb5e8"
            ]
        ]
    },
    {
        "id": "812dc84c.b933d8",
        "type": "fastcsv",
        "z": "40bdb65b.68cd78",
        "name": "fastcsv",
        "headers": false,
        "headerstr": "",
        "ignoreEmpty": true,
        "discardUnmappedColumns": true,
        "strictColumnHandling": false,
        "delimiter": ",",
        "quote": "\"",
        "escape": "\"",
        "comment": "#",
        "ltrim": false,
        "rtrim": false,
        "rowDelimiter": "\\n",
        "includeEndRowDelimiter": false,
        "quoteHeaders": false,
        "quoteColumns": false,
        "x": 840,
        "y": 740,
        "wires": [
            [
                "311fa1e1.40face"
            ]
        ]
    },
    {
        "id": "44c5b9e1.efcbb8",
        "type": "file",
        "z": "40bdb65b.68cd78",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "false",
        "encoding": "none",
        "x": 1150,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "311fa1e1.40face",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "filename",
        "func": "msg.filename = msg.config.filePath\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 740,
        "wires": [
            [
                "44c5b9e1.efcbb8"
            ]
        ]
    },
    {
        "id": "6419cb66.77d2a4",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "map",
        "func": "msg.payload = msg.payload.docs\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 740,
        "wires": [
            [
                "9242c813.f9d668",
                "52ec91ab.0f9b2"
            ]
        ]
    },
    {
        "id": "ee959c81.e5ffc",
        "type": "link out",
        "z": "40bdb65b.68cd78",
        "name": "",
        "links": [
            "f2baea08.374238",
            "b3edb98a.e1dc38"
        ],
        "x": 595,
        "y": 560,
        "wires": []
    },
    {
        "id": "183bf34b.779dbd",
        "type": "link out",
        "z": "40bdb65b.68cd78",
        "name": "",
        "links": [
            "f2baea08.374238",
            "b3edb98a.e1dc38"
        ],
        "x": 555,
        "y": 420,
        "wires": []
    },
    {
        "id": "d508be0a.7e50c",
        "type": "link in",
        "z": "40bdb65b.68cd78",
        "name": "",
        "links": [
            "5f787589.fd3c4c",
            "4714fdcd.7af624"
        ],
        "x": 195,
        "y": 100,
        "wires": [
            [
                "28102251.4e922e"
            ]
        ]
    },
    {
        "id": "3000439e.0cb02c",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "",
        "func": "msg.payload = 'No data available for the current filters.'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 600,
        "y": 260,
        "wires": [
            [
                "6271e282.e1a40c"
            ]
        ]
    },
    {
        "id": "482a9f0d.1f3eb",
        "type": "http response",
        "z": "40bdb65b.68cd78",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 600,
        "y": 300,
        "wires": []
    },
    {
        "id": "12fcf87c.d349b8",
        "type": "inject",
        "z": "40bdb65b.68cd78",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "42e4e5a2.4f324c"
            ]
        ]
    },
    {
        "id": "42e4e5a2.4f324c",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "test",
        "func": "let selector = {\n    ts: {'$gte': 1615017142, '$lte': 1615017149},\n    ID: {'$eq': 'C06426B267AC'}\n}\nlet sort = [\n    {ts: 'desc'}\n]\n\nmsg.payload = {}\nmsg.payload.query = {}\nmsg.payload.query.selector = selector\nmsg.payload.query.sort = sort\nmsg.req = {}\nmsg.req.body = {}\nmsg.req.body.filename = 'test'\nmsg.token = {}\nmsg.token.level = 'admin'\nmsg.token.username = '12312'\nmsg.token.access_id = '1231312313'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 310,
        "y": 60,
        "wires": [
            [
                "28102251.4e922e"
            ]
        ]
    },
    {
        "id": "d8368a2c.c01638",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "",
        "func": "// fastcsv node can't append single row data\n// this is the fix\nlet docs = msg.payload\n\nif (docs.length === 1) {\n    docs.push({})\n}\n\nmsg.payload = docs\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 740,
        "wires": [
            [
                "812dc84c.b933d8"
            ]
        ]
    },
    {
        "id": "79b2503b.82e55",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "time in",
        "func": "let flowKey = 'time-in-out-next-query'\nlet flowValue = flow.get(flowKey) || {}\nlet user = msg.token.username\nlet data = msg.payload\n\nflowValue[user] = {}\nflowValue[user]['data'] = data\nflowValue[user]['time-in'] = new Date()\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "66e17955.6c6cf8",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "time out",
        "func": "let flowKey = 'time-in-out-next-query'\nlet flowValue = flow.get(flowKey) || {}\nlet user = msg.token.username\nlet timeIn = flowValue[user]['time-in']\nlet timeOut = new Date()\nlet timeTaken = timeOut.getTime() - timeIn.getTime()\n\nflowValue[user]['time-out'] = timeOut\nflowValue[user]['time-taken'] = timeTaken\nflow.set(flowKey, flowValue)\nmsg.payload = timeTaken\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 620,
        "wires": [
            [
                "ffbe23e6.5bca1"
            ]
        ]
    },
    {
        "id": "c993a74d.41da98",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "time in",
        "func": "let flowKey = 'time-in-out-start-finish'\nlet flowValue = flow.get(flowKey) || {}\nlet user = msg.token.username\nlet data = msg.payload\n\nflowValue[user] = {}\nflowValue[user]['data'] = data\nflowValue[user]['time-in'] = new Date()\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "339480e7.8529c",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "time out",
        "func": "let flowKey = 'time-in-out-start-finish'\nlet flowValue = flow.get(flowKey) || {}\nlet user = msg.token.username\nlet timeIn = flowValue[user]['time-in']\nlet timeOut = new Date()\nlet timeTaken = timeOut.getTime() - timeIn.getTime()\n\nflowValue[user]['time-out'] = timeOut\nflowValue[user]['time-taken'] = timeTaken\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "52ec91ab.0f9b2",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "time in",
        "func": "let flowKey = 'time-in-out-format-timestamp'\nlet flowValue = flow.get(flowKey) || {}\nlet user = msg.token.username\nlet data = msg.payload.length\n\nflowValue[user] = {}\nflowValue[user]['data'] = data\nflowValue[user]['time-in'] = new Date()\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "cc486bbb.1bb5e8",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "time out",
        "func": "let flowKey = 'time-in-out-format-timestamp'\nlet flowValue = flow.get(flowKey) || {}\nlet user = msg.token.username\nlet timeIn = flowValue[user]['time-in']\nlet timeOut = new Date()\nlet timeTaken = timeOut.getTime() - timeIn.getTime()\n\nflowValue[user]['time-out'] = timeOut\nflowValue[user]['time-taken'] = timeTaken\nflow.set(flowKey, flowValue)\nmsg.payload = timeTaken\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 700,
        "wires": [
            [
                "dd15886c.902cd8"
            ]
        ]
    },
    {
        "id": "ffbe23e6.5bca1",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "time in out min max",
        "func": "let flowKey = 'time-in-out-next-query-min-max'\nlet flowValue = flow.get(flowKey) || {}\nlet user = msg.token.username\n\nif (!flowValue[user]) flowValue[user] = {}\n\nlet data = flowValue[user].data || []\nlet min = Math.min(...data)\nlet max = Math.max(...data)\n\nif (data.length > 100) data.shift()\nelse data.push(msg.payload)\n\nflowValue[user].min = min\nflowValue[user].max = max\nflowValue[user].data = data\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "dd15886c.902cd8",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "time in out min max",
        "func": "let flowKey = 'time-in-out-format-timestamp-min-max'\nlet flowValue = flow.get(flowKey) || {}\nlet user = msg.token.username\n\nif (!flowValue[user]) flowValue[user] = {}\n\nlet data = flowValue[user].data || []\nlet min = Math.min(...data)\nlet max = Math.max(...data)\n\nif (data.length > 100) data.shift()\nelse data.push(msg.payload)\n\nflowValue[user].min = min\nflowValue[user].max = max\nflowValue[user].data = data\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 870,
        "y": 700,
        "wires": [
            []
        ]
    },
    {
        "id": "7eb659e3.07d828",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "generateUserSnackBarNotification",
        "func": "var notification = flow.get('notification');\n\nif(notification != null){\n    object = {\n        accessId: msg.token.access_id,\n        message: \"Done\"\n    }\n    notification.push(object);\n} else {\n    notification = [];\n     object = {\n        accessId: msg.token.access_id,\n        message: \"Done\"\n    }\n    notification.push(object);\n}\n\nflow.set('notification', notification);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1160,
        "y": 100,
        "wires": [
            [
                "8113fc3.bf1f3"
            ]
        ]
    },
    {
        "id": "8113fc3.bf1f3",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "generateUserExportList",
        "func": "let data = {}\n\n// include subdirectory and file extension\n// eg. exportcsv/20210201-20210228Chang Chun Pilot Johor_GC1-1601883-.csv\ndata.resData = msg.filename\n\ndata.accessId = msg.token.access_id\ndata.level = msg.token.level\n\n// filename only without subdirectory or file extension\n// eg. 20210201-20210228Chang Chun Pilot Johor_GC1-1601883-\ndata.fileName = msg.config.fileName\n\n// notification = show in export list in ui\ndata.doc_type = 'notification'\n\n// no idea, keep it csv\ndata.type = 'csv'\n\ndata.timestamp = new Date().toISOString()\n\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1450,
        "y": 100,
        "wires": [
            [
                "d523b6dd.e9b6c8"
            ]
        ]
    },
    {
        "id": "b3edb98a.e1dc38",
        "type": "link in",
        "z": "40bdb65b.68cd78",
        "name": "",
        "links": [
            "ee959c81.e5ffc",
            "183bf34b.779dbd"
        ],
        "x": 955,
        "y": 100,
        "wires": [
            [
                "7eb659e3.07d828"
            ]
        ]
    },
    {
        "id": "d523b6dd.e9b6c8",
        "type": "cloudantplus out",
        "z": "40bdb65b.68cd78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectusers",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1670,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "b0480e80.5ed1b",
        "type": "inject",
        "z": "46e1b0e3.38d3a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "2f442ca5.dac804"
            ]
        ]
    },
    {
        "id": "2f442ca5.dac804",
        "type": "function",
        "z": "46e1b0e3.38d3a",
        "name": "",
        "func": "let dbUrl = env.get(\"INSECT_DB\")\nlet dbName = '/environmentdata'\nlet dbOps = '/_index'\nlet url = dbUrl + dbName + dbOps\nlet method = 'POST'\nlet index = {\n    \"index\": {\n        \"fields\": [\"ts\", \"ID\"]\n    },\n    \"type\" : \"json\",\n    \"ddoc\": \"ts-ID-index\"\n}\n\nmsg.url = url\nmsg.method = method\nmsg.payload = index\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 80,
        "wires": [
            [
                "13ad2154.a0a25f"
            ]
        ]
    },
    {
        "id": "13ad2154.a0a25f",
        "type": "http request",
        "z": "46e1b0e3.38d3a",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 510,
        "y": 80,
        "wires": [
            [
                "f027dc90.b3011",
                "94e54.684871ac8"
            ]
        ]
    },
    {
        "id": "f027dc90.b3011",
        "type": "debug",
        "z": "46e1b0e3.38d3a",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 60,
        "wires": []
    },
    {
        "id": "3c1e4b7.ce2f6b4",
        "type": "http request",
        "z": "40bdb65b.68cd78",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 610,
        "y": 220,
        "wires": [
            [
                "cc9e6241.7e422"
            ]
        ]
    },
    {
        "id": "11b518c3.8b52b7",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "config",
        "func": "let dbUrl = env.get(\"INSECT_DB\")\nlet dbName = '/environmentdata'\nlet dbOps = '/_explain'\nlet url = dbUrl + dbName + dbOps\nlet method = 'POST'\nlet payload = msg.payload\n\nmsg.url = url\nmsg.method = method\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 220,
        "wires": [
            [
                "3c1e4b7.ce2f6b4"
            ]
        ]
    },
    {
        "id": "6abeabab.7b1ce4",
        "type": "catch",
        "z": "40bdb65b.68cd78",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 1000,
        "y": 200,
        "wires": [
            [
                "26972958.91b1e6"
            ]
        ]
    },
    {
        "id": "f94e6ee2.4e56b",
        "type": "status",
        "z": "40bdb65b.68cd78",
        "name": "",
        "scope": null,
        "x": 1000,
        "y": 240,
        "wires": [
            [
                "84989800.a71ad8"
            ]
        ]
    },
    {
        "id": "26972958.91b1e6",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "errors",
        "func": "let flowKey = 'errors'\nlet flowValue = flow.get(flowKey) || []\nlet timestamp = new Date()\nlet payload = msg || {}\n\npayload.reported = timestamp\n\nif (flowValue.length > 3) flowValue.shift()\nelse flowValue.push(payload)\n\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "84989800.a71ad8",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "status",
        "func": "let flowKey = 'status'\nlet flowValue = flow.get(flowKey) || []\nlet timestamp = new Date()\nlet payload = msg || {}\n\npayload.reported = timestamp\n\nif (flowValue.length > 3) flowValue.shift()\nelse flowValue.push(payload)\n\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "cc9e6241.7e422",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "logs",
        "func": "let flowKey = 'logs'\nlet flowValue = flow.get(flowKey) || []\nlet timestamp = new Date()\nlet payload = msg || {}\n\npayload.reported = timestamp\n\nif (flowValue.length > 3) flowValue.shift()\nelse flowValue.push(payload)\n\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "f3361fb1.2cb13",
        "type": "comment",
        "z": "40bdb65b.68cd78",
        "name": "User Notification",
        "info": "",
        "x": 1020,
        "y": 60,
        "wires": []
    },
    {
        "id": "fe3e9541.c325c8",
        "type": "comment",
        "z": "40bdb65b.68cd78",
        "name": "Nodes errors and status into flow context",
        "info": "",
        "x": 1100,
        "y": 160,
        "wires": []
    },
    {
        "id": "d0a0b3e6.b0ded",
        "type": "comment",
        "z": "40bdb65b.68cd78",
        "name": "Take available fields from database cache",
        "info": "",
        "x": 560,
        "y": 60,
        "wires": []
    },
    {
        "id": "edc7e90e.277b48",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "query",
        "func": "msg.prior = msg.payload\nmsg.payload = 'cache'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 100,
        "wires": [
            [
                "d1d249bd.9e9a78"
            ]
        ]
    },
    {
        "id": "d1d249bd.9e9a78",
        "type": "cloudantplus in",
        "z": "40bdb65b.68cd78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_id_",
        "design": "sortTimestamp",
        "index": "by-timestamp",
        "x": 610,
        "y": 100,
        "wires": [
            [
                "a5cd0334.0bae7"
            ]
        ]
    },
    {
        "id": "a5cd0334.0bae7",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "cache",
        "func": "msg.fields = msg.payload.cache.knownDeviceDataFields\nmsg.payload = msg.prior\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 100,
        "wires": [
            [
                "8016fb96.670458"
            ]
        ]
    },
    {
        "id": "94e54.684871ac8",
        "type": "function",
        "z": "46e1b0e3.38d3a",
        "name": "logs",
        "func": "let flowKey = 'logs'\nlet flowValue = flow.get(flowKey) || []\nlet timestamp = new Date()\nlet payload = msg || {}\n\npayload.reported = timestamp\n\nif (flowValue.length > 3) flowValue.shift()\nelse flowValue.push(payload)\n\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 670,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "2fd08f20.ec713",
        "type": "http response",
        "z": "1f50769f.97b799",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "application/json"
        },
        "x": 820,
        "y": 420,
        "wires": []
    },
    {
        "id": "f31b1d0d.ad545",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "SeperateSection",
        "func": "// markers is a sort sequence\nlet sections = {\n    noLabel:[\n        'dried-larvae',\n        'frass',\n    ],\n    Breeding: [\n        \"barchart-existing\",\n        \"prepupae-setup\",\n        \"no-of-breeding-rack-setup\",\n        \"no-of-rack-breeding-harvested\",\n        \"total-feed-used\",\n    ],\n    Farming:[\n        \"dried-larvae-weight\",\n        \"frass-weight\",\n        \"fresh-larvae-weight\",\n        \"no-of-racks-setup\",\n        \"baby-larvae-for-farming\",\n        \"no-of-farming-rack-setup\",\n        \"no-of-farming-racks-harvested\",\n        \"total-feed-used-farming\"\n    ]\n}\n\nlet payload = msg.payload\nlet array = [];\nfor (var key in sections) {\n    let object = {}\n    let sorted = [];\n    \n    if(key == \"noLabel\") {\n        object.label = \"\";\n    } else {\n        object.label = key;\n    }\n    \n    \n    let markers = sections[key];\n    for(let marker of markers) {\n        for (let p of payload) {\n            if (p.marker === marker) sorted.push(p)\n        }\n    }\n    object.cards = sorted;\n    \n    array.push(object);\n}\nmsg.payload = array;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1260,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "7865638b.b86cec",
        "type": "function",
        "z": "19c17d30.e6e6a3",
        "name": "sort",
        "func": "// markers is a sort sequence\n\nlet markers = [\n    'dried-larvae',\n    'frass',\n    'barchart-existing',\n    'prepupae-setup',\n    'no-of-breeding-rack-setup',\n    'no-of-rack-breeding-harvested',\n    'total-feed-used',\n    'dried-larvae-weight',\n    'frass-weight',\n    'fresh-larvae-weight',\n    'no-of-racks-setup',\n    'baby-larvae-for-farming',\n    'no-of-farming-rack-setup',\n    'no-of-farming-racks-harvested',\n    'total-feed-used-farming'\n]\nlet payload = msg.payload\nlet sorted = []\n\nfor (let marker of markers) {\n    for (let p of payload) {\n        if (p.marker === marker) sorted.push(p)\n    }\n}\n\nmsg.payload = sorted\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1310,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "37a62273.c470ce",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "backup",
        "info": "",
        "x": 1310,
        "y": 240,
        "wires": []
    },
    {
        "id": "d95f9df1.88c7c",
        "type": "comment",
        "z": "19c17d30.e6e6a3",
        "name": "AddSectionHere",
        "info": "",
        "x": 1260,
        "y": 160,
        "wires": []
    },
    {
        "id": "33c18556.ccdd9a",
        "type": "http in",
        "z": "95cbf348.a2a55",
        "name": "",
        "url": "/api/:tenant/farmconfig",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "add959e0.340dc8"
            ]
        ]
    },
    {
        "id": "add959e0.340dc8",
        "type": "function",
        "z": "95cbf348.a2a55",
        "name": "",
        "func": "let type = msg.payload.type\n\nmsg.payload = type\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 80,
        "wires": [
            [
                "f9943c72.13241"
            ]
        ]
    },
    {
        "id": "f9943c72.13241",
        "type": "cloudantplus in",
        "z": "95cbf348.a2a55",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 570,
        "y": 80,
        "wires": [
            [
                "1c8c1eba.9aed21"
            ]
        ]
    },
    {
        "id": "1c8c1eba.9aed21",
        "type": "switch",
        "z": "95cbf348.a2a55",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 80,
        "wires": [
            [
                "2fb743d8.a74d0c"
            ],
            [
                "ca9e3d66.0c0b2"
            ]
        ]
    },
    {
        "id": "2fb743d8.a74d0c",
        "type": "http response",
        "z": "95cbf348.a2a55",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 870,
        "y": 60,
        "wires": []
    },
    {
        "id": "ca9e3d66.0c0b2",
        "type": "http response",
        "z": "95cbf348.a2a55",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 880,
        "y": 100,
        "wires": []
    },
    {
        "id": "cddb3cc2.27f69",
        "type": "http in",
        "z": "95cbf348.a2a55",
        "name": "",
        "url": "/api/:tenant/farmconfig",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 220,
        "wires": [
            [
                "253831b1.70e96e"
            ]
        ]
    },
    {
        "id": "253831b1.70e96e",
        "type": "function",
        "z": "95cbf348.a2a55",
        "name": "",
        "func": "let required = {\n    asset: [\n        '_id', \n        '_rev', \n        'docType', \n        'facilities', \n        'processes',\n        'locations',\n        'sublocations',\n        'assets'\n    ]\n}\nlet errors = msg.errors || []\nlet invalidKeys = getInvalidKeys()\n\nif (!required[msg.payload._id]) {\n    errors.push('_id not supported')\n} else if (invalidKeys.length > 0) {\n    let keys = invalidKeys.join(', ')\n    errors.push(keys + ' required')\n}\n\nmsg.errors = errors\nreturn msg;\n\nfunction getInvalidKeys() {\n    let invalidKeys = []\n    for (const requiredKey of required.asset) {\n        let keys = Object.keys(msg.payload)\n        if (!keys.includes(requiredKey)) {\n            invalidKeys.push(requiredKey)\n        }\n    }\n    return invalidKeys\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 220,
        "wires": [
            [
                "f001b2d.908ee5"
            ]
        ]
    },
    {
        "id": "9f0aedc4.14c1e",
        "type": "switch",
        "z": "95cbf348.a2a55",
        "name": "",
        "property": "payload.ok",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 870,
        "y": 200,
        "wires": [
            [
                "37f3f1e6.ed022e"
            ],
            [
                "c5fc2fd6.f22ab"
            ]
        ]
    },
    {
        "id": "37f3f1e6.ed022e",
        "type": "http response",
        "z": "95cbf348.a2a55",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1010,
        "y": 180,
        "wires": []
    },
    {
        "id": "ba647e25.80086",
        "type": "http response",
        "z": "95cbf348.a2a55",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1160,
        "y": 220,
        "wires": []
    },
    {
        "id": "3946c72a.c95158",
        "type": "cloudantplus out",
        "z": "95cbf348.a2a55",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 710,
        "y": 200,
        "wires": [
            [
                "9f0aedc4.14c1e"
            ]
        ]
    },
    {
        "id": "f001b2d.908ee5",
        "type": "switch",
        "z": "95cbf348.a2a55",
        "name": "",
        "property": "errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 220,
        "wires": [
            [
                "3946c72a.c95158"
            ],
            [
                "f6c30f37.6f7d5"
            ]
        ]
    },
    {
        "id": "e5939a.c1c9fc68",
        "type": "http response",
        "z": "95cbf348.a2a55",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 840,
        "y": 240,
        "wires": []
    },
    {
        "id": "f6c30f37.6f7d5",
        "type": "function",
        "z": "95cbf348.a2a55",
        "name": "",
        "func": "msg.payload = {}\nmsg.payload.message = msg.errors[0]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 240,
        "wires": [
            [
                "e5939a.c1c9fc68"
            ]
        ]
    },
    {
        "id": "c5fc2fd6.f22ab",
        "type": "function",
        "z": "95cbf348.a2a55",
        "name": "",
        "func": "msg.payload = {}\nmsg.payload.message = 'Try again and use the latest date from GET'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 220,
        "wires": [
            [
                "ba647e25.80086"
            ]
        ]
    },
    {
        "id": "2ae2a885.651bb8",
        "type": "comment",
        "z": "95cbf348.a2a55",
        "name": "Updates whatever being sent to it",
        "info": "",
        "x": 210,
        "y": 180,
        "wires": []
    },
    {
        "id": "aa346499.d725b8",
        "type": "comment",
        "z": "95cbf348.a2a55",
        "name": "Returns all required document from DB",
        "info": "",
        "x": 230,
        "y": 40,
        "wires": []
    },
    {
        "id": "b127952a.bc6348",
        "type": "inject",
        "z": "6d154715.fe8408",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "12",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 150,
        "y": 200,
        "wires": [
            [
                "6867aac2.944504"
            ]
        ]
    },
    {
        "id": "6867aac2.944504",
        "type": "function",
        "z": "6d154715.fe8408",
        "name": "",
        "func": "let selector = {\n    _id: 'asset'\n}\n\nmsg.payload = {\n    selector\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 320,
        "y": 200,
        "wires": [
            [
                "a9ce0732.5cb4d8"
            ]
        ]
    },
    {
        "id": "a9ce0732.5cb4d8",
        "type": "cloudantplus in",
        "z": "6d154715.fe8408",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "sensorDevice",
        "index": "findByDeletedFalse-deviceId",
        "x": 490,
        "y": 200,
        "wires": [
            [
                "ff4199d.abb5068"
            ]
        ]
    },
    {
        "id": "ff4199d.abb5068",
        "type": "switch",
        "z": "6d154715.fe8408",
        "name": "",
        "property": "payload.docs",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 650,
        "y": 200,
        "wires": [
            [
                "1aa1f77a.1cd399"
            ]
        ]
    },
    {
        "id": "1aa1f77a.1cd399",
        "type": "function",
        "z": "6d154715.fe8408",
        "name": "",
        "func": "let knownDeviceDataFields = []\n\nmsg.payload = {\n    _id: 'asset',\n    docType: 'asset'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 200,
        "wires": [
            [
                "50bfe68c.834598"
            ]
        ]
    },
    {
        "id": "50bfe68c.834598",
        "type": "cloudantplus out",
        "z": "6d154715.fe8408",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 970,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "693e0a46.d73f44",
        "type": "comment",
        "z": "6d154715.fe8408",
        "name": "Asset",
        "info": "",
        "x": 130,
        "y": 160,
        "wires": []
    },
    {
        "id": "908396e2.4a4dd8",
        "type": "function",
        "z": "17e900ff.2d5e2f",
        "name": "query",
        "func": "let form = msg.workstationForm;\nlet line = msg.productionLine;\nlet tenant = msg.tenant;\nlet query = {\n    \"selector\": {\n        \"tenant\": tenant,\n        \"productionLine\": line,\n        \"workstationForm\": form,\n        \"docType\": \"blueprint\"\n    },\n    \"fields\": [],\n    \"sort\": [],\n    \"skip\": 0,\n    \"execution_stats\": true\n}\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 120,
        "wires": [
            [
                "103cebc.88d1a14"
            ]
        ]
    },
    {
        "id": "103cebc.88d1a14",
        "type": "cloudantplus in",
        "z": "17e900ff.2d5e2f",
        "name": "insectConfig1",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "blueprint",
        "index": "blueprint",
        "x": 220,
        "y": 160,
        "wires": [
            [
                "74468dcc.18f414"
            ]
        ]
    },
    {
        "id": "74468dcc.18f414",
        "type": "switch",
        "z": "17e900ff.2d5e2f",
        "name": "hasResult?",
        "property": "payload.execution_stats.results_returned",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 210,
        "y": 200,
        "wires": [
            [
                "c91c2bf2.8d21e8"
            ],
            [
                "4dd16c71.da5a04",
                "c49e771d.5cf8c8"
            ]
        ]
    },
    {
        "id": "4dd16c71.da5a04",
        "type": "function",
        "z": "17e900ff.2d5e2f",
        "name": "errMsg",
        "func": "msg.payload = {\n    \"message\": \"No such blueprint found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 240,
        "wires": [
            [
                "16e4de2a.3721d2"
            ]
        ]
    },
    {
        "id": "7de64089.65959",
        "type": "function",
        "z": "17e900ff.2d5e2f",
        "name": "set fieldKeys for fieldArray",
        "func": "msg.metadataKeyList = []\n\nfor (let field of msg.payload.template) {\n    if (field.fieldArray && field.fieldArray.fieldGroup) {\n        for (let nestedField of field.fieldArray.fieldGroup) {\n            if (nestedField.metadata) msg.metadataKeyList.push(nestedField.key)\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 160,
        "wires": [
            [
                "5ea99bd5.48ac24"
            ]
        ]
    },
    {
        "id": "c91c2bf2.8d21e8",
        "type": "change",
        "z": "17e900ff.2d5e2f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.docs[0]",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 580,
        "y": 120,
        "wires": [
            [
                "7de64089.65959"
            ]
        ]
    },
    {
        "id": "5ea99bd5.48ac24",
        "type": "function",
        "z": "17e900ff.2d5e2f",
        "name": "set fieldKeys for fieldGroup",
        "func": "for (let field of msg.payload.template) {\n    if (field.fieldGroup) {\n        for (let nestedField of field.fieldGroup) {\n            if (nestedField.metadata) msg.metadataKeyList.push(nestedField.key)\n        }\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 200,
        "wires": [
            [
                "5cea4797.628ea8"
            ]
        ]
    },
    {
        "id": "5cea4797.628ea8",
        "type": "function",
        "z": "17e900ff.2d5e2f",
        "name": "set fieldKeys for other than above",
        "func": "let hardCodedMetadata = [\"daily_index\", \"device_ip\",\"facility_id\",\n\"user_name\", \"user_id\", \"form_id\", \"form_version\", \"processDocument\",\n\"description\", \"device_id\", \"_id\", \"_rev\"];\nfor (let field of msg.payload.template) {\n    if (field.metadata) msg.metadataKeyList.push(field.key)\n}\nmsg.metadataKeyList.push(...hardCodedMetadata);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "16e4de2a.3721d2",
        "type": "function",
        "z": "17e900ff.2d5e2f",
        "name": "generate message error",
        "func": "var notification = flow.get('notification');\nif(notification != null){\n    object = {\n        accessId: msg.token.access_id,\n        message: \"500\"\n    }\n    notification.push(object);\n} else {\n    notification = [];\n     object = {\n        accessId: msg.token.access_id,\n        message: \"500\"\n    }\n    notification.push(object);\n}\n\nflow.set('notification', notification);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 270,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "c49e771d.5cf8c8",
        "type": "cloudantplus out",
        "z": "17e900ff.2d5e2f",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "payonly": false,
        "operation": "insert",
        "x": 520,
        "y": 340,
        "wires": [
            []
        ]
    },
    {
        "id": "c464082c.792c18",
        "type": "catch",
        "z": "17e900ff.2d5e2f",
        "name": "",
        "scope": null,
        "uncaught": false,
        "x": 320,
        "y": 460,
        "wires": [
            [
                "41e2a282.efd94c"
            ]
        ]
    },
    {
        "id": "41e2a282.efd94c",
        "type": "function",
        "z": "17e900ff.2d5e2f",
        "name": "",
        "func": "msg.payload = {}\nlet today = new Date();\n\nmsg.payload.message = msg.error.message;\nmsg.payload.source = msg.error.source;\nmsg.payload.date = today;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 440,
        "wires": [
            [
                "264afc7c.a694d4"
            ]
        ]
    },
    {
        "id": "264afc7c.a694d4",
        "type": "cloudantplus out",
        "z": "17e900ff.2d5e2f",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 660,
        "y": 440,
        "wires": [
            []
        ]
    },
    {
        "id": "fde4acf9.27849",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "prepare payload",
        "func": "var limit = msg.allDoc.doc_count;\nif(limit < 25){\n    limit = 25;\n}\nvar fields = msg.original.fields\nvar selectors =msg.original.selectors\nvar sorts = msg.sort\nvar selectorObj = {};\n  var isArray = [\"eggTrapList\"]\n  var selector = selectors.split(\", \")\n  for(var sel of selector)\n  {\n      if(sel.includes(\">=\")){\n        let s = sel.split(\">=\");\n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          var a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$gte\"] = s[1]\n          }\n          else{\n          let a1 ={};\n          a1[a[1]] = {\"$gte\": s[1]}\n          selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$gte\"] = s[1];\n          }\n          else{\n            selectorObj[s[0]] = {\"$gte\": s[1]}\n          }\n        }\n      }\n      else if(sel.includes(\">\")){\n        var s = sel.split(\">\");\n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          let a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$gt\"] = s[1]\n          }\n          else{\n            let a1 ={};\n            a1[a[1]] = {\"$gt\": s[1]}\n            selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$gt\"] = s[1];\n          }\n          else{\n            selectorObj[s[0]] = {\"$gt\": s[1]}\n          }\n        }\n        \n      }\n      else if(sel.includes(\"<=\")){\n        let s = sel.split(\"<=\");\n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          let a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$lte\"] = s[1]\n          }\n          else{\n            let a1 ={};\n            a1[a[1]] = {\"$lte\": s[1]}\n            selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$lte\"] = s[1];\n          }\n          else{\n            selectorObj[s[0]] = {\"$lte\": s[1]}\n          }\n        }\n      }\n      else if(sel.includes(\"<\")){\n        let s = sel.split(\"<\");        \n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          let a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$lt\"] = s[1]\n          }\n          else{\n            let a1 ={};\n            a1[a[1]] = {\"$lt\": s[1]}\n            selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$lt\"] = s[1];\n          }\n          else{\n            selectorObj[s[0]] = {\"$lt\": s[1]}\n          }\n        }\n      }\n      else if(sel.includes(\"=\")){\n        let s = sel.split(\"=\");        \n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          let a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$eq\"] = s[1]\n          }\n          else{\n            let a1 ={};\n            a1[a[1]] = {\"$eq\": s[1]}\n            selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$eq\"] = s[1];\n          }\n          else{\n            selectorObj[s[0]] = {\"$eq\": s[1]}\n          }\n        }\n      }\n      else if(sel.includes(\" in \")){\n        let s = sel.split(\" in \");\n        if(!isNaN(s[1])){\n          s[1] = parseFloat(s[1]);\n        }\n        if(/\\d{2}\\/\\d{2}\\/\\d{4} \\d{2}:\\d{2}/.test(s[1])){\n            let date = s[1].split(\" \");\n            let date1 = date[0].substring(3,6) + date[0].substring(0,3) + date[0].substring(6) + \" \" + date[1]; \n            let dateObject = new Date(date1);\n            if(dateObject.getTimezoneOffset() !== -480){\n                let offset = (dateObject.getTimezoneOffset() + (-8 * 60)) * 60 * 1000;\n                dateObject.setTime(dateObject.getTime() + offset);\n            }\n            s[1] = dateObject.toISOString();\n            s[1] = s[1].substring(0,19)+\"Z\"\n        }\n        if(isArray.includes(s[0].split('.')[0])){\n          let a = s[0].split('.');\n          if(selectorObj.hasOwnProperty(a[0]) && selectorObj[a[0]].hasOwnProperty(\"$elemMatch\") && selectorObj[a[0]][\"$elemMatch\"].hasOwnProperty(a[1])){\n            selectorObj[a[0]][\"$elemMatch\"][a[1]][\"$in\"] = s[1]\n          }\n          else{\n            let a1 ={};\n            a1[a[1]] = {\"$in\": s[1].split(\",\")}\n            selectorObj[a[0]] = {\"$elemMatch\": a1};\n          }\n        }\n        else{\n          if(selectorObj.hasOwnProperty(s[0])){\n            selectorObj[s[0]][\"$in\"] = s[1].split(\",\");\n          }\n          else{\n            selectorObj[s[0]] = {\"$in\": s[1].split(\",\")}\n          }\n        }\n    }\n    \n  }\n  \n  var body ={}\n  body.limit = limit;\n  body.selector = selectorObj;\n  if(fields !== null && fields !== \"\"){\n      body.fields = fields.split(\", \");\n  }\n  if(sorts !== null && sorts !== \"\"){\n      body.sort=sorts;\n  }\n  msg.payloadForGetAllDoc = body;\n  msg.endpoint = env.get(\"INSECT_DB\") + \"/\" + msg.original.database + \"/_find\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 360,
        "wires": [
            [
                "5378beb1.f56fe"
            ]
        ]
    },
    {
        "id": "54b0291e.e778b8",
        "type": "switch",
        "z": "6ae349f2.9a0838",
        "name": "",
        "property": "payload.sort",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 120,
        "wires": [
            [
                "f6bd62bf.dcaa6"
            ],
            [
                "df1fb10a.aed23"
            ]
        ]
    },
    {
        "id": "f6bd62bf.dcaa6",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "create index",
        "func": "var sortArray = msg.payload.sort.split(\", \");\nvar indices = [];\nvar sorts = [];\nfor(let sortString of sortArray){\n    let sort = sortString.split(\":\");\n    let key = sort[0];\n    sortObject = {};\n    indexObject = {};\n    indexObject.index = {\n        \"fields\":[key]\n    }\n    indexObject.name = key +\"-index\"\n    indexObject.type = \"json\"\n    indices.push(indexObject)\n    sortObject[key] = sort[1]\n    sorts.push(sortObject)\n}\n\nmsg.endpoint = env.get(\"INSECT_DB\") + \"/\" + msg.original.database + \"/_index\"\nmsg.payload = indices;\nmsg.sort = sorts;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 120,
        "wires": [
            [
                "54a3b7ee.08b728"
            ]
        ]
    },
    {
        "id": "54a3b7ee.08b728",
        "type": "split",
        "z": "6ae349f2.9a0838",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 430,
        "y": 160,
        "wires": [
            [
                "ac28fe1c.c0cba"
            ]
        ]
    },
    {
        "id": "ac28fe1c.c0cba",
        "type": "http request",
        "z": "6ae349f2.9a0838",
        "name": "httpRequest1",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "{{{endpoint}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 200,
        "wires": [
            [
                "51a8669e.2272f8"
            ]
        ]
    },
    {
        "id": "b33a9a97.b02378",
        "type": "change",
        "z": "6ae349f2.9a0838",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 80,
        "wires": [
            [
                "2ee7d187.a8723e"
            ]
        ]
    },
    {
        "id": "51a8669e.2272f8",
        "type": "join",
        "z": "6ae349f2.9a0838",
        "name": "",
        "mode": "auto",
        "build": "string",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 430,
        "y": 240,
        "wires": [
            [
                "df1fb10a.aed23"
            ]
        ]
    },
    {
        "id": "9a07b6f1.906f88",
        "type": "http request",
        "z": "6ae349f2.9a0838",
        "name": "httpRequest3",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "body",
        "url": "{{{endpoint}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1170,
        "y": 500,
        "wires": [
            [
                "6124f414.ae0aec"
            ]
        ]
    },
    {
        "id": "c05ed218.22704",
        "type": "http request",
        "z": "6ae349f2.9a0838",
        "name": "httpRequest2",
        "method": "GET",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{endpoint}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 410,
        "y": 320,
        "wires": [
            [
                "b43ce757.46dac8"
            ]
        ]
    },
    {
        "id": "df1fb10a.aed23",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "",
        "func": "msg.endpoint =msg.endpoint = env.get(\"INSECT_DB\") + \"/\" + msg.original.database; + \"/_all_doc\"\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 420,
        "y": 280,
        "wires": [
            [
                "c05ed218.22704"
            ]
        ]
    },
    {
        "id": "b43ce757.46dac8",
        "type": "json",
        "z": "6ae349f2.9a0838",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 590,
        "y": 320,
        "wires": [
            [
                "7c54a15e.6952b"
            ]
        ]
    },
    {
        "id": "6124f414.ae0aec",
        "type": "json",
        "z": "6ae349f2.9a0838",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 1330,
        "y": 500,
        "wires": [
            [
                "e6033402.253688"
            ]
        ]
    },
    {
        "id": "bb34cedc.9e394",
        "type": "switch",
        "z": "6ae349f2.9a0838",
        "name": "statusCode 200?",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1190,
        "y": 680,
        "wires": [
            [],
            [
                "29088a7a.74e0e6",
                "50589d89.b93c24"
            ]
        ]
    },
    {
        "id": "6992d567.9b723c",
        "type": "subflow:17e900ff.2d5e2f",
        "z": "6ae349f2.9a0838",
        "name": "",
        "env": [],
        "x": 980,
        "y": 320,
        "wires": [
            [
                "fde4acf9.27849"
            ]
        ]
    },
    {
        "id": "7c54a15e.6952b",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "",
        "func": "msg.allDoc = msg.payload;\nlet selector = msg.original.selectors;\nlet keys = selector.split(\", \");\nfor(let key of keys){\n    if(key.includes(\"productionLine\")){\n        let value = key.split(\"=\")[1]\n        msg.productionLine= value;\n    }\n    else if(key.includes(\"workstationForm\")){\n        let value = key.split(\"=\")[1]\n        msg.workstationForm= value;\n    }\n    else if(key.includes(\"tenant\")){\n        let value = key.split(\"=\")[1]\n        msg.tenant= value;\n    }\n}\nmsg.tenant = \"001\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 740,
        "y": 320,
        "wires": [
            [
                "6992d567.9b723c"
            ]
        ]
    },
    {
        "id": "29088a7a.74e0e6",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "Generete Error in flow",
        "func": "var notification = flow.get('notification');\nif(notification != null){\n    object = {\n        accessId: msg.token.access_id,\n        message: \"400\"\n    }\n    notification.push(object);\n} else {\n    notification = [];\n     object = {\n        accessId: msg.token.access_id,\n        message: \"400\"\n    }\n    notification.push(object);\n}\nflow.set('notification', notification);\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "bdd497d1.535808",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "findKeys",
        "func": "// This is for environmentdata database only\n\nlet docs = msg.payload.docs // [{}]\nlet allKeys = []\n\n// [{temp: 30, distance: 20},\n// {temp: 20}]\n\n// [{temp: 30, distance: 20},\n// {temp: 20, distance: null}]\n\n// null\n// \"\"\n// \"n/a\"\n\nfor (let doc of docs) {\n    \n    for (let keyInDoc in doc) {\n        let foundKey = false;\n        \n        if(allKeys.length == 0) {\n            allKeys.push(keyInDoc)\n        }\n        \n        for(var x = 0; x < allKeys.length; x++) {\n            let key = allKeys[x];\n            if(key === keyInDoc) {\n                foundKey = true\n                break;\n            }\n        }\n        \n        if(foundKey == false) {\n            allKeys.push(keyInDoc);\n        }\n    }\n}\n\nfor (let doc of docs) {\n    for (var i = 0; i < allKeys.length; i++) {\n        let key = allKeys[i];\n        let foundKey = false;\n        let dynamicKey = \"\";\n        \n         for(let keyInDoc in doc) {\n            \n            if(key === keyInDoc) {\n                foundKey = true\n                break;\n            }\n        }\n        \n        if(foundKey == false) {\n            dynamicKey = allKeys[i]\n            doc[dynamicKey] = null;\n        }\n    }\n}\n\nmsg.payload.docs = docs;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1040,
        "y": 240,
        "wires": [
            []
        ]
    },
    {
        "id": "50589d89.b93c24",
        "type": "cloudantplus out",
        "z": "6ae349f2.9a0838",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "payonly": false,
        "operation": "insert",
        "x": 1460,
        "y": 740,
        "wires": [
            []
        ]
    },
    {
        "id": "2ee7d187.a8723e",
        "type": "switch",
        "z": "6ae349f2.9a0838",
        "name": "",
        "property": "payload.database",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "environmentdata",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 80,
        "wires": [
            [
                "6f1b8f1.96a597"
            ],
            [
                "54b0291e.e778b8"
            ]
        ]
    },
    {
        "id": "6f1b8f1.96a597",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "",
        "func": "msg.payload = {}\n\nlet selectors = msg.original.selectors;\nlet locationtest\nlet split\nlet location\nlet startTime\nlet startTimetest\nlet endTime\nlet endTimetest\n\nlet keys= []; \n\n\n\nif(selectors.includes(\"location=\")) {\n    split = selectors.split(',');\n    location = split[0].replace(/\\s+/g, '');\n    locationtest  = location.replace(\"location=\", '');\n\n    \n    startTime = split[1].replace(/\\s+/g, '');\n    startTimetest = parseInt(startTime.replace(\"ts>=\", ''));\n\n    endTime = split[2].replace(/\\s+/g, '');\n    endTimetest = parseInt(endTime.replace(\"ts<=\", ''));\n    \n    let body = {};\n    body.startkey = [startTimetest];\n    body.endkey = [endTimetest];\n    keys = body;\n    // keys.push(body);\n    \n    node.warn(keys);\n\n} else {\n    split = selectors.split(',');\n    location = split[0].replace(/\\s+/g, '');\n    locationtest  = location.replace(\"locationin\", '');\n    \n    startTime = split[split.length-2].replace(/\\s+/g, '');\n    startTimetest = parseInt(startTime.replace(\"ts>=\", ''));\n\n    endTime = split[split.length-1].replace(/\\s+/g, '');\n    endTimetest = parseInt(endTime.replace(\"ts<=\", ''));\n    \n    let body = {};\n    body.startkey = [startTimetest];\n    body.endkey = [endTimetest];\n    keys = body;\n    // keys.push(body);\n    \n    // for(var x = 1; x < split.length - 2; x++ ) {\n    //     locationtest = locationtest.concat(\",\"+split[x]);\n    //     body.startkey = [locationtest,startTimetest];\n    //     body.endkey = [locationtest,endTimetest];\n    //     keys.push(body);\n    // }\n}\nlet query = {}\nquery = keys;\n// msg.endpoint = env.get(\"INSECT_DB\") + \"/\" + msg.original.database + \"/_design/locationWithTime/_view/locationWithTime\";\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 80,
        "wires": [
            [
                "d3aa73f7.a472a"
            ]
        ]
    },
    {
        "id": "d3aa73f7.a472a",
        "type": "cloudantplus in",
        "z": "6ae349f2.9a0838",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "environmentdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "locationWithTime",
        "index": "locationWithTime",
        "x": 950,
        "y": 140,
        "wires": [
            [
                "6ec14d77.c71884"
            ]
        ]
    },
    {
        "id": "6ec14d77.c71884",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "onlyValueInPayload",
        "func": "for(var x = 0; x < msg.payload.length; x++) {\n    msg.payload[x] = msg.payload[x].value;\n}\n\nlet docs = msg.payload;\n\nmsg.payload = {};\n\nmsg.payload.docs = docs;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 140,
        "wires": [
            [
                "85a3e072.0b5cd"
            ]
        ]
    },
    {
        "id": "85a3e072.0b5cd",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "",
        "func": "let selectors = msg.original.selectors;\nvar split;\nvar location;\nvar locationtest;\n\nif(selectors.includes(\"location=\")) {\n    split = selectors.split(',');\n    location = split[0].replace(/\\s+/g, '');\n    locationtest  = location.replace(\"location=\", '');\n    \n    msg.payload.docs = msg.payload.docs.filter(function(doc) {\n        return doc.location == locationtest;\n    });\n} else {\n    split = selectors.split(',');\n    location = split[0].replace(/\\s+/g, '');\n    locationtest  = location.replace(\"locationin\", '');\n    \n    for(var x = 1; x < split.length - 2; x++ ) {\n        locationtest = locationtest.concat(\",\"+split[x]);\n    }\n    array = locationtest.split(',');\n    msg.payload.docs = msg.payload.docs.filter(function(doc) {\n        for(var y = 0; y < array.length; y++){\n            if(doc.location == array[y]) {\n                return true\n            }\n            \n        }\n    });\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 940,
        "y": 180,
        "wires": [
            [
                "bdd497d1.535808"
            ]
        ]
    },
    {
        "id": "283ded87.962c32",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "change Selector to Timestamp",
        "func": "msg.payload = msg.payloadForGetAllDoc\n\nmsg.payload.selector['timestamp'] = msg.payload.selector['submission_timestamp']\ndelete msg.payload.selector['submission_timestamp'];\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 580,
        "wires": [
            [
                "c274bfb1.8853e"
            ]
        ]
    },
    {
        "id": "aa31f4f.6fe5d08",
        "type": "delay",
        "z": "6ae349f2.9a0838",
        "name": "",
        "pauseType": "delay",
        "timeout": "1",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 460,
        "y": 440,
        "wires": [
            [
                "17fd048.c0e7afc"
            ]
        ]
    },
    {
        "id": "17fd048.c0e7afc",
        "type": "cloudantplus in",
        "z": "6ae349f2.9a0838",
        "name": "insectConfigBlue",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "blueprint",
        "index": "blueprint",
        "x": 470,
        "y": 480,
        "wires": [
            [
                "bd08efde.62478"
            ]
        ]
    },
    {
        "id": "5378beb1.f56fe",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "preparePayloadForBlueprint",
        "func": "let query = {}\nquery[\"key\"] = [msg.tenant, msg.productionLine, msg.workstationForm];\n\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 400,
        "wires": [
            [
                "aa31f4f.6fe5d08"
            ]
        ]
    },
    {
        "id": "bd08efde.62478",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "checkBlueprintHasTimestamp",
        "func": "//fields\nlet templates = msg.payload[0].value.template;\nmsg.hasTimestamp = false;\n//level 1 search for timestamp key\n// node.warn(templates);\nfor(var x = 0; x < templates.length; x++ ) {\n    let template = templates[x];\n    \n    if(template['key'] && template['key'] == \"timestamp\") {\n        msg.hasTimestamp = true;\n    }\n}\n\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 510,
        "y": 520,
        "wires": [
            [
                "1bd439ec.2c6ae6"
            ]
        ]
    },
    {
        "id": "1bd439ec.2c6ae6",
        "type": "switch",
        "z": "6ae349f2.9a0838",
        "name": "",
        "property": "hasTimestamp",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 450,
        "y": 580,
        "wires": [
            [
                "283ded87.962c32"
            ],
            [
                "fcd2e2b4.1ffcf"
            ]
        ]
    },
    {
        "id": "fcd2e2b4.1ffcf",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "submissionTimeStamp",
        "func": "msg.payload = msg.payloadForGetAllDoc;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 720,
        "y": 620,
        "wires": [
            [
                "c274bfb1.8853e"
            ]
        ]
    },
    {
        "id": "e6033402.253688",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "DataReplaceLineIntoComma",
        "func": "let docs = msg.payload.docs;\n\nfor(var x = 0; x < docs.length; x++ ) {\n    let doc = docs[x];\n    \n    for(var key in doc) {\n        if(typeof doc[key] == \"string\" && doc[key].includes(\"\\n\")) {\n            const searchRegExp = /\\n/g;\n            doc[key] = doc[key].replace(searchRegExp, \",\");\n        }\n    }\n}\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1200,
        "y": 560,
        "wires": [
            [
                "5aecd8fd.db95a8"
            ]
        ]
    },
    {
        "id": "c274bfb1.8853e",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "DeletedExistSelector",
        "func": "let deleted = {}\ndeleted['$exists'] = false\n\nmsg.payload.selector.deleted = deleted\n\n// use version 2 data model if exist\nif (msg.original.v2) {\n    msg.payload.selector = msg.original.v2.selector\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 500,
        "wires": [
            [
                "9a07b6f1.906f88"
            ]
        ]
    },
    {
        "id": "5aecd8fd.db95a8",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "findKeys",
        "func": "// This is for environmentdata database only\n\nlet docs = msg.payload.docs // [{}]\nlet allKeys = []\n\n// [{temp: 30, distance: 20},\n// {temp: 20}]\n\n// [{temp: 30, distance: 20},\n// {temp: 20, distance: null}]\n\n// null\n// \"\"\n// \"n/a\"\n\nfor (let doc of docs) {\n    \n    for (let keyInDoc in doc) {\n        let foundKey = false;\n        \n        if(allKeys.length == 0) {\n            allKeys.push(keyInDoc)\n        }\n        \n        for(var x = 0; x < allKeys.length; x++) {\n            let key = allKeys[x];\n            if(key === keyInDoc) {\n                foundKey = true\n                break;\n            }\n        }\n        \n        if(foundKey == false) {\n            allKeys.push(keyInDoc);\n        }\n    }\n}\n\nfor (let doc of docs) {\n    for (var i = 0; i < allKeys.length; i++) {\n        let key = allKeys[i];\n        let foundKey = false;\n        let dynamicKey = \"\";\n        \n         for(let keyInDoc in doc) {\n            \n            if(key === keyInDoc) {\n                foundKey = true\n                break;\n            }\n        }\n        \n        if(foundKey == false) {\n            dynamicKey = allKeys[i]\n            doc[dynamicKey] = null;\n        }\n    }\n}\n\nmsg.payload.docs = docs;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1180,
        "y": 620,
        "wires": [
            [
                "bb34cedc.9e394"
            ]
        ]
    },
    {
        "id": "cff790af.0f7fe",
        "type": "catch",
        "z": "6ae349f2.9a0838",
        "name": "",
        "scope": [
            "ac28fe1c.c0cba",
            "9a07b6f1.906f88",
            "c05ed218.22704",
            "17fd048.c0e7afc"
        ],
        "uncaught": false,
        "x": 430,
        "y": 780,
        "wires": [
            [
                "25053161.1761de",
                "e99ba559.c9ab78"
            ]
        ]
    },
    {
        "id": "25053161.1761de",
        "type": "function",
        "z": "6ae349f2.9a0838",
        "name": "",
        "func": "msg.payload = {}\nlet today = new Date();\n\nmsg.payload.message = msg.error.message;\nmsg.payload.source = msg.error.source;\nmsg.payload.date = today;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 760,
        "wires": [
            [
                "60471516.0b3c3c"
            ]
        ]
    },
    {
        "id": "60471516.0b3c3c",
        "type": "cloudantplus out",
        "z": "6ae349f2.9a0838",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 780,
        "y": 760,
        "wires": [
            []
        ]
    },
    {
        "id": "e99ba559.c9ab78",
        "type": "debug",
        "z": "6ae349f2.9a0838",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 840,
        "wires": []
    },
    {
        "id": "9783043d.285e38",
        "type": "function",
        "z": "b0983137.19fa2",
        "name": "",
        "func": "today = new Date();\ntoday.setHours(0,0,0,0);\n\nvar firstDayofMonth = new Date(today.getFullYear(), today.getMonth(), 1);\n\nconst tomorrow = new Date(today)\ntomorrow.setDate(tomorrow.getDate() + 1);\ntomorrow.setSeconds(tomorrow.getSeconds() - 1);\n\nlet selector = \", submission_timestamp>=\"+firstDayofMonth.toISOString()+\",submission_timestamp<=\"+tomorrow.toISOString();\n\n\ntodayName = new Date().toLocaleDateString(\"en-US\");\nmsg.payload.filename = \"daily_export_\"+todayName;\nmsg.payload.selectors = selector;\nmsg.payload.exportAll = true;\nmsg.payload.type = \"GSheet\";\nmsg.payload.database = \"insectdata\";\nmsg.payload.fields = \"\";\nmsg.payload.sort = \"submission_timestamp:desc\";\nmsg.payload.includeMetadata = false;\n\n// store version 2 data model\nmsg.payload.v2 = {\n    selector: {\n        submission_timestamp: {\n            $gte: firstDayofMonth,\n            $lte: tomorrow\n        }\n    }\n}\n          \nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "172c3ed3.5214f1",
        "type": "function",
        "z": "b0983137.19fa2",
        "name": "prepare query",
        "func": "\n\nmsg.payload = {\n    key: \"001\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "ba9f4274.a5d25"
            ]
        ]
    },
    {
        "id": "ba9f4274.a5d25",
        "type": "cloudantplus in",
        "z": "b0983137.19fa2",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "blueprint",
        "index": "byTenantAndTemplateTypeEmpty",
        "x": 410,
        "y": 80,
        "wires": [
            [
                "ae148e07.a1341"
            ]
        ]
    },
    {
        "id": "ae148e07.a1341",
        "type": "function",
        "z": "b0983137.19fa2",
        "name": "structure return data",
        "func": "let data = []\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    let doc = msg.payload[i].value;\n    \n    let updateCount = 1;\n    if(doc.updateCount){\n        updateCount = doc.updateCount;\n    }\n    let formVersionDate = new Date(doc.updatedOn);\n    formVersion = formVersionDate.getFullYear().toString().substring(2,4)+\n    (\"0\"+(formVersionDate.getMonth() +1).toString()).slice(-2)+\n    (\"0\"+formVersionDate.getDate().toString()).slice(-2)+ \"-\"+ (\"0\"+updateCount.toString()).slice(-2);\n    \n    data.push({\n        line: doc.productionLine,\n        form: doc.workstationForm,\n        form_version: formVersion\n    });\n}\ndata.sort((a, b) => {\n            let nameA = a.form, nameB = b.form\n            if (nameA < nameB) return -1\n            if (nameA > nameB) return 1\n            return 0});\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 640,
        "y": 80,
        "wires": [
            [
                "1c230c12.357104"
            ]
        ]
    },
    {
        "id": "1c230c12.357104",
        "type": "function",
        "z": "b0983137.19fa2",
        "name": "",
        "func": "let datas = msg.payload;\n\nfor(var x = 1; x <= datas.length; x++) {\n    datas[x - 1].id = x;\n}\nmsg.payload = {}\nmsg.payload.availableForms = datas;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 140,
        "wires": [
            [
                "9783043d.285e38"
            ]
        ]
    },
    {
        "id": "841a566c.d70068",
        "type": "cronplus",
        "z": "1f50769f.97b799",
        "name": "",
        "outputField": "payload",
        "timeZone": "Asia/Kuala_Lumpur",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "updateNewData",
                "topic": "updateNewData",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 0 19 * * ? *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 100,
        "y": 2100,
        "wires": [
            [
                "548a7557.d3a45c"
            ]
        ]
    },
    {
        "id": "548a7557.d3a45c",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 380,
        "y": 2100,
        "wires": [
            [
                "c2d9fdda.eccf3"
            ]
        ]
    },
    {
        "id": "c2d9fdda.eccf3",
        "type": "subflow:b0983137.19fa2",
        "z": "1f50769f.97b799",
        "name": "",
        "env": [],
        "x": 600,
        "y": 2100,
        "wires": [
            [
                "faa781b2.e6472"
            ]
        ]
    },
    {
        "id": "faa781b2.e6472",
        "type": "change",
        "z": "1f50769f.97b799",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "original",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "array",
                "pt": "msg",
                "to": "payload.availableForms",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "selector",
                "pt": "msg",
                "to": "payload.selectors",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 820,
        "y": 2100,
        "wires": [
            [
                "61deca21.384de4"
            ]
        ]
    },
    {
        "id": "8b346521.b0b2b8",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "attemptedDaily",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "3",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1230,
        "y": 1960,
        "wires": [
            [
                "89b3dbcc.8a8418"
            ],
            [
                "c2d9fdda.eccf3"
            ]
        ]
    },
    {
        "id": "61deca21.384de4",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var abc = flow.get(\"dailysheetIndex\") || 0;\n\nflow.set(\"dailysheetIndex\", abc);\nmsg.key = flow.get(\"dailyExportKey\") || 0;\n\nif(msg.key != 0) {\n    msg.key = msg.key - 1;\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 2040,
        "wires": [
            [
                "541651a8.31d28"
            ]
        ]
    },
    {
        "id": "e673dca.0d6802",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let attemptedDaily = flow.get(\"attemptedDaily\") || 0;\n\nattemptedDaily = attemptedDaily + 1;\n\nflow.set(\"attemptedDaily\", attemptedDaily)\nmsg.attemptedDaily = attemptedDaily;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1100,
        "y": 1960,
        "wires": [
            [
                "8b346521.b0b2b8"
            ]
        ]
    },
    {
        "id": "89b3dbcc.8a8418",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.payload = {}\nlet today = new Date();\n\nmsg.payload.message = \"Reattempts 3 times\";\nmsg.payload.date = today;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1400,
        "y": 1920,
        "wires": [
            [
                "cdf1e699.ffc938"
            ]
        ]
    },
    {
        "id": "541651a8.31d28",
        "type": "array-loop",
        "z": "1f50769f.97b799",
        "name": "",
        "key": "key",
        "keyType": "msg",
        "reset": true,
        "resetValue": "value-null",
        "array": "array",
        "arrayType": "msg",
        "x": 1020,
        "y": 2100,
        "wires": [
            [
                "17aabe5f.f30ba2"
            ],
            [
                "17bcedec.78bdb2"
            ]
        ]
    },
    {
        "id": "d5012a11.749c48",
        "type": "delay",
        "z": "1f50769f.97b799",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "minutes",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 960,
        "y": 1960,
        "wires": [
            [
                "e673dca.0d6802"
            ]
        ]
    },
    {
        "id": "cdf1e699.ffc938",
        "type": "cloudantplus out",
        "z": "1f50769f.97b799",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "logging",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1560,
        "y": 1920,
        "wires": [
            [
                "f830c922.9efc68"
            ]
        ]
    },
    {
        "id": "f5de1fda.67e01",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "setSkipBatchUpdateFalse",
        "func": "flow.set(\"skipBatchUpdate\", false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2070,
        "y": 2620,
        "wires": [
            [
                "541651a8.31d28"
            ]
        ]
    },
    {
        "id": "17aabe5f.f30ba2",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let spreadsheetId = flow.get(\"dailyspreadsheetId\");\n\n\nmsg.payload = {\n    \"spreadsheetId\": spreadsheetId,\n    \"resource\":{\n        \"requests\":[{\"deleteSheet\": {\"sheetId\": 0}}],\n    }\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 2060,
        "wires": [
            [
                "7dae5f78.6eb4f"
            ]
        ]
    },
    {
        "id": "17bcedec.78bdb2",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let selector =`workstationForm=${msg.array[msg.key].form}, productionLine=${msg.array[msg.key].line}`;\n\nmsg.original.selectors = selector + msg.selector;\nmsg.payload = msg.original;\nmsg.sheetName = msg.array[msg.key].form + msg.array[msg.key].line;\n\n// store version 2 data model\nmsg.payload.v2.selector.workstationForm = msg.array[msg.key].form\nmsg.payload.v2.selector.productionLine = msg.array[msg.key].line\nmsg.payload.v2.selector.deleted = { $exists: false }\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 2120,
        "wires": [
            [
                "4dba1e53.8434e"
            ]
        ]
    },
    {
        "id": "7ba906f8.030188",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "setSkipBatchUpdateFalse",
        "func": "flow.set(\"skipBatchUpdate\", false);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2170,
        "y": 2680,
        "wires": [
            [
                "541651a8.31d28"
            ]
        ]
    },
    {
        "id": "946617f1.532fd8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "setSkipBatchUpdateTrue",
        "func": "flow.set(\"skipBatchUpdate\", true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 660,
        "y": 1960,
        "wires": [
            [
                "d5012a11.749c48"
            ]
        ]
    },
    {
        "id": "8eb44ac3.67a3b8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "skipCreateDaily",
        "func": "flow.set(\"skipCreateDaily\", true);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 2020,
        "wires": [
            [
                "d5012a11.749c48"
            ]
        ]
    },
    {
        "id": "e7cf21fa.5313e",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "status.text",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 510,
        "y": 1900,
        "wires": [
            [
                "d5012a11.749c48"
            ]
        ]
    },
    {
        "id": "f830c922.9efc68",
        "type": "change",
        "z": "1f50769f.97b799",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "dailysheetIndex",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "dailyspreadsheetId",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "dailyExportKey",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "skipBatchUpdate",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "skipCreateDaily",
                "pt": "flow"
            },
            {
                "t": "delete",
                "p": "attemptedDaily",
                "pt": "flow"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1780,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "197c84d2.39774b",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "valueUp_daily2",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.values.update",
        "x": 1840,
        "y": 2620,
        "wires": [
            [
                "f5de1fda.67e01"
            ]
        ]
    },
    {
        "id": "7dae5f78.6eb4f",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.batchUpdate",
        "x": 1410,
        "y": 2060,
        "wires": [
            [
                "79bda5e8.b87d0c"
            ]
        ]
    },
    {
        "id": "4dba1e53.8434e",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "setFormIntoFlowContext",
        "func": "flow.set(\"dailyExportKey\",msg.key)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1450,
        "y": 2120,
        "wires": [
            [
                "adc0884e.595798"
            ]
        ]
    },
    {
        "id": "d03413c0.7061e",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "valueUp_daily1",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.values.update",
        "x": 1940,
        "y": 2680,
        "wires": [
            [
                "7ba906f8.030188"
            ]
        ]
    },
    {
        "id": "99cae408.ef83e8",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "status.text",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 460,
        "y": 1960,
        "wires": [
            [
                "946617f1.532fd8"
            ]
        ]
    },
    {
        "id": "7147a672.01a318",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "status.text",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "error",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 2020,
        "wires": [
            [
                "8eb44ac3.67a3b8"
            ]
        ]
    },
    {
        "id": "fce35828.dff8b8",
        "type": "status",
        "z": "1f50769f.97b799",
        "name": "",
        "scope": [
            "692219bb.809e78"
        ],
        "x": 340,
        "y": 1900,
        "wires": [
            [
                "e7cf21fa.5313e"
            ]
        ]
    },
    {
        "id": "79bda5e8.b87d0c",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.payload = {spreadsheetId: flow.get(\"dailyspreadsheetId\")};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1560,
        "y": 2060,
        "wires": [
            [
                "f830c922.9efc68"
            ]
        ]
    },
    {
        "id": "f37ee4ec.4d3848",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let spreadsheetId = flow.get(\"dailyspreadsheetId\");\nlet sheetName = msg.sheetName\n\nvar csv = msg.csv; \nvar rows = csv.split(\"\\n\");\n\n\nvar csvRow = rows.map(function (row) {\n        if(row!=\"\"){\n            var result = row.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n            for(let i=0; i<result.length; i++){\n                var element = result[i];\n                if(element[0]===\"\\\"\" && element[element.length -1] === \"\\\"\"){\n                    element = element.replace(/^\"|\"$/g, '');\n                    result[i] = element;\n                }\n            }\n            return result;\n        }\n        else{\n            return;\n        }\n    });\nlet payload = {\n\n      \"values\": csvRow\n}\nmsg.payload = {\n    spreadsheetId: spreadsheetId,\n    \"range\":sheetName+\"!A1\",\n    valueInputOption:\"RAW\",\n    resource: payload\n}\nmsg.rows = rows;\n// let key = env.get(\"GAUTH\")\n// msg.creds = { value: key, type: \"gauth\" }\n// msg.creds = key\n// msg.credentials = { category: 'config', credentials: { creds: JSON.parse(key) } }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1680,
        "y": 2620,
        "wires": [
            [
                "197c84d2.39774b"
            ]
        ]
    },
    {
        "id": "adc0884e.595798",
        "type": "subflow:6ae349f2.9a0838",
        "z": "1f50769f.97b799",
        "name": "",
        "env": [],
        "x": 690,
        "y": 2180,
        "wires": [
            [
                "9248bffa.2e4e2"
            ]
        ]
    },
    {
        "id": "36c2b0d1.c3235",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let spreadsheetId = flow.get(\"dailyspreadsheetId\");\n\nlet sheetName = msg.sheetName;\nvar csv = msg.csv; \nvar rows = csv.split(\"\\n\");\n\n\nvar csvRow = rows.map(function (row) {\n        if(row!=\"\"){\n            var result = row.split(/,(?=(?:(?:[^\"]*\"){2})*[^\"]*$)/);\n            for(let i=0; i<result.length; i++){\n                var element = result[i];\n                if(element[0]===\"\\\"\" && element[element.length -1] === \"\\\"\"){\n                    element = element.replace(/^\"|\"$/g, '');\n                    result[i] = element;\n                }\n            }\n            return result;\n        }\n        else{\n            return;\n        }\n    });\nlet payload = {\n\n      \"values\": csvRow\n}\nmsg.payload = {\n    spreadsheetId: spreadsheetId,\n    \"range\":sheetName+\"!A1\",\n    valueInputOption:\"RAW\",\n    resource: payload\n}\nmsg.rows = rows;\n\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1780,
        "y": 2680,
        "wires": [
            [
                "d03413c0.7061e"
            ]
        ]
    },
    {
        "id": "d94f1884.c18c08",
        "type": "status",
        "z": "1f50769f.97b799",
        "name": "",
        "scope": [
            "197c84d2.39774b",
            "d03413c0.7061e"
        ],
        "x": 320,
        "y": 1960,
        "wires": [
            [
                "99cae408.ef83e8"
            ]
        ]
    },
    {
        "id": "664e0b14.215b54",
        "type": "status",
        "z": "1f50769f.97b799",
        "name": "",
        "scope": [
            "32403412.9b6acc",
            "dec0a0fd.b235c"
        ],
        "x": 380,
        "y": 2020,
        "wires": [
            [
                "7147a672.01a318"
            ]
        ]
    },
    {
        "id": "5ce8f7c8.768e98",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "skipBatchUpdate",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1330,
        "y": 2580,
        "wires": [
            [
                "f37ee4ec.4d3848"
            ],
            [
                "a5127322.4ab73"
            ]
        ]
    },
    {
        "id": "32403412.9b6acc",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "batchUp_daily2",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.batchUpdate",
        "x": 1510,
        "y": 2620,
        "wires": [
            [
                "f37ee4ec.4d3848"
            ]
        ]
    },
    {
        "id": "9248bffa.2e4e2",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "prepare for conversion",
        "func": "let fields = msg.original.fields\nlet docs = msg.payload.docs\n\nif (fields) {\n    msg.columns = fields;\n} else {\n    if (docs && docs.length > 0) {\n        \n        // to remove metadata fields that been marked at blueprint\n        // if (!msg.original.includeMetadata) {\n        //     docs.forEach((doc) => {\n        //         msg.metadataKeyList.forEach((key) => {\n        //             delete doc[key];\n        //         })\n        //     })\n        // }\n\n        msg.columns = Object.keys(docs[0]).join(\", \");\n    }\n}\n\n\nmsg.payload = msg.payload.docs;\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 500,
        "y": 2240,
        "wires": [
            [
                "f1df748e.73c2c8"
            ]
        ]
    },
    {
        "id": "dec0a0fd.b235c",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "batchUp_daily1",
        "google": "140efa24.f87256",
        "api": "sheets:v4",
        "operation": "spreadsheets.batchUpdate",
        "x": 1620,
        "y": 2680,
        "wires": [
            [
                "36c2b0d1.c3235"
            ]
        ]
    },
    {
        "id": "261a00d5.fe594",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "skipFirstBatchUpdate",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1430,
        "y": 2740,
        "wires": [
            [
                "36c2b0d1.c3235"
            ],
            [
                "b2868bcc.e4c5e8"
            ]
        ]
    },
    {
        "id": "13ff8dd7.36a3a2",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "spreadsheetId",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1170,
        "y": 2620,
        "wires": [
            [
                "469e480c.488f48"
            ],
            [
                "5ce8f7c8.768e98"
            ],
            [
                "8f3d28e9.5e1ac8"
            ]
        ]
    },
    {
        "id": "a5127322.4ab73",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "var spreadsheetId = flow.get(\"dailyspreadsheetId\");\nvar sheetIndex = flow.get(\"dailysheetIndex\") + 1;\nflow.set(\"dailysheetIndex\", sheetIndex);\nlet payload = {\n    \"properties\": {\n        \"sheetId\":sheetIndex,\n        \"title\": msg.sheetName,\n        \"index\": sheetIndex,\n        \"sheetType\": \"GRID\"\n    }\n}\nmsg.payload = {\n    \"spreadsheetId\": spreadsheetId,\n    \"resource\":{\n        \"requests\":[{\"addSheet\": payload}],\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1350,
        "y": 2620,
        "wires": [
            [
                "32403412.9b6acc"
            ]
        ]
    },
    {
        "id": "f1df748e.73c2c8",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 430,
        "y": 2320,
        "wires": [
            [
                "ecf3cdbc.49a15"
            ],
            [
                "58a56e77.7ed08"
            ]
        ]
    },
    {
        "id": "b2868bcc.e4c5e8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "if(msg.payload) {\n    if(msg.payload.id) {\n        flow.set(\"dailyspreadsheetId\", msg.payload.id);\n    }\n}\n\n\nvar spreadsheetId = msg.payload.id;\nvar sheetIndex = 1;\nflow.set(\"dailysheetIndex\", 1);\nlet payload = {\n    \"properties\": {\n        \"sheetId\":sheetIndex,\n        \"title\": msg.sheetName,\n        \"index\": sheetIndex,\n        \"sheetType\": \"GRID\"\n    }\n}\nmsg.payload = {\n    \"spreadsheetId\": spreadsheetId,\n    \"resource\":{\n        \"requests\":[{\"addSheet\": payload}],\n    }\n    \n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1460,
        "y": 2680,
        "wires": [
            [
                "dec0a0fd.b235c"
            ]
        ]
    },
    {
        "id": "469e480c.488f48",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "skipCreateDaily",
        "propertyType": "flow",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1260,
        "y": 2740,
        "wires": [
            [
                "261a00d5.fe594"
            ],
            [
                "692219bb.809e78"
            ]
        ]
    },
    {
        "id": "bdd5b693.dc48d8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.csv = msg.payload;\nmsg.spreadsheetId = flow.get(\"dailyspreadsheetId\") || \"\";\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 880,
        "y": 2620,
        "wires": [
            [
                "13ff8dd7.36a3a2"
            ]
        ]
    },
    {
        "id": "8f3d28e9.5e1ac8",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "let driveFolderIds = global.get('google-drive-folder-ids')\n\nlet filename = \"untitled\"\nif(msg.original.filename){\n    filename = msg.original.filename;\n}\nvar folderId = driveFolderIds.dailyExport\n\nvar fileMetadata = {\n  'name': filename,\n \"parents\":[folderId],\n  mimeType: 'application/vnd.google-apps.spreadsheet',\n};\nvar media = {\n  mimeType: 'application/vnd.google-apps.spreadsheet',\n};\nmsg.payload = {\n    resource: fileMetadata,\n  media: media,\n  fields: 'id',\n  supportsAllDrives: true\n}, function (err, file) {\n  if (err) {\n    // Handle error\n    console.error(err);\n  } else {\n    console.log('File Id: ', file.id);\n  }\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 2680,
        "wires": [
            [
                "469e480c.488f48"
            ]
        ]
    },
    {
        "id": "ecf3cdbc.49a15",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "payload[0]",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "eggTrapList",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 730,
        "y": 2300,
        "wires": [
            [
                "5c954dce.2f8824"
            ],
            [
                "b62aaf23.6c0e5"
            ]
        ]
    },
    {
        "id": "58a56e77.7ed08",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.doc = msg.payload;\nlet query = {}\nquery[\"key\"]=[msg.tenant, msg.productionLine, msg.workstationForm, \"export\"]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 2380,
        "wires": [
            [
                "54b2f77c.c60ec8"
            ]
        ]
    },
    {
        "id": "692219bb.809e78",
        "type": "google",
        "z": "1f50769f.97b799",
        "name": "create_daily",
        "google": "140efa24.f87256",
        "api": "drive:v3",
        "operation": "files.create",
        "x": 1290,
        "y": 2680,
        "wires": [
            [
                "b2868bcc.e4c5e8"
            ]
        ]
    },
    {
        "id": "c17df3e2.33bbf",
        "type": "fastcsv",
        "z": "1f50769f.97b799",
        "name": "fastcsv",
        "headers": true,
        "headerstr": "",
        "ignoreEmpty": true,
        "discardUnmappedColumns": true,
        "strictColumnHandling": false,
        "delimiter": ",",
        "quote": "\"",
        "escape": "\"",
        "comment": "#",
        "ltrim": false,
        "rtrim": false,
        "rowDelimiter": "\\n",
        "includeEndRowDelimiter": false,
        "quoteHeaders": false,
        "quoteColumns": false,
        "x": 920,
        "y": 2480,
        "wires": [
            [
                "bdd5b693.dc48d8"
            ]
        ]
    },
    {
        "id": "7b2eeda7.6778d4",
        "type": "template",
        "z": "1f50769f.97b799",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "",
        "output": "str",
        "x": 1080,
        "y": 2400,
        "wires": [
            [
                "bdd5b693.dc48d8"
            ]
        ]
    },
    {
        "id": "5c954dce.2f8824",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "flatten eggTrapList",
        "func": "result =[]\nfor(let payload of msg.payload){\n    let content = payload;\n    let index = 1;\n    if(payload.eggTrapList) {\n        for(let eggTrap of payload.eggTrapList){\n        let data = {\n            ...payload,\n            eggTrapListIndex: index,\n            ... eggTrap\n            \n        }\n        delete data.eggTrapList\n        result.push(data)\n        index = index+1\n        }\n    }\n    \n}\nmsg.payload = result;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 2240,
        "wires": [
            [
                "b62aaf23.6c0e5"
            ]
        ]
    },
    {
        "id": "b62aaf23.6c0e5",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "convertingTimeandbatch",
        "func": "const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\n        \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n        \nfor(var x = 0; x < msg.payload.length; x++) {\n    let data = msg.payload[x];\n    var date;\n    var word;\n    var month;\n    var day;\n    var year;\n    var dateObj;\n    \n    var hour;\n    var minute;\n    var seconds;\n    \n    if('ts' in data) {\n        data.ts = data.ts*1000;\n        // date = new Date(data.ts)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        dateObj = new Date(data.ts)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        second = dateObj.getSeconds();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        if(second < 10) {\n            second = \"0\"+second;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute + \":\" + second;\n       \n        data.ts = word;\n       \n    }\n    \n    if('timestamp' in data) {\n        // date = new Date(data.timestamp)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n       \n        dateObj = new Date(data.timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n       \n    \n        data.timestamp = word\n    }\n    \n    if('submission_timestamp' in data) {\n        dateObj = new Date(data.submission_timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        data.submission_timestamp = word\n    }\n    \n    if('in_submitted_date' in data) {\n        // date = new Date(data.in_submitted_date)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.in_submitted_date)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n        data.in_submitted_date = word\n    }\n    \n    if('in_timestamp' in data) {\n        // date = new Date(data.in_timestamp)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.in_timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.in_timestamp = word\n    }\n    \n    if('out_submitted_date' in data) {\n        // date = new Date(data.out_submitted_date)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.out_submitted_date)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.out_submitted_date = word\n    }\n    \n    if('out_timestamp' in data) {\n        // date = new Date(data.out_timestamp)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.out_timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.out_timestamp = word\n    }\n    \n    if('start_timestamp' in data) {\n        // date = new Date(data.start_timestamp)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.start_timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.start_timestamp = word\n    }\n    \n    if('start_submitted_date' in data) {\n        // date = new Date(data.start_submitted_date)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.start_submitted_date)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.start_submitted_date = word\n    }\n    \n     if('end_timestamp' in data) {\n        // date = new Date(data.end_timestamp)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.end_timestamp)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.end_timestamp = word\n    }\n    \n    if('end_submitted_date' in data) {\n        // date = new Date(data.end_submitted_date)\n        // word = date.toLocaleString(\"en-US\", { timeZone: 'Asia/Kuala_Lumpur' });\n        \n        dateObj = new Date(data.end_submitted_date)\n        \n        month = monthNames[dateObj.getMonth()];\n        day = String(dateObj.getDate()).padStart(2, '0');\n        year = dateObj.getFullYear();\n        \n        hour = dateObj.getHours();\n        minute = dateObj.getMinutes();\n        \n        if (hour < 10) {\n            hour = \"0\"+hour;\n        }\n        if(minute < 10) {\n            minute = \"0\"+minute;\n        }\n        \n        word =  day + '-'+  month + '-' + year + \" \" + hour + \":\" + minute;\n    \n    \n        data.end_submitted_date = word\n    }\n    \n    if('batchId' in data) {\n        \n        if(Array.isArray(data.batchId)){\n            var batchIdList = \"\"\n            for(let i=0; i<data.batchId.length;i++){\n                if(i ===0){\n                    batchIdList = batchIdList +data.batchId[i]\n                }\n                else{\n                    batchIdList = batchIdList +\"\\, \"+data.batchId[i]\n                }\n            }\n            batchIdList = batchIdList +\"\"\n            data.batchId = batchIdList\n        }\n    }\n    \n    msg.payload[x] = data;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 2280,
        "wires": [
            [
                "58a56e77.7ed08"
            ]
        ]
    },
    {
        "id": "54b2f77c.c60ec8",
        "type": "cloudantplus in",
        "z": "1f50769f.97b799",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "mustache",
        "index": "mustache",
        "x": 550,
        "y": 2420,
        "wires": [
            [
                "f850caf2.de1ed8"
            ]
        ]
    },
    {
        "id": "e763ca0c.106248",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "msg.payload = msg.doc\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 780,
        "y": 2480,
        "wires": [
            [
                "c17df3e2.33bbf"
            ]
        ]
    },
    {
        "id": "665877ab.abcd98",
        "type": "function",
        "z": "1f50769f.97b799",
        "name": "",
        "func": "\nmsg.template = msg.payload[0].value.template;\nmsg.includedField = msg.doc;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 900,
        "y": 2400,
        "wires": [
            [
                "7b2eeda7.6778d4"
            ]
        ]
    },
    {
        "id": "f850caf2.de1ed8",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 2460,
        "wires": [
            [
                "183f170d.578bb9"
            ],
            [
                "e763ca0c.106248"
            ]
        ]
    },
    {
        "id": "183f170d.578bb9",
        "type": "switch",
        "z": "1f50769f.97b799",
        "name": "",
        "property": "original.includeMetadata",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 2440,
        "wires": [
            [
                "665877ab.abcd98"
            ],
            [
                "e763ca0c.106248"
            ]
        ]
    },
    {
        "id": "c7c72e4f.893fd",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "batchupdate",
        "info": "",
        "x": 380,
        "y": 2000,
        "wires": []
    },
    {
        "id": "d70cf612.123438",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "valueUpdate",
        "info": "",
        "x": 330,
        "y": 1940,
        "wires": []
    },
    {
        "id": "2b6d2e78.228fc2",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "createDaily",
        "info": "",
        "x": 340,
        "y": 1860,
        "wires": []
    },
    {
        "id": "d3b1ca5f.cd2638",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "daily export all form",
        "info": "",
        "x": 130,
        "y": 2060,
        "wires": []
    },
    {
        "id": "10c4afd1.1faa9",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "checkReattemptCount",
        "info": "",
        "x": 1100,
        "y": 1920,
        "wires": []
    },
    {
        "id": "d22fc622.e35458",
        "type": "comment",
        "z": "1f50769f.97b799",
        "name": "folderId",
        "info": "",
        "x": 1130,
        "y": 2720,
        "wires": []
    },
    {
        "id": "369eedb2.9bee72",
        "type": "cloudantplus in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByProvisioned",
        "x": 530,
        "y": 100,
        "wires": [
            [
                "d59d91c4.32f3f"
            ]
        ]
    },
    {
        "id": "6de26d4f.78ed64",
        "type": "switch",
        "z": "1ee45479.6b35fc",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "export-provisioned-devices",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 370,
        "y": 100,
        "wires": [
            [
                "369eedb2.9bee72"
            ]
        ]
    },
    {
        "id": "d59d91c4.32f3f",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "",
        "func": "let docs = msg.payload\nlet options = []\nfor (let doc of docs) {\n    let value = doc.key\n    let label;\n    if(doc.value.deviceAlias) {\n        label = doc.value.deviceName + \" (\" + doc.value.deviceAlias + \")\"\n    } else {\n        label = doc.value.deviceName\n    }\n     \n    options.push({value, label})\n}\n\noptions.sort(function(a, b){\n    var nameA=a.label.toLowerCase(), nameB=b.label.toLowerCase()\n    if (nameA < nameB) //sort string ascending\n        return -1 \n    if (nameA > nameB)\n        return 1\n    return 0 //default return value (no sorting)\n})\nmsg.payload = options\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 100,
        "wires": [
            [
                "9ba11d5b.b321e"
            ]
        ]
    },
    {
        "id": "71015198.92222",
        "type": "http in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "url": "/api/:tenant/options",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 100,
        "wires": [
            [
                "6de26d4f.78ed64",
                "ac1a144a.6f24e8"
            ]
        ]
    },
    {
        "id": "9ba11d5b.b321e",
        "type": "http response",
        "z": "1ee45479.6b35fc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 850,
        "y": 100,
        "wires": []
    },
    {
        "id": "32409ceb.ade3d4",
        "type": "comment",
        "z": "1ee45479.6b35fc",
        "name": "Get various options for selection/listing",
        "info": "",
        "x": 230,
        "y": 60,
        "wires": []
    },
    {
        "id": "ac1a144a.6f24e8",
        "type": "link out",
        "z": "1ee45479.6b35fc",
        "name": "",
        "links": [
            "3641fd1f.32aae2"
        ],
        "x": 335,
        "y": 140,
        "wires": []
    },
    {
        "id": "3641fd1f.32aae2",
        "type": "link in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "links": [
            "ac1a144a.6f24e8"
        ],
        "x": 335,
        "y": 240,
        "wires": [
            [
                "a46f2275.6c872"
            ]
        ]
    },
    {
        "id": "a46f2275.6c872",
        "type": "switch",
        "z": "1ee45479.6b35fc",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "form-type",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 450,
        "y": 240,
        "wires": [
            [
                "c753f96c.5af5f8"
            ]
        ]
    },
    {
        "id": "c7cbdd6b.95e77",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "",
        "func": "let docs = msg.payload.docs\nlet options = []\n\nfor (let doc of docs) {\n    let value = doc.productionLine\n    let label = doc.productionLine\n    let exist = false\n    \n    for (const o of options) {\n        if (o.value === value) exist = true\n    }\n     \n    if (!exist) {\n        options.push({value, label})\n    }\n}\n\nmsg.payload = options\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 920,
        "y": 240,
        "wires": [
            [
                "a276fb67.cbebd8"
            ]
        ]
    },
    {
        "id": "a276fb67.cbebd8",
        "type": "http response",
        "z": "1ee45479.6b35fc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1070,
        "y": 240,
        "wires": []
    },
    {
        "id": "886f5ddc.1c22e",
        "type": "comment",
        "z": "1ee45479.6b35fc",
        "name": "type = form-type",
        "info": "",
        "x": 400,
        "y": 200,
        "wires": []
    },
    {
        "id": "86e79421.f26f18",
        "type": "cloudantplus in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "blueprint",
        "index": "byTenantAndTemplateTypeEmpty",
        "x": 750,
        "y": 240,
        "wires": [
            [
                "c7cbdd6b.95e77"
            ]
        ]
    },
    {
        "id": "c753f96c.5af5f8",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "query",
        "func": "let selector = {\n    docType: {$eq: 'blueprint'},\n    templateType: {$exists: false}\n}\n\nmsg.payload = {selector}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 590,
        "y": 240,
        "wires": [
            [
                "86e79421.f26f18"
            ]
        ]
    },
    {
        "id": "b0e575fb.f7d498",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1180,
        "y": 3680,
        "wires": []
    },
    {
        "id": "80640372.c6174",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "Dashboard SOP",
        "info": "",
        "x": 300,
        "y": 3560,
        "wires": []
    },
    {
        "id": "e5ff47e.aed52b8",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "group",
        "func": "let sopTypes = flow.get('sopTypes')\nlet forms = msg.masterData\nlet payload = []\n\n// node.warn('sopTypes')\n// node.warn(sopTypes)\n// node.warn('forms')\n// node.warn(forms)\n\nfor (let sopType of sopTypes) {\n    let grouped1 = group1(sopType, forms)\n    let sops = []\n    \n    // node.warn('grouped1')\n    // node.warn(grouped1)\n    \n    // displays all SOPs if not specified\n    if (sopType.sops.length === 0) {\n        let template = getTemplate(sopType.key, '')\n        \n        sops.push({\n            id: '',\n            key: 'No sequence defined',\n            label: 'Showing all forms',\n            data: {template, source: grouped1}\n        })\n    }\n    \n    // displays only all specified SOPs\n    for (let sop of sopType.sops) {\n        let grouped2 = group2(sop, grouped1)\n        let template = getTemplate(sopType.key, sop.key)\n        \n        // node.warn('grouped2')\n        // node.warn(grouped2)\n        \n        sops.push({\n            id: sop.id,\n            key: sop.key,\n            label: sop.label,\n            data: {template, source: grouped2}\n        })\n    }\n    \n    // node.warn('sops')\n    // node.warn(sops)\n    \n    payload.push({\n        key: sopType.key,\n        label: sopType.label,\n        sops: sops\n    })\n}\n\n// node.warn('payload')\n// node.warn(payload)\n\nfunction getTemplate(productionLine, workstationForm) {\n    let docs = msg.templateDocs\n    let compareProdLine = false\n    \n    for (let doc of docs) {\n        let unmatchProdLine = doc.productionLine !== productionLine\n        let unmatchWorkForm = doc.workstationForm !== workstationForm\n        \n        if (compareProdLine && unmatchProdLine) continue\n        if (unmatchWorkForm) continue\n        \n        return doc.template\n    }\n    \n    return [\n        {label: 'Name', value: 'user_name'},\n        {label: 'Submission On', value: 'submission_timestamp'},\n        {label: 'Reported On', value: 'timestamp'},\n        {label: 'Form Version', value: 'form_version'}\n    ]\n}\n\nfunction group2(sop, submissions) {\n    let grouped = []\n    \n    for (let submission of submissions) {\n        let submissionForm = submission.workstationForm\n        let sopKey = sop.key\n        let match = submissionForm === sopKey\n        \n        if (match) grouped.push(submission)\n    }\n    \n    return grouped\n}\n\nfunction group1(sopType, submissions) {\n    let grouped = []\n    \n    // node.warn(submissions)\n    \n    for (let submission of submissions) {\n        let submissionLine = submission.productionLine\n        let sopTypeKey = sopType.key\n        let match = submissionLine === sopTypeKey\n        \n        if (match) grouped.push(submission)\n    }\n    \n    return grouped\n}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1030,
        "y": 3680,
        "wires": [
            [
                "b0e575fb.f7d498"
            ]
        ]
    },
    {
        "id": "c5b61f4c.6fb85",
        "type": "subflow:7683f6c1.82c818",
        "z": "161e8c5f.9e3554",
        "name": "",
        "env": [],
        "x": 580,
        "y": 3700,
        "wires": [
            [
                "953be27c.48c5b"
            ],
            []
        ]
    },
    {
        "id": "6d62a98a.e1bb78",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "query",
        "func": "let tenant = msg.req.params.tenant\nlet templateType = 'formHistory'\n\nmsg.payload = {tenant, templateType}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 3700,
        "wires": [
            [
                "c5b61f4c.6fb85"
            ]
        ]
    },
    {
        "id": "953be27c.48c5b",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "templateDocs",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 3680,
        "wires": [
            [
                "e5ff47e.aed52b8"
            ]
        ]
    },
    {
        "id": "c409fa78.dd9108",
        "type": "link in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "6988e872.0c28c8",
            "72788406.dbc9ac"
        ],
        "x": 255,
        "y": 3700,
        "wires": [
            [
                "6d62a98a.e1bb78"
            ]
        ]
    },
    {
        "id": "fc909a97.110808",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "api/:tenant/dashboard/dashboard-sop",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 390,
        "y": 3600,
        "wires": [
            [
                "26a79151.78e97e",
                "4824d782.6b6748"
            ]
        ]
    },
    {
        "id": "72788406.dbc9ac",
        "type": "link out",
        "z": "161e8c5f.9e3554",
        "name": "",
        "links": [
            "c409fa78.dd9108"
        ],
        "x": 1655,
        "y": 3600,
        "wires": []
    },
    {
        "id": "26a79151.78e97e",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "set SOP types and SOP ",
        "func": "let sopTypes = [\n    {\n        key: \"breeding\", // productionLine\n        label: \"Breeding\",\n        sops: [\n            {\n                id: \"B.1.1-005\",\n                key: \"neonate-collection\", // workstationForm\n                label: \"Neonate Collection\"\n            },\n            {\n                id: \"B.1.3-002\",\n                key: \"egg-collection\",\n                label: \"Egg Trap OUT (Hatchery) // Egg Trap Cleaning\"\n            },\n            {\n                id: \"B.1.4-006\",\n                key: \"nursery-feedstock-preparation\",\n                label: \"Chicken Feed & Nursery Feedstock Preparation\"\n            },\n            {\n                id: \"B.2.1-010\",\n                key: \"nursery-setup\", // workstationForm\n                label: \"Nursery Setup\"\n            },\n            {\n                id: \"B.2.2-011\",\n                key: \"nursery-harvest\",\n                label: \"5-DOL Harvesting\"\n            },\n            {\n                id: \"\",\n                key: \"nursery-checkout\",\n                label: \"Nursery Checkout\"\n            },\n            {\n                id: \"B.3.1-029\",\n                key: \"grow-out-feedstock-preparation\", // workstationForm\n                label: \"Grow-up feedstock prep\"\n            },\n            {\n                id: \"B.3.2-022\",\n                key: \"grow-out-setup\",\n                label: \"Grow-Out Rack setup\"\n            },\n            {\n                id: \"B.3.3-035\",\n                key: \"grow-out-harvest\",\n                label: \"Grow-out Harvest // Frass & larvae collection\"\n            },\n            {\n                id: \"B.5.1-041\",\n                key: \"pupation-setup-detail\", // workstationForm\n                label: \"Pupation Setup\"\n            },\n            {\n                id: \"B.5.2-042\",\n                key: \"pupation-emergence-setup-detail\",\n                label: \"Move into Emergence Chamber // Fly transfer\"\n            },\n            {\n                id: \"B.6.1-047\",\n                key: \"egg-collection-basic\", // workstationForm\n                label: \"Egg collection\"\n            }\n        ]\n    },\n    {\n        key: \"farming\", // productionLine\n        label: \"Farming\",\n        sops: [\n            {\n                id: \"F.1.1-100\",\n                key: \"grow-out-feedstock-preparation\", // workstationForm\n                label: \"Grow-up feedstock prep\"\n            },\n            {\n                id: \"F.1.2-102\",\n                key: \"grow-out-setup\", // workstationForm\n                label: \"Grow-Out Rack setup\"\n            },\n            {\n                id: \"F.1.3-103\",\n                key: \"grow-out-harvest\", // workstationForm\n                label: \"Grow-out Harvest // Frass & larvae collection\"\n            },\n            {\n                id: \"F.1.4-104\",\n                key: \"\", // workstationForm\n                label: \"Grow-out Chamber Cleaning // Rack Check\"\n            },\n            {\n                id: \"F.1.5-105\",\n                key: \"\", // workstationForm\n                label: \"Extra feed storage// Feedstock Prep Equipment Cleaning\"\n            },\n            {\n                id: \"F.1.6-106\",\n                key: \"\", // workstationForm\n                label: \"Grow-out Chamber Maintenance (for technicians ONLY)\"\n            },\n            {\n                id: \"F.1.7-107\",\n                key: \"\", // workstationForm\n                label: \"Harvest Maintenance & Cleaning\"\n            },\n            {\n                id: \"F.2.1-110\",\n                key: \"\", // workstationForm\n                label: \"Larvae Weighing & Sotrage\"\n            },\n            {\n                id: \"F.2.2-111\",\n                key: \"drying\", // workstationForm\n                label: \"Drying & Sieving\"\n            },\n            {\n                id: \"F.2.3-112\",\n                key: \"\", // workstationForm\n                label: \"Dried Larvae Packing & Movement\"\n            }\n        ]\n    },\n    {\n        key: \"farming\", // productionLine\n        label: \"Process Tracker\",\n        sops: [\n            {\n                id: \"PROC.1.1\",\n                key: \"attendance\", // workstationForm\n                label: \"Attendance\"\n            },\n        ]\n    },\n    {\n        key: \"breeding\", // productionLine\n        label: \"Process Tracker\",\n        sops: [\n            {\n                id: \"PROC.2.1\",\n                key: \"process-check-in-out\", // workstationForm\n                label: \"Process Start Stop\"\n            },\n            {\n                id: \"PROC.2.2\",\n                key: \"process-issue-report\", // workstationForm\n                label: \"Process Issue report\"\n            }\n        ]\n    },\n    {\n        key: \"process-tracker\", // productionLine\n        label: \"Process Tracker\",\n        sops: []\n    },\n    {\n        key: \"qms-elements\", // productionLine\n        label: \"QMS Elements\",\n        sops: []\n    },\n    {\n        key: \"safety\", // productionLine\n        label: \"Safety\",\n        sops: []\n    },\n    {\n        key: \"maintenance\", // productionLine\n        label: \"Maintenance\",\n        sops: []\n    },\n    {\n        key: \"sanitation\", // productionLine\n        label: \"Sanitation\",\n        sops: []\n    },\n    {\n        key: \"qc-data\", // productionLine\n        label: \"QC Data\",\n        sops: []\n    },\n    {\n        key: \"inventory-management\", // productionLine\n        label: \"Inventory Management\",\n        sops: []\n    },\n    {\n        key: \"manufacturing-line\", // productionLine\n        label: \"Manufacturing Line\",\n        sops: []\n    },\n]\n\nflow.set('sopTypes', sopTypes)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 3560,
        "wires": [
            [
                "85e9baa8.a00268"
            ]
        ]
    },
    {
        "id": "6400243c.ec69ec",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_query_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 1290,
        "y": 3600,
        "wires": [
            [
                "db30c20b.7aff2"
            ]
        ]
    },
    {
        "id": "db30c20b.7aff2",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "masterData",
                "pt": "msg",
                "to": "payload.docs",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1500,
        "y": 3600,
        "wires": [
            [
                "72788406.dbc9ac"
            ]
        ]
    },
    {
        "id": "85e9baa8.a00268",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "filter out productionLines or sopTypes",
        "func": "let sopTypes = flow.get('sopTypes')\n\nif (msg.payload.selector.productionLine) {\n    let productionLines = msg.payload.selector.productionLine.$in\n    let filtered = sopTypes.filter(sopType => productionLines.includes(sopType.key))\n    sopTypes = filtered\n}\n\nflow.set('sopTypes', sopTypes)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 3560,
        "wires": [
            []
        ]
    },
    {
        "id": "92feedfe.8ebf7",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "nursery setup",
        "links": [
            "da6532b.d52e5d"
        ],
        "x": 2355,
        "y": 1900,
        "wires": [
            [
                "f1df64d6.0246d8"
            ]
        ]
    },
    {
        "id": "35f2371b.2c1428",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "to master data",
        "links": [
            "6450b038.a9169"
        ],
        "x": 4555,
        "y": 1940,
        "wires": []
    },
    {
        "id": "f1df64d6.0246d8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "msg.original = msg.payload;\n\nmsg.payload= {}\nmsg.payload.key = \"asset\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2470,
        "y": 1900,
        "wires": [
            [
                "cb9fc789.6c5298"
            ]
        ]
    },
    {
        "id": "cb9fc789.6c5298",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "asset",
        "index": "asset",
        "x": 2630,
        "y": 1900,
        "wires": [
            [
                "a2627f30.a3207"
            ]
        ]
    },
    {
        "id": "a2627f30.a3207",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 2450,
        "y": 1960,
        "wires": [
            [
                "6f05e00e.81d2e"
            ],
            [
                "3810cdeb.b65822"
            ],
            [
                "c59c1f25.4c966"
            ]
        ]
    },
    {
        "id": "6f05e00e.81d2e",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "rack",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2690,
        "y": 1960,
        "wires": [
            [
                "96e58cd7.3b5c4"
            ]
        ]
    },
    {
        "id": "3810cdeb.b65822",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2690,
        "y": 2000,
        "wires": [
            []
        ]
    },
    {
        "id": "c59c1f25.4c966",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2690,
        "y": 2060,
        "wires": [
            []
        ]
    },
    {
        "id": "96e58cd7.3b5c4",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "oriPayload",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 2880,
        "y": 1960,
        "wires": [
            [
                "2b8868f2.b81cc8"
            ]
        ]
    },
    {
        "id": "2b8868f2.b81cc8",
        "type": "subflow:f4445896.32f858",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 3140,
        "y": 1960,
        "wires": [
            [
                "248ee334.a2246c"
            ]
        ]
    },
    {
        "id": "248ee334.a2246c",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "oriPayload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 3420,
        "y": 1960,
        "wires": [
            [
                "ba76ce2e.ae6e5"
            ]
        ]
    },
    {
        "id": "ba76ce2e.ae6e5",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "checkOccupied",
        "func": "const rack = msg.rack.assets;\nconst rackId = msg.original.breedingNurserySetupRackId;\nvar exceedCapacity = false\nvar occupied;\nvar availableNumber = 0;\n\nif(rack[rackId].status == \"OCCUPIED\"){\n    occupied = true;\n}\nelse{\n    occupied = false;\n    \n    // if(!rack.options[rackId].batchIdList){\n    //     node.warn(\"asd\");\n    //   rack.options[rackId].batchIdList ={}\n    // }\n    \n     if(!rack[rackId].setupDateIds){\n       rack[rackId].setupDateIds ={}\n    }\n    \n    if(!rack[rackId].batchIdList){\n        //setupdateid here\n        if (rack[rackId].setupDateIds[msg.setupDateId]){\n            rack[rackId].setupDateIds[msg.setupDateId] = parseFloat(rack[rackId].setupDateIds[msg.setupDateId])+parseFloat(msg.original.nurseryTraysCount)\n        }else {\n            rack[rackId].setupDateIds[msg.setupDateId] = parseFloat(msg.original.nurseryTraysCount);\n        }\n    } else {\n        //batchidList havent delete \n        if (rack[rackId].batchIdList[msg.setupDateId]){\n            rack[rackId].batchIdList[msg.setupDateId] = parseFloat(rack[rackId].batchIdList[msg.setupDateId])+parseFloat(msg.original.nurseryTraysCount)\n        }else {\n            rack[rackId].batchIdList[msg.setupDateId] = parseFloat(msg.original.nurseryTraysCount);\n        }\n         rack[rackId].setupDateIds = rack[rackId].batchIdList;\n    }\n    \n    // if(rack.options[rackId].setupDateId[msg.setupDateId]){\n        \n    //     rack.options[rackId].setupDateId[msg.setupDateId] = parseFloat(rack.options[rackId].setupDateId[msg.setupDateId])+parseFloat(msg.original.nurseryTraysCount)\n    // } else if (rack.options[rackId].batchIdList[msg.setupDateId]){\n        \n    //     rack.options[rackId].batchIdList[msg.setupDateId] = parseFloat(rack.options[rackId].batchIdList[msg.setupDateId])+parseFloat(msg.original.nurseryTraysCount)\n    //     rack.options[rackId].setupDateId = rack.options[rackId].batchIdList;\n        \n    // }\n    // else{\n    //     rack.options[rackId].batchIdList[msg.setupDateId] = parseFloat(msg.original.nurseryTraysCount);\n    //     rack.options[rackId].setupDateId = rack.options[rackId].batchIdList;\n    // }\n    \n    \n    \n    \n    rack[rackId].occupied = rack[rackId].occupied +parseFloat(msg.original.nurseryTraysCount);\n    if(rack[rackId].occupied > rack[rackId].capacity){\n        exceedCapacity = true\n        availableNumber = rack[rackId].capacity - (rack[rackId].occupied - msg.original.nurseryTraysCount)\n    }\n    else if(rack[rackId].occupied == rack[rackId].capacity){\n        rack[rackId].status = \"OCCUPIED\"\n    }\n    else{\n        rack[rackId].status = \"PARTIALLY_OCCUPIED\"\n    }\n    \n\n}\n\nmsg.error = false;\nif(exceedCapacity){\n    msg.error = true;\n    msg.errMsg = \"Not enough capacity, capacity available: \" + availableNumber;\n}\nelse if(occupied){\n    msg.error = true;\n    msg.errMsg = \"The Rack is fully occupied\"\n}\n\ndelete rack[rackId].batchIdList\nmsg.payload[0].value.assets = rack;\nmsg.payload = msg.payload[0].value;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3620,
        "y": 1960,
        "wires": [
            [
                "ee73cc6a.895ec"
            ]
        ]
    },
    {
        "id": "1af622a7.7da88d",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "error",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 4070,
        "y": 1960,
        "wires": [
            [
                "1d29943c.55cccc"
            ],
            [
                "abf3df9c.d01d8"
            ]
        ]
    },
    {
        "id": "1d29943c.55cccc",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 4230,
        "y": 1940,
        "wires": [
            [
                "28badf2d.f89ab"
            ]
        ]
    },
    {
        "id": "abf3df9c.d01d8",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": msg.errMsg\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 4270,
        "y": 1980,
        "wires": [
            [
                "3a09ff73.4772d"
            ]
        ]
    },
    {
        "id": "28badf2d.f89ab",
        "type": "change",
        "z": "3517e109.8c2a3e",
        "name": "Change payload",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "original",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 4420,
        "y": 1940,
        "wires": [
            [
                "35f2371b.2c1428"
            ]
        ]
    },
    {
        "id": "3a09ff73.4772d",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 4480,
        "y": 1980,
        "wires": []
    },
    {
        "id": "5a7e39b7.066f28",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "msg.original = msg.payload;\n\nmsg.payload= {}\nmsg.payload.key = \"asset\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2470,
        "y": 2180,
        "wires": [
            [
                "2a1afd49.bcf6f2"
            ]
        ]
    },
    {
        "id": "2a1afd49.bcf6f2",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "asset",
        "index": "asset",
        "x": 2630,
        "y": 2180,
        "wires": [
            [
                "56e67790.35fbc8"
            ]
        ]
    },
    {
        "id": "1e44ac28.ae8714",
        "type": "cloudantplus in",
        "z": "d46e607a.c58f4",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "asset",
        "index": "asset",
        "x": 390,
        "y": 220,
        "wires": [
            [
                "5d12c3fc.f1be9c"
            ]
        ]
    },
    {
        "id": "5d12c3fc.f1be9c",
        "type": "function",
        "z": "d46e607a.c58f4",
        "name": "",
        "func": "let rack = msg.payload[0].value.assets;\nlet rackIdSelected = msg.req.query.fieldValue;\nlet reduced = []\n\nfor(key in rack) {\n    if(key == rackIdSelected) {\n        node.warn(key)\n        let setupDateIds = rack[key].setupDateIds\n        for (let setupDateId in setupDateIds) {\n            let value = setupDateId\n            let label = setupDateId\n            reduced.push({value, label})\n        }\n    }\n}\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 220,
        "wires": [
            [
                "d09caf8f.c5545"
            ]
        ]
    },
    {
        "id": "9de1f33d.26bae",
        "type": "cloudantplus in",
        "z": "d46e607a.c58f4",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 390,
        "y": 520,
        "wires": [
            [
                "34e02a85.614f46"
            ]
        ]
    },
    {
        "id": "34e02a85.614f46",
        "type": "function",
        "z": "d46e607a.c58f4",
        "name": "map",
        "func": "let docs = msg.payload\nlet payload = []\n\nfor (let doc of docs) {\n    payload.push(doc.value)\n}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 520,
        "wires": [
            [
                "c6dc1cdf.f447b"
            ]
        ]
    },
    {
        "id": "c6dc1cdf.f447b",
        "type": "function",
        "z": "d46e607a.c58f4",
        "name": "reduce",
        "func": "let type = 'breedingNurserySetupRackId'\nlet rackId = msg.req.query.fieldValue\nlet docs = msg.payload\nlet doc = docs.find(doc => doc.type === type)\nlet rack = doc.options[rackId]\nlet setupDateIds = rack ? rack.setupDateId : {}\nlet reduced = []\n\nfor (let setupDateId in setupDateIds) {\n    let value = setupDateId\n    let label = setupDateId\n    reduced.push({value, label})\n}\n\nif(msg.masterData && !reduced[msg.masterData.setupDateId] ){\n    //if no more asset in assetdata, get from master\n    let value = msg.masterData.setupDateId\n    let label = msg.masterData.setupDateId\n    reduced.push({value, label})\n}\n\nmsg.payload = reduced\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 520,
        "wires": [
            []
        ]
    },
    {
        "id": "59045150.9d469",
        "type": "comment",
        "z": "d46e607a.c58f4",
        "name": "backup",
        "info": "",
        "x": 550,
        "y": 480,
        "wires": []
    },
    {
        "id": "d386edaa.1a926",
        "type": "http response",
        "z": "48df00a1.c6d5a",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 940,
        "y": 80,
        "wires": []
    },
    {
        "id": "c1829e4c.9bfdf",
        "type": "inject",
        "z": "48df00a1.c6d5a",
        "name": "bootup json",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"bootUpVersion\":3,\"deviceClass\":\"relay-controllers\",\"deviceName\":\"GR_1_006-in-sf\",\"chipID\":\"C06426B267AC\",\"relays\":[22,23,24,26]}",
        "payloadType": "json",
        "x": 170,
        "y": 180,
        "wires": [
            [
                "4d794a35.0778f4"
            ]
        ]
    },
    {
        "id": "dec78f5d.9ad74",
        "type": "cloudantplus out",
        "z": "48df00a1.c6d5a",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1130,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "4d794a35.0778f4",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "structure",
        "func": "msg.payload['docType'] = 'sensorDevice'\nmsg.payload['deviceId'] = msg.payload.chipID\nmsg.payload['deviceName'] = msg.payload['deviceName'].replace('-', '_')\n\ndelete msg.payload.chipID\n\nmsg.original = msg.payload\nmsg.payload = {key: msg.original.deviceId}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 220,
        "wires": [
            [
                "7a297ca5.d6dc14"
            ]
        ]
    },
    {
        "id": "7a297ca5.d6dc14",
        "type": "cloudantplus in",
        "z": "48df00a1.c6d5a",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByDeviceId",
        "x": 510,
        "y": 220,
        "wires": [
            [
                "b7508787.921c48",
                "ffce3a.d9aa11c8"
            ]
        ]
    },
    {
        "id": "b7508787.921c48",
        "type": "switch",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 670,
        "y": 220,
        "wires": [
            [
                "7c0cb6ec.92f2c8"
            ],
            [
                "f360dc79.08ab6"
            ]
        ]
    },
    {
        "id": "924dbcc9.2f74b",
        "type": "link in",
        "z": "48df00a1.c6d5a",
        "name": "to Device Sensor Bootup",
        "links": [
            "58cdbb3b.a96f74",
            "ff9b195.34b85e8",
            "d9ae7848.204a68"
        ],
        "x": 215,
        "y": 220,
        "wires": [
            [
                "4d794a35.0778f4"
            ]
        ]
    },
    {
        "id": "c0b816ef.005778",
        "type": "link in",
        "z": "48df00a1.c6d5a",
        "name": "to Recipe Config",
        "links": [
            "754e5449.cc414c",
            "48b6cd88.a46724",
            "84a0bebe.90bd4"
        ],
        "x": 215,
        "y": 100,
        "wires": [
            [
                "73ebbecb.5622"
            ]
        ]
    },
    {
        "id": "574601ec.cc642",
        "type": "cloudantplus in",
        "z": "48df00a1.c6d5a",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByProvisioned",
        "x": 490,
        "y": 100,
        "wires": [
            [
                "7c37b8c0.46bb98"
            ]
        ]
    },
    {
        "id": "2583739a.40d5ec",
        "type": "inject",
        "z": "48df00a1.c6d5a",
        "name": "C06426B267AC",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "{\"ID\":\"C06426B267AC\",\"ts\":\"1614049924\"}",
        "payloadType": "json",
        "x": 160,
        "y": 60,
        "wires": [
            [
                "73ebbecb.5622"
            ]
        ]
    },
    {
        "id": "7c37b8c0.46bb98",
        "type": "switch",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 100,
        "wires": [
            [
                "90b6d0a3.f5b97"
            ],
            [
                "294d58ab.7acc18"
            ]
        ]
    },
    {
        "id": "73ebbecb.5622",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "query",
        "func": "msg.payload = {key: msg.payload.ID}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "574601ec.cc642"
            ]
        ]
    },
    {
        "id": "90b6d0a3.f5b97",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "null",
        "func": "msg.payload = null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 790,
        "y": 80,
        "wires": [
            [
                "d386edaa.1a926"
            ]
        ]
    },
    {
        "id": "80e23514.364af8",
        "type": "comment",
        "z": "48df00a1.c6d5a",
        "name": "Recipe Config - Going to return the Recipe Config",
        "info": "",
        "x": 460,
        "y": 60,
        "wires": []
    },
    {
        "id": "c0f8b3e1.d8e3",
        "type": "comment",
        "z": "48df00a1.c6d5a",
        "name": "Register Device for Device Provisioning",
        "info": "",
        "x": 430,
        "y": 180,
        "wires": []
    },
    {
        "id": "294d58ab.7acc18",
        "type": "link out",
        "z": "48df00a1.c6d5a",
        "name": "",
        "links": [
            "bcc4c5b2.7b9838",
            "f437b9c0.6d0578",
            "dc2ea5c9.adbae8",
            "c4481a89.6a4398",
            "434307aa.436ae8"
        ],
        "x": 755,
        "y": 120,
        "wires": []
    },
    {
        "id": "42da460f.73ed78",
        "type": "comment",
        "z": "48df00a1.c6d5a",
        "name": "Recipe Config",
        "info": "",
        "x": 350,
        "y": 20,
        "wires": []
    },
    {
        "id": "7c0cb6ec.92f2c8",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "msg.original['docVersion'] = 2\nmsg.payload = msg.original\nmsg.proceed = true\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 200,
        "wires": [
            [
                "bc337739.1617e8"
            ]
        ]
    },
    {
        "id": "f360dc79.08ab6",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "let oldDevice = msg.payload[0].value\nlet newDevice = msg.original\n\n// docVersion\n// verify document structure if need to update\nif (oldDevice.docVersion !== 2) {\n    if (oldDevice['provisioned']) {\n        msg.payload = newDevice\n        msg.payload['location'] = oldDevice['location'] || 'nolocation'\n        msg.payload['provisioned'] = true\n        msg.payload['recipeConfig'] = oldDevice['recipeConfig']\n    } else {\n        msg.payload = newDevice\n        msg.payload['location'] = 'nolocation'\n    }\n    \n    msg.payload['_id'] = oldDevice._id\n    msg.payload['_rev'] = oldDevice._rev\n    msg.payload['docType'] = 'sensorDevice'\n    msg.payload['docVersion'] = 2\n    msg.proceed = true\n}\n\n// bootUpVersion\n// verify device details if need to update\nif (!oldDevice.bootUpVersion || +oldDevice.bootUpVersion < +newDevice.bootUpVersion) {\n    msg.payload = oldDevice\n    \n    // overwrites\n    for (const key in newDevice) {\n        msg.payload[key] = newDevice[key]\n    }\n    \n    msg.proceed = true\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 240,
        "wires": [
            [
                "bc337739.1617e8"
            ]
        ]
    },
    {
        "id": "bc337739.1617e8",
        "type": "switch",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "proceed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 970,
        "y": 220,
        "wires": [
            [
                "dec78f5d.9ad74"
            ]
        ]
    },
    {
        "id": "2157bf9b.ab2dc",
        "type": "http response",
        "z": "48df00a1.c6d5a",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 860,
        "y": 280,
        "wires": []
    },
    {
        "id": "ffce3a.d9aa11c8",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "let payload = msg.payload\n\nif (payload && Array.isArray(payload) && payload.length > 0) {\n    let savedData = msg.payload[0].value\n    \n    payload = {}\n    payload['deviceName'] = savedData.deviceName\n    payload['location'] = savedData.location\n    payload['provisioned'] = savedData.provisioned\n} else {\n    payload = {}\n    payload['provisioned'] = false\n}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 280,
        "wires": [
            [
                "2157bf9b.ab2dc"
            ]
        ]
    },
    {
        "id": "e2e1edae.4a73",
        "type": "inject",
        "z": "48df00a1.c6d5a",
        "name": "C06426B267AC",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "{\"ID\":\"C06426B267AC\",\"ts\":\"1645585924\"}",
        "payloadType": "json",
        "x": 160,
        "y": 500,
        "wires": [
            [
                "8ed5396f.42c3c8"
            ]
        ]
    },
    {
        "id": "17301661.13df1a",
        "type": "link in",
        "z": "48df00a1.c6d5a",
        "name": "to Recipe Config",
        "links": [
            "754e5449.cc414c",
            "48b6cd88.a46724"
        ],
        "x": 215,
        "y": 540,
        "wires": [
            [
                "8ed5396f.42c3c8"
            ]
        ]
    },
    {
        "id": "8ed5396f.42c3c8",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "map",
        "func": "let payload = {}\nlet deviceTimestamp = new Date(msg.payload.ts * 1000).toISOString()\n\npayload['deviceId'] = msg.payload.ID\npayload['deviceTimestamp'] = deviceTimestamp\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 540,
        "wires": [
            [
                "47223dfa.eb6444"
            ]
        ]
    },
    {
        "id": "88c2d6d9.b706f8",
        "type": "comment",
        "z": "48df00a1.c6d5a",
        "name": "Record Device Status",
        "info": "",
        "x": 380,
        "y": 500,
        "wires": []
    },
    {
        "id": "4a879c27.5ee814",
        "type": "json",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 680,
        "wires": [
            [
                "4217d0b4.83b4e"
            ]
        ]
    },
    {
        "id": "927b7e7f.eae9b",
        "type": "link in",
        "z": "48df00a1.c6d5a",
        "name": "to Cache Known Device Data Fields",
        "links": [
            "af54a412.dd3318"
        ],
        "x": 216,
        "y": 680,
        "wires": [
            [
                "4a879c27.5ee814"
            ]
        ]
    },
    {
        "id": "4217d0b4.83b4e",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "let data = msg.payload || {}\nlet keys = Object.keys(data)\n\nmsg.deviceDataFields = keys\nmsg.payload = 'cache'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 480,
        "y": 680,
        "wires": [
            [
                "61cb0c.0bf244f4"
            ]
        ]
    },
    {
        "id": "61cb0c.0bf244f4",
        "type": "cloudantplus in",
        "z": "48df00a1.c6d5a",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 650,
        "y": 680,
        "wires": [
            [
                "e4fec440.e22ed8"
            ]
        ]
    },
    {
        "id": "e4fec440.e22ed8",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "let doc = msg.payload\nlet cacheKey = 'knownDeviceDataFields'\nlet cacheValue = doc.cache[cacheKey]\nlet deviceDataFields = msg.deviceDataFields\n\nfor (let deviceDataField of deviceDataFields) {\n    if (cacheValue.includes(deviceDataField)) continue\n    else cacheValue.push(deviceDataField)\n}\n\nmsg.payload = doc\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 680,
        "wires": [
            [
                "1343f0d6.6e643f"
            ]
        ]
    },
    {
        "id": "1343f0d6.6e643f",
        "type": "cloudantplus out",
        "z": "48df00a1.c6d5a",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 990,
        "y": 680,
        "wires": [
            []
        ]
    },
    {
        "id": "74798cf0.9e0eb4",
        "type": "comment",
        "z": "48df00a1.c6d5a",
        "name": "Cache Known Device Data Fields",
        "info": "",
        "x": 410,
        "y": 640,
        "wires": []
    },
    {
        "id": "dc066892.a8d228",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "// let query = {\n//     \"selector\": {\n//         \"docType\":\"select-option\",\n//         \"type\": msg.req.params.key,\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\nlet query = {}\nlet body = msg.payload\nif(msg.payload.batchIdList) {\n    //old data\n    query[\"key\"] = [msg.req.params.tenant, body.rackId, body.batchIdList]\n} else {\n    //new data\n    query[\"key\"] = [msg.req.params.tenant, body.label, body.date]\n}\n\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 2660,
        "wires": [
            [
                "bb8065ea.13c428"
            ]
        ]
    },
    {
        "id": "866b0dbe.7dcd",
        "type": "function",
        "z": "6e75aa15.98f704",
        "name": "Query",
        "func": "msg.original = msg.payload;\nmsg.payload.key = \"asset\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 170,
        "y": 80,
        "wires": [
            [
                "27ac8eea.e6b802"
            ]
        ]
    },
    {
        "id": "27ac8eea.e6b802",
        "type": "cloudantplus in",
        "z": "6e75aa15.98f704",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "asset",
        "index": "asset",
        "x": 350,
        "y": 80,
        "wires": [
            [
                "726dc3a7.e1b26c"
            ]
        ]
    },
    {
        "id": "726dc3a7.e1b26c",
        "type": "function",
        "z": "6e75aa15.98f704",
        "name": "",
        "func": "let dynamicProcess = msg.req.params.process;\nlet locations = msg.payload[0].value.locations;\nlet sublocations = msg.payload[0].value.sublocations;\nlet assets = msg.payload[0].value.assets;\n\ndatas = []\n\nfor(location in locations) {\n    if(locations[location].process == dynamicProcess) {\n        dataObject = {}\n        dataObject.header = locations[location].label;\n        dataObject.click = false;\n        \n        labels = []\n        for(sublocation in sublocations) {\n            if(sublocations[sublocation].location == location) {\n                \n                labelObject = {}\n                labelObject.label = sublocations[sublocation].label;\n                \n                details = [];\n                for(asset in assets) {\n                    if(assets[asset].sublocation == sublocation) {\n                        let setupDateIds = assets[asset].setupDateIds;\n                        for(let setupDateId in setupDateIds){\n                            detailsObject = {}\n                            detailsObject.label = asset\n                            detailsObject.date = setupDateId\n                            detailsObject.counts = setupDateIds[setupDateId];\n                            details.push(detailsObject);\n                        }\n                    }\n                }\n                labelObject.details = details;\n                labels.push(labelObject);\n            }\n        }\n        dataObject.labels = labels;\n    }\n    datas.push(dataObject);\n}\n\nmsg.payload = datas;\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b2c511ce.5627e",
        "type": "http in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "url": "/api/:tenant/dashboard-status-monitor/:process",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 3920,
        "wires": [
            [
                "d1113223.a1ef3"
            ]
        ]
    },
    {
        "id": "d1113223.a1ef3",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "req.params.process",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nursery",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 3920,
        "wires": [
            [
                "18718ef8.32c7f1"
            ],
            [
                "25602dd8.dc8b42"
            ]
        ]
    },
    {
        "id": "18718ef8.32c7f1",
        "type": "subflow:6e75aa15.98f704",
        "z": "161e8c5f.9e3554",
        "name": "",
        "env": [],
        "x": 590,
        "y": 3840,
        "wires": [
            [
                "516c7ad9.aa2264"
            ]
        ]
    },
    {
        "id": "25602dd8.dc8b42",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Query",
        "func": "let query = {}\n// query[\"key\"] = [msg.req.params.tenant, \"breedingNurserySetupRackId\"]\nquery[\"key\"] = [msg.req.params.tenant, msg.req.params.process];\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 3940,
        "wires": [
            [
                "64095420.a6690c"
            ]
        ]
    },
    {
        "id": "516c7ad9.aa2264",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 820,
        "y": 3840,
        "wires": []
    },
    {
        "id": "64095420.a6690c",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 740,
        "y": 3940,
        "wires": [
            [
                "11b4744a.90cbbc"
            ]
        ]
    },
    {
        "id": "11b4744a.90cbbc",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 910,
        "y": 3940,
        "wires": [
            [
                "95bec1c0.71f82"
            ],
            [
                "ce3a5e94.93181"
            ],
            [
                "54a5e5b8.310dac"
            ]
        ]
    },
    {
        "id": "95bec1c0.71f82",
        "type": "switch",
        "z": "161e8c5f.9e3554",
        "name": "",
        "property": "req.params.process",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "growthChamberId",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupationChamberId",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "prePupaeChamberId",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 1070,
        "y": 3840,
        "wires": [
            [
                "63f1227.2a0b8dc"
            ],
            [
                "f9b23756.5820d8"
            ],
            [
                "b7303291.c3a"
            ]
        ]
    },
    {
        "id": "ce3a5e94.93181",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"More than 1 entries found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 3940,
        "wires": [
            [
                "85cacf97.0c0fa"
            ]
        ]
    },
    {
        "id": "54a5e5b8.310dac",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Less than 1 entry found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1170,
        "y": 4000,
        "wires": [
            [
                "94a2e78.584a218"
            ]
        ]
    },
    {
        "id": "63f1227.2a0b8dc",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value.options",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 3820,
        "wires": [
            [
                "4cda6d81.68b9d4"
            ]
        ]
    },
    {
        "id": "f9b23756.5820d8",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value.options",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 3860,
        "wires": [
            [
                "9654e7a7.f2b828"
            ]
        ]
    },
    {
        "id": "b7303291.c3a",
        "type": "change",
        "z": "161e8c5f.9e3554",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "chamber",
                "pt": "msg",
                "to": "payload[0].value.options",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1290,
        "y": 3900,
        "wires": [
            [
                "ed54e66f.c6ad68"
            ]
        ]
    },
    {
        "id": "85cacf97.0c0fa",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1380,
        "y": 3940,
        "wires": []
    },
    {
        "id": "94a2e78.584a218",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 1400,
        "y": 4000,
        "wires": []
    },
    {
        "id": "4cda6d81.68b9d4",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "switch payload",
        "func": "msg.payload = {};\nlet query = {}\n\nquery[\"key\"] = [msg.req.params.tenant, \"breedingGrowOutSetupRackId\"];\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1480,
        "y": 3820,
        "wires": [
            [
                "9a1b3bc2.9bf428"
            ]
        ]
    },
    {
        "id": "9654e7a7.f2b828",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "switch payload",
        "func": "msg.payload = {};\nlet query = {}\n\nquery[\"key\"] = [msg.req.params.tenant, \"pupationRackID\"];\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1480,
        "y": 3860,
        "wires": [
            [
                "e7accf3.5bdae3"
            ]
        ]
    },
    {
        "id": "ed54e66f.c6ad68",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "switch payload",
        "func": "msg.payload = {};\nlet query = {}\n\nquery[\"key\"] = [msg.req.params.tenant, \"pupationRackID\"];\nmsg.payload = query;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1480,
        "y": 3900,
        "wires": [
            [
                "e7accf3.5bdae3"
            ]
        ]
    },
    {
        "id": "9a1b3bc2.9bf428",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 1670,
        "y": 3800,
        "wires": [
            [
                "eaac936.883d97"
            ]
        ]
    },
    {
        "id": "e7accf3.5bdae3",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "select-option-list",
        "index": "select-option-list",
        "x": 1690,
        "y": 3880,
        "wires": [
            [
                "bb33a978.0c2608"
            ]
        ]
    },
    {
        "id": "eaac936.883d97",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "let racks = msg.payload[0].value.options;\nlet chambers = msg.chamber;\nlet datas = []\nlet dataObject = {}\ndataObject.header = \" \"\ndataObject.click = true;\nlet labels = []\n\n\n\nfor(let chamberKey in chambers) {\n    let details = [];\n    \n    let labelObject = {}\n    labelObject.label = chambers[chamberKey].label.en;\n    \n    if(chambers[chamberKey].rackIdList) {\n        let rackIdList = chambers[chamberKey].rackIdList;\n    \n        for(var x = 0; x < rackIdList.length; x++) {\n            \n            let rackId = rackIdList[x];\n            \n            for(let rackKey in racks){\n                \n              if(rackId == rackKey) {\n                   \n                  let setupDateId = racks[rackKey].setupDateId;\n                    detailsObject = {}\n                    detailsObject.label = rackKey\n                    detailsObject.date = setupDateId\n                    detailsObject.counts = \" \";\n                    details.push(detailsObject);\n    \n              }\n               \n            }\n            \n        }\n    }\n    \n        \n    \n    \nlabelObject.details = details\nlabels.push(labelObject);\n\n}\n\n\ndataObject.labels = labels;\ndatas.push(dataObject);\n\nmsg.payload = datas;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1840,
        "y": 3760,
        "wires": [
            [
                "468bf64.dea2c08"
            ]
        ]
    },
    {
        "id": "bb33a978.0c2608",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "",
        "func": "let racks = msg.payload[0].value.options;\nlet chambers = msg.chamber;\nlet datas = []\nlet dataObject = {}\ndataObject.header = \" \"\ndataObject.click = false;\n\nlet labels = []\n\nfor(let chamberKey in chambers) {\n    let details = [];\n    \n    let labelObject = {}\n    labelObject.label = chambers[chamberKey].label.en;\n\n    if(chambers[chamberKey].rackIdList) {\n        let rackIdList = chambers[chamberKey].rackIdList;\n        \n        for(var x = 0; x < rackIdList.length; x++) {\n            \n            let rackId = rackIdList[x];\n            \n            for(let rackKey in racks){\n                \n               if(rackId == rackKey) {\n                   \n                   let setupDateIds = racks[rackKey].setupDateId;\n                   for(var setupDateId in setupDateIds) {\n                        detailsObject = {}\n                        detailsObject.label = rackKey\n                        detailsObject.date = setupDateId\n                        detailsObject.counts = setupDateIds[setupDateId];\n                        details.push(detailsObject);\n                   }\n                        \n                }\n               \n            }\n            \n        }\n    }\n    \n    \nlabelObject.details = details\nlabels.push(labelObject);\n\n}\n\n\ndataObject.labels = labels;\ndatas.push(dataObject);\n\nmsg.payload = datas;\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1860,
        "y": 3880,
        "wires": [
            [
                "a44596b.33dd468"
            ]
        ]
    },
    {
        "id": "468bf64.dea2c08",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2100,
        "y": 3760,
        "wires": []
    },
    {
        "id": "a44596b.33dd468",
        "type": "http response",
        "z": "161e8c5f.9e3554",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 2120,
        "y": 3880,
        "wires": []
    },
    {
        "id": "3924f86e.d70de8",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "processStatusDashboard",
        "info": "",
        "x": 170,
        "y": 3880,
        "wires": []
    },
    {
        "id": "7f360099.2e3a4",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "New Data Structure",
        "info": "",
        "x": 550,
        "y": 3800,
        "wires": []
    },
    {
        "id": "14ed82a6.e9c4fd",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "Old Data Structure",
        "info": "",
        "x": 570,
        "y": 3980,
        "wires": []
    },
    {
        "id": "ae8e138a.fcbaa",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "puapation",
        "info": "",
        "x": 1700,
        "y": 3860,
        "wires": []
    },
    {
        "id": "b7303e1a.f0b41",
        "type": "comment",
        "z": "161e8c5f.9e3554",
        "name": "growth",
        "info": "",
        "x": 1650,
        "y": 3780,
        "wires": []
    },
    {
        "id": "d0204c85.2d4f3",
        "type": "function",
        "z": "d46e607a.c58f4",
        "name": "Query",
        "func": "msg.payload= {}\nmsg.payload.key = \"asset\"\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 250,
        "y": 220,
        "wires": [
            [
                "1e44ac28.ae8714"
            ]
        ]
    },
    {
        "id": "47ba4cfa.32d5f4",
        "type": "inject",
        "z": "dc8c4370.78e2",
        "name": "design names",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "",
        "payload": "[\"asset\",\"assets\",\"sublocations\"]",
        "payloadType": "json",
        "x": 140,
        "y": 2260,
        "wires": [
            [
                "2c3473d7.13f22c"
            ]
        ],
        "info": "# Design names\n\nAdd an array of design document names\nto check. Add these names to the split node\nand provide a template containing the code"
    },
    {
        "id": "3e57a3e.d87b75c",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for PUT",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/farmconfig/_design/\"+msg.topic;\nmsg.method=\"PUT\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 2580,
        "wires": [
            [
                "464984df.dfa01c"
            ]
        ]
    },
    {
        "id": "c4f17901.97ea58",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "asset",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/asset\",\n  \"_rev\": \"24-7b740c7eb9891d576b3b17553869b3a5\",\n  \"views\": {\n    \"asset\": {\n      \"map\": \"function (doc) {\\n  if(doc.docType==\\\"asset\\\") {\\n    emit(doc.docType,doc);\\n  }\\n  \\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 630,
        "y": 2260,
        "wires": [
            [
                "ce9069fc.4c1778"
            ]
        ]
    },
    {
        "id": "2c3473d7.13f22c",
        "type": "split",
        "z": "dc8c4370.78e2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 170,
        "y": 2300,
        "wires": [
            [
                "bf322cff.21beb"
            ]
        ]
    },
    {
        "id": "28321d5.8a3bae2",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 1010,
        "y": 2420,
        "wires": [
            [
                "c24182b5.9a493"
            ]
        ]
    },
    {
        "id": "9ead224e.9e1b6",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for GET",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/farmconfig/_design/\"+msg.topic;\nmsg.method=\"GET\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 2460,
        "wires": [
            [
                "5eef16f7.854bd8"
            ]
        ]
    },
    {
        "id": "5eef16f7.854bd8",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 150,
        "y": 2500,
        "wires": [
            [
                "f9b27066.23714"
            ]
        ]
    },
    {
        "id": "bf322cff.21beb",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 2340,
        "wires": [
            [
                "8fb742ba.90524"
            ]
        ]
    },
    {
        "id": "e209d807.c71bb8",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "func": "if (msg.existingDoc || msg.existingDoc._rev) {\n    msg.hasRev = true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 2260,
        "wires": [
            [
                "28b55ceb.f45804"
            ]
        ]
    },
    {
        "id": "28b55ceb.f45804",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "property": "hasRev",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1020,
        "y": 2300,
        "wires": [
            [
                "62331167.06779"
            ],
            [
                "e86b6059.3f3ac"
            ]
        ]
    },
    {
        "id": "f9b27066.23714",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "existingDoc",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 120,
        "y": 2540,
        "wires": [
            [
                "3e57a3e.d87b75c"
            ]
        ]
    },
    {
        "id": "62331167.06779",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload._rev",
                "pt": "msg",
                "to": "existingDoc._rev",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 980,
        "y": 2340,
        "wires": [
            [
                "28321d5.8a3bae2"
            ]
        ]
    },
    {
        "id": "a81d7c67.9083f",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "design name",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "asset",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 2260,
        "wires": [
            [
                "c4f17901.97ea58"
            ]
        ]
    },
    {
        "id": "6ce5ad4e.2a6534",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "farmconfig db",
        "info": "",
        "x": 130,
        "y": 2220,
        "wires": []
    },
    {
        "id": "e86b6059.3f3ac",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload._rev",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 970,
        "y": 2380,
        "wires": [
            [
                "28321d5.8a3bae2"
            ]
        ]
    },
    {
        "id": "3acc4f7d.4ab3d",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "template here",
        "info": "",
        "x": 650,
        "y": 2220,
        "wires": []
    },
    {
        "id": "8fb742ba.90524",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "should delay?",
        "property": "ENVIRONMENT",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "production",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 140,
        "y": 2380,
        "wires": [
            [
                "452b2de1.5bca44"
            ],
            [
                "9ead224e.9e1b6"
            ]
        ]
    },
    {
        "id": "452b2de1.5bca44",
        "type": "delay",
        "z": "dc8c4370.78e2",
        "name": "",
        "pauseType": "rate",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 150,
        "y": 2420,
        "wires": [
            [
                "9ead224e.9e1b6"
            ]
        ]
    },
    {
        "id": "801e02c8.c90dc",
        "type": "http in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "url": "/api/:tenant/options",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 440,
        "wires": [
            [
                "ab856eec.cd6dd"
            ]
        ]
    },
    {
        "id": "e3e8793f.39f3e8",
        "type": "comment",
        "z": "1ee45479.6b35fc",
        "name": "Same as GET but with body",
        "info": "",
        "x": 200,
        "y": 400,
        "wires": []
    },
    {
        "id": "e39e63f7.8ea13",
        "type": "link out",
        "z": "1ee45479.6b35fc",
        "name": "",
        "links": [
            "a7bad20d.3fa7e",
            "cd217b99.715698"
        ],
        "x": 655,
        "y": 460,
        "wires": []
    },
    {
        "id": "a7bad20d.3fa7e",
        "type": "link in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "links": [
            "e39e63f7.8ea13"
        ],
        "x": 95,
        "y": 600,
        "wires": [
            [
                "ec2399cd.4f2738"
            ]
        ]
    },
    {
        "id": "20aedbfe.ab8244",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "query",
        "func": "let key = ['NC_01']\n\nmsg.topic = 'full'\nmsg.payload = {key}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 580,
        "wires": [
            [
                "7d3c3af9.f78ca4",
                "bde08fb.910a27"
            ]
        ]
    },
    {
        "id": "7d3c3af9.f78ca4",
        "type": "cloudantplus in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sublocations",
        "index": "unoccupied-by-location",
        "x": 690,
        "y": 580,
        "wires": [
            [
                "217b26e2.04f02a",
                "347da39b.68674c"
            ]
        ]
    },
    {
        "id": "35635330.c8ea4c",
        "type": "http response",
        "z": "1ee45479.6b35fc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1130,
        "y": 600,
        "wires": []
    },
    {
        "id": "c8c544c7.b9e648",
        "type": "switch",
        "z": "1ee45479.6b35fc",
        "name": "",
        "property": "shouldProceed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 600,
        "wires": [
            [
                "20aedbfe.ab8244",
                "dfe1a69d.f83908"
            ]
        ]
    },
    {
        "id": "ab856eec.cd6dd",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "supported",
        "func": "let formType = msg.payload['formType']\nlet formName = msg.payload['formName']\nlet formField = msg.payload['formField']\nlet errors = msg.errors || []\nlet supported = {\n    'breeding': {\n        'nursery-setup': {\n            'sublocation': true,\n            'breedingNurserySetupRackId': true\n        }\n    }\n}\n\nif (!supported[formType]) {\n    errors.push('Unsupported form type')\n    msg.errors = errors\n    return msg;\n}\nif (!supported[formType][formName]) {\n    errors.push('Unsupported form')\n    msg.errors = errors\n    return msg;\n}\nif (!supported[formType][formName][formField]) {\n    errors.push('Unsupported form field')\n    msg.errors = errors\n    return msg;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 400,
        "y": 440,
        "wires": [
            [
                "bfa1e9e8.339ab8"
            ]
        ]
    },
    {
        "id": "bfa1e9e8.339ab8",
        "type": "switch",
        "z": "1ee45479.6b35fc",
        "name": "",
        "property": "errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 440,
        "wires": [
            [
                "a9c75168.c3486"
            ],
            [
                "e39e63f7.8ea13"
            ]
        ]
    },
    {
        "id": "9b610e0d.67aae",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "error",
        "func": "let message = msg.errors[0]\nmsg.payload = {message}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 500,
        "wires": [
            [
                "8a1d38e7.183628"
            ]
        ]
    },
    {
        "id": "8a1d38e7.183628",
        "type": "http response",
        "z": "1ee45479.6b35fc",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 340,
        "y": 500,
        "wires": []
    },
    {
        "id": "7022ae63.d7ba7",
        "type": "link in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "links": [
            "a9c75168.c3486"
        ],
        "x": 95,
        "y": 500,
        "wires": [
            [
                "9b610e0d.67aae"
            ]
        ]
    },
    {
        "id": "a9c75168.c3486",
        "type": "link out",
        "z": "1ee45479.6b35fc",
        "name": "",
        "links": [
            "7022ae63.d7ba7"
        ],
        "x": 655,
        "y": 420,
        "wires": []
    },
    {
        "id": "ec2399cd.4f2738",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "shouldProceed",
        "func": "let reqType = msg.req.query.type\nlet formType = msg.payload.formType\nlet formName = msg.payload['formName']\nlet formField = msg.payload['formField']\nlet allowed = {\n    'form': {\n        'breeding': {\n            'nursery-setup': {\n                'sublocation': true\n            }\n        }\n    }\n}\n\nif (\n    allowed[reqType] &&\n    allowed[reqType][formType] &&\n    allowed[reqType][formType][formName] &&\n    allowed[reqType][formType][formName][formField]\n) {\n    msg.shouldProceed = true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 600,
        "wires": [
            [
                "c8c544c7.b9e648"
            ]
        ]
    },
    {
        "id": "cd217b99.715698",
        "type": "link in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "links": [
            "e39e63f7.8ea13"
        ],
        "x": 95,
        "y": 740,
        "wires": [
            [
                "2a4c1fdf.a1312"
            ]
        ]
    },
    {
        "id": "b85be2c9.8348e",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "map",
        "func": "let docs = msg.payload\nlet options = []\n\nfor (let doc of docs) {\n    options.push(doc.value)\n}\n\nmsg.payload = options\nmsg.topic = 'unoccupiedRackOptions'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 930,
        "y": 760,
        "wires": [
            [
                "c08a3eb5.f2146"
            ]
        ]
    },
    {
        "id": "2fd2e729.3b8cb8",
        "type": "http response",
        "z": "1ee45479.6b35fc",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1350,
        "y": 740,
        "wires": []
    },
    {
        "id": "eafb24fa.f9da78",
        "type": "switch",
        "z": "1ee45479.6b35fc",
        "name": "",
        "property": "shouldProceed",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 740,
        "wires": [
            [
                "a5d2ee14.cdcb9",
                "4bc15844.9fcce8"
            ]
        ]
    },
    {
        "id": "2a4c1fdf.a1312",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "shouldProceed",
        "func": "let reqType = msg.req.query.type\nlet formType = msg.payload.formType\nlet formName = msg.payload['formName']\nlet formField = msg.payload['formField']\nlet allowed = {\n    'form': {\n        'breeding': {\n            'nursery-setup': {\n                'breedingNurserySetupRackId': true\n            }\n        }\n    }\n}\n\nif (\n    allowed[reqType] &&\n    allowed[reqType][formType] &&\n    allowed[reqType][formType][formName] &&\n    allowed[reqType][formType][formName][formField]\n) {\n    msg.shouldProceed = true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 740,
        "wires": [
            [
                "eafb24fa.f9da78"
            ]
        ]
    },
    {
        "id": "f53f706c.3beef",
        "type": "comment",
        "z": "1ee45479.6b35fc",
        "name": "form, breeding, nursery-setup, sublocation",
        "info": "",
        "x": 240,
        "y": 560,
        "wires": []
    },
    {
        "id": "5f2b18bf.ee4648",
        "type": "comment",
        "z": "1ee45479.6b35fc",
        "name": "form, breeding, nursery-setup, breedingNurserySetupRackId",
        "info": "",
        "x": 300,
        "y": 680,
        "wires": []
    },
    {
        "id": "a5d2ee14.cdcb9",
        "type": "cloudantplus in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "assets",
        "index": "unoccupied-by-sublocation",
        "x": 550,
        "y": 760,
        "wires": [
            [
                "b85be2c9.8348e"
            ]
        ]
    },
    {
        "id": "d3c09005.d9072",
        "type": "cloudantplus in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "sublocations",
        "index": "by-asset",
        "x": 690,
        "y": 620,
        "wires": [
            [
                "217b26e2.04f02a",
                "1ae8cbe6.136684"
            ]
        ]
    },
    {
        "id": "dfe1a69d.f83908",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "query",
        "func": "let formValue = msg.payload.formValue || {}\nlet rackId = formValue.breedingNurserySetupRackId\nlet key = [rackId]\n\nmsg.topic = 'specific'\nmsg.payload = {key}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 620,
        "wires": [
            [
                "d3c09005.d9072",
                "dc023be5.ff6358"
            ]
        ]
    },
    {
        "id": "217b26e2.04f02a",
        "type": "join",
        "z": "1ee45479.6b35fc",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 850,
        "y": 600,
        "wires": [
            [
                "48b28ac3.94d7f4"
            ]
        ]
    },
    {
        "id": "48b28ac3.94d7f4",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "map",
        "func": "let specificDocs = msg.payload.specific\nlet docs = msg.payload.full\nlet options = []\n\n// Overwrites docs\nif (msg.payload.specific.length > 0) {\n    docs = msg.payload.specific\n}\n\nfor (let doc of docs) {\n    options.push(doc.value)\n}\n\nmsg.payload = options\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 990,
        "y": 600,
        "wires": [
            [
                "35635330.c8ea4c"
            ]
        ]
    },
    {
        "id": "a68825a2.22d138",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "assets",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/assets\",\n  \"_rev\": \"13-d764f2581b814142bd3f8c53e7ab73dd\",\n  \"views\": {\n    \"unoccupied-by-sublocation\": {\n      \"map\": \"function (doc) {\\n  if (doc._id === \\\"asset\\\") {\\n    for (var assetName in doc.assets) {\\n      var asset = doc.assets[assetName];\\n      var assetCapacity = asset.capacity || 0;\\n      var assetSetupDateIds = asset.setupDateIds || {};\\n      var assetSublocation = asset.sublocation || \\\"\\\";\\n      var value = assetName;\\n      var label = asset.label;\\n      for (var setupDateId in assetSetupDateIds) {\\n        var setupDateIdOccupied = assetSetupDateIds[setupDateId] || 0;\\n        assetCapacity = assetCapacity - setupDateIdOccupied;\\n      }\\n      if (assetCapacity > 0) emit([assetSublocation], {value: value, label: label});\\n    }\\n  }\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 630,
        "y": 2300,
        "wires": [
            [
                "18a5c644.add2ba"
            ]
        ]
    },
    {
        "id": "1765d9ec.ddbaa6",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "sublocations",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/sublocations\",\n  \"_rev\": \"18-11f41258930ba3fecd0269d41e3829ee\",\n  \"views\": {\n    \"by-asset\": {\n      \"map\": \"function (doc) {\\n  if (doc._id === \\\"asset\\\") {\\n    for (var assetName in doc.assets) {\\n      var asset = doc.assets[assetName];\\n      var assetSublocation = asset.sublocation;\\n      \\n      if (!assetSublocation) return;\\n      var value = assetSublocation;\\n      var label = doc.sublocations[assetSublocation].label;\\n      emit([assetName], {value: value, label: label});\\n    }\\n  }\\n}\"\n    },\n    \"unoccupied-by-location\": {\n      \"map\": \"function (doc) {\\n  if (doc._id === \\\"asset\\\") {\\n    for (var sublocationName in doc.sublocations) {\\n      var sublocation = doc.sublocations[sublocationName];\\n      var sublocationLocation = sublocation[\\\"location\\\"];\\n      var capacity = sublocation.capacity || 0;\\n      var value = sublocationName;\\n      var label = sublocation.label;\\n      \\n      for (var assetName in doc.assets) {\\n        var asset = doc.assets[assetName];\\n        var assetSublocation = asset[\\\"sublocation\\\"];\\n        \\n        if (assetSublocation === value && capacity) capacity--;\\n      }\\n      \\n      if (capacity > 0) emit([sublocationLocation], {value: value, label: label});\\n    }\\n  }\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 650,
        "y": 2340,
        "wires": [
            [
                "6177aba7.37bdd4"
            ]
        ]
    },
    {
        "id": "464984df.dfa01c",
        "type": "link out",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "fb095340.e8d7b",
            "66e48243.8f1fac",
            "5bea03c.a4f13fc"
        ],
        "x": 275,
        "y": 2580,
        "wires": []
    },
    {
        "id": "fb095340.e8d7b",
        "type": "link in",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "464984df.dfa01c"
        ],
        "x": 355,
        "y": 2260,
        "wires": [
            [
                "a81d7c67.9083f"
            ]
        ]
    },
    {
        "id": "ce9069fc.4c1778",
        "type": "link out",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "aa9eae3f.e0f0b"
        ],
        "x": 735,
        "y": 2260,
        "wires": []
    },
    {
        "id": "aa9eae3f.e0f0b",
        "type": "link in",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "ce9069fc.4c1778",
            "18a5c644.add2ba",
            "6177aba7.37bdd4"
        ],
        "x": 915,
        "y": 2260,
        "wires": [
            [
                "e209d807.c71bb8"
            ]
        ]
    },
    {
        "id": "18a5c644.add2ba",
        "type": "link out",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "aa9eae3f.e0f0b"
        ],
        "x": 735,
        "y": 2300,
        "wires": []
    },
    {
        "id": "6177aba7.37bdd4",
        "type": "link out",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "aa9eae3f.e0f0b"
        ],
        "x": 775,
        "y": 2340,
        "wires": []
    },
    {
        "id": "c9e7e44e.071758",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "design name",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "assets",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 2300,
        "wires": [
            [
                "a68825a2.22d138"
            ]
        ]
    },
    {
        "id": "66e48243.8f1fac",
        "type": "link in",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "464984df.dfa01c"
        ],
        "x": 355,
        "y": 2300,
        "wires": [
            [
                "c9e7e44e.071758"
            ]
        ]
    },
    {
        "id": "7e8f79a3.9a00e8",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "design name",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sublocations",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 470,
        "y": 2340,
        "wires": [
            [
                "1765d9ec.ddbaa6"
            ]
        ]
    },
    {
        "id": "5bea03c.a4f13fc",
        "type": "link in",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "464984df.dfa01c"
        ],
        "x": 355,
        "y": 2340,
        "wires": [
            [
                "7e8f79a3.9a00e8"
            ]
        ]
    },
    {
        "id": "ee73cc6a.895ec",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Overwrites sublocation",
        "func": "let selectedAsset = msg.original.breedingNurserySetupRackId\nlet selectedSublocation = msg.original.sublocation\nlet assets = msg.payload.assets\n\nif (!assets[selectedAsset]) {\n    msg.error = true\n    msg.errMsg = 'Asset not found: ' + selectedAsset\n    return msg;\n}\n\nlet sublocation = assets[selectedAsset].sublocation\nif (sublocation && sublocation !== selectedSublocation) {\n    msg.error = true\n    msg.errMsg = 'Rack already in sublocation: ' + sublocation\n    return msg;\n}\n\nassets[selectedAsset].sublocation = selectedSublocation\nmsg.payload.assets = assets\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 3840,
        "y": 1960,
        "wires": [
            [
                "1af622a7.7da88d"
            ]
        ]
    },
    {
        "id": "6cfa36ed.7af578",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Clear sublocation if required",
        "func": "let asset = msg.original.breedingNurserySetupRackId\nlet setupDateIds = msg.payload.assets[asset].setupDateIds || {}\n\nif (Object.keys(setupDateIds).length === 0) {\n    delete msg.payload.assets[asset].sublocation\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2720,
        "y": 2260,
        "wires": [
            [
                "a2e6d328.bb94b"
            ]
        ]
    },
    {
        "id": "334a319.7cb62ce",
        "type": "http in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "url": "api/:tenant/forms/blueprint",
        "method": "delete",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 1100,
        "wires": [
            [
                "94ac512.8952eb"
            ]
        ]
    },
    {
        "id": "82b76832.d29158",
        "type": "comment",
        "z": "d40b49bf.5e3218",
        "name": "Delete forms blueprint",
        "info": "",
        "x": 200,
        "y": 1060,
        "wires": []
    },
    {
        "id": "94ac512.8952eb",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "checks required fields",
        "func": "msg.original = msg.req.query;\nmsg.isValidFields = true;\n\nif (!msg.req.query.type) {\n    msg.isValidFields = false;\n}\nif (!msg.req.query.workstationForm) {\n    msg.isValidFields = false;\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 1160,
        "wires": [
            [
                "7842d19.ec0753"
            ]
        ]
    },
    {
        "id": "7842d19.ec0753",
        "type": "switch",
        "z": "d40b49bf.5e3218",
        "name": "isValidFields",
        "property": "isValidFields",
        "propertyType": "msg",
        "rules": [
            {
                "t": "false"
            },
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 1220,
        "wires": [
            [
                "201c038a.cf6afc"
            ],
            [
                "18ee3a2d.28bc46"
            ]
        ]
    },
    {
        "id": "18ee3a2d.28bc46",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "prepare query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"blueprint\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"productionLine\": msg.original.productionLine,\n//         \"workstationForm\": msg.original.workstationForm\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nlet query = {}\nquery[\"key\"]=[msg.req.params.tenant, msg.original.type, msg.original.workstationForm]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 1280,
        "wires": [
            [
                "4cc32ea8.05a91"
            ]
        ]
    },
    {
        "id": "4cc32ea8.05a91",
        "type": "cloudantplus in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "blueprint",
        "index": "blueprint",
        "x": 170,
        "y": 1340,
        "wires": [
            [
                "9f3f9b96.860a98"
            ]
        ]
    },
    {
        "id": "9f3f9b96.860a98",
        "type": "switch",
        "z": "d40b49bf.5e3218",
        "name": "hasResults",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 230,
        "y": 1400,
        "wires": [
            [
                "bd45bd5d.96a3d"
            ],
            [
                "d7c48d18.2c8f1"
            ],
            [
                "98040698.59b0e8"
            ]
        ]
    },
    {
        "id": "98040698.59b0e8",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Blueprint not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 190,
        "y": 1460,
        "wires": [
            [
                "c3c28f8a.2e5fd"
            ]
        ]
    },
    {
        "id": "c3c28f8a.2e5fd",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 240,
        "y": 1520,
        "wires": []
    },
    {
        "id": "d7c48d18.2c8f1",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Multiple blueprints found!\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1580,
        "wires": [
            [
                "5410823.88bff7c"
            ]
        ]
    },
    {
        "id": "5410823.88bff7c",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "500",
        "headers": {},
        "x": 540,
        "y": 1640,
        "wires": []
    },
    {
        "id": "e1aaba66.7d0178",
        "type": "cloudantplus out",
        "z": "d40b49bf.5e3218",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": false,
        "operation": "delete",
        "x": 450,
        "y": 1460,
        "wires": [
            [
                "3e7c9362.53d8bc"
            ]
        ]
    },
    {
        "id": "201c038a.cf6afc",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "generate error message",
        "func": "msg.payload = {\n    \"message\": \"Required fields - type, workstationForm\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 490,
        "y": 1220,
        "wires": [
            [
                "33f043e5.59456c"
            ]
        ]
    },
    {
        "id": "33f043e5.59456c",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 540,
        "y": 1280,
        "wires": []
    },
    {
        "id": "bd45bd5d.96a3d",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "prepare id",
        "func": "msg.payload = msg.payload[0].value;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 1400,
        "wires": [
            [
                "e1aaba66.7d0178"
            ]
        ]
    },
    {
        "id": "3e7c9362.53d8bc",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 520,
        "y": 1520,
        "wires": []
    },
    {
        "id": "89b89fbe.f677f",
        "type": "subflow:38f352b4.42155e",
        "z": "d40b49bf.5e3218",
        "name": "",
        "env": [],
        "x": 200,
        "y": 540,
        "wires": [
            [
                "3836edd.ed74612"
            ],
            [
                "1f18d344.f721cd"
            ]
        ]
    },
    {
        "id": "5a269fac.dbcc6",
        "type": "comment",
        "z": "d40b49bf.5e3218",
        "name": "Create forms blueprint",
        "info": "",
        "x": 240,
        "y": 460,
        "wires": []
    },
    {
        "id": "fcc0b6cd.08f218",
        "type": "http in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "url": "api/:tenant/forms/blueprint",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 500,
        "wires": [
            [
                "89b89fbe.f677f"
            ]
        ]
    },
    {
        "id": "618a4bdc.bcb424",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "setMetadata",
        "func": "let payload = msg.payload[0].value;\n\nvar updateCount = payload.updateCount;\npayload.updatedOn = new Date();\npayload.updateCount = updateCount +1;\n\nmsg.payload = payload;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 860,
        "wires": [
            [
                "4e9ed761.36fb58"
            ]
        ]
    },
    {
        "id": "5bb3578e.9814e8",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 580,
        "y": 1020,
        "wires": []
    },
    {
        "id": "10d70656.cb370a",
        "type": "cloudantplus out",
        "z": "d40b49bf.5e3218",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 570,
        "y": 980,
        "wires": [
            [
                "5bb3578e.9814e8"
            ]
        ]
    },
    {
        "id": "3391a9b6.4bed16",
        "type": "http in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "url": "api/:tenant/forms/blueprint",
        "method": "put",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 860,
        "wires": [
            [
                "cb6b9f6f.28255"
            ]
        ]
    },
    {
        "id": "6b489d73.9a04f4",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Blueprint not found.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 230,
        "y": 940,
        "wires": [
            [
                "6b3bebd.ce98514"
            ]
        ]
    },
    {
        "id": "6b3bebd.ce98514",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 280,
        "y": 980,
        "wires": []
    },
    {
        "id": "3836edd.ed74612",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "Generate error message",
        "func": "msg.payload = {\n    \"message\": \"Blueprint already exist, use PUT to update instead.\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 530,
        "y": 520,
        "wires": [
            [
                "70d19cec.51ca84"
            ]
        ]
    },
    {
        "id": "70d19cec.51ca84",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 740,
        "y": 520,
        "wires": []
    },
    {
        "id": "98a92283.9af74",
        "type": "comment",
        "z": "d40b49bf.5e3218",
        "name": "Update forms blueprint",
        "info": "",
        "x": 240,
        "y": 820,
        "wires": []
    },
    {
        "id": "4e9ed761.36fb58",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "setRedirectConfig",
        "func": "delete msg.payload.redirectStrategy\ndelete msg.payload.redirectPath\n\nif (msg.original.redirectStrategy) {\n    msg.payload.redirectStrategy = msg.original.redirectStrategy\n}\nif (msg.original.redirectPath) {\n    msg.payload.redirectPath = msg.original.redirectPath\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 550,
        "y": 900,
        "wires": [
            [
                "4aa2f7a3.21de98"
            ]
        ]
    },
    {
        "id": "4aa2f7a3.21de98",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "setTemplate",
        "func": "delete msg.payload.template\n\nmsg.payload.template = msg.original.template\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 570,
        "y": 940,
        "wires": [
            [
                "10d70656.cb370a"
            ]
        ]
    },
    {
        "id": "ed8a81ab.92f78",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "setMetadata",
        "func": "msg.payload = {};\nmsg.payload.docType = \"blueprint\";\nmsg.payload.tenant = msg.req.params.tenant;\n\n// change request\n// rename productionLine to type\nmsg.payload.type = msg.original.type\nmsg.payload.productionLine = msg.payload.type\n\nmsg.payload.workstationForm = msg.original.workstationForm;\nmsg.payload.createdOn = new Date();\nmsg.payload.updatedOn = new Date();\nmsg.payload.updateCount = 1;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 210,
        "y": 640,
        "wires": [
            [
                "fc032f68.aa4b8"
            ]
        ]
    },
    {
        "id": "45206358.8494ac",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 960,
        "y": 640,
        "wires": []
    },
    {
        "id": "d704f4c.a883908",
        "type": "cloudantplus out",
        "z": "d40b49bf.5e3218",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 790,
        "y": 640,
        "wires": [
            [
                "45206358.8494ac"
            ]
        ]
    },
    {
        "id": "fc032f68.aa4b8",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "setRedirectConfig",
        "func": "if (msg.original.redirectStrategy) {\n    msg.payload.redirectStrategy = msg.original.redirectStrategy\n}\nif (msg.original.redirectPath) {\n    msg.payload.redirectPath = msg.original.redirectPath\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 410,
        "y": 640,
        "wires": [
            [
                "b0e48a83.7e3fb8"
            ]
        ]
    },
    {
        "id": "b0e48a83.7e3fb8",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "setTemplate",
        "func": "if (msg.original.templateType) {\n    msg.payload.templateType = msg.original.templateType\n}\n\nmsg.payload.template = msg.original.template\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 610,
        "y": 640,
        "wires": [
            [
                "d704f4c.a883908"
            ]
        ]
    },
    {
        "id": "cb6b9f6f.28255",
        "type": "subflow:38f352b4.42155e",
        "z": "d40b49bf.5e3218",
        "name": "",
        "env": [],
        "x": 200,
        "y": 900,
        "wires": [
            [
                "618a4bdc.bcb424"
            ],
            [
                "6b489d73.9a04f4"
            ]
        ]
    },
    {
        "id": "9b2c133c.bd298",
        "type": "http in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "url": "api/:tenant/blueprint/:line/:form",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "64a8ffaa.c7fb2"
            ]
        ]
    },
    {
        "id": "1d2b5119.50afef",
        "type": "comment",
        "z": "d40b49bf.5e3218",
        "name": "return blueprint's template and i18n",
        "info": "",
        "x": 200,
        "y": 40,
        "wires": []
    },
    {
        "id": "ac95a455.78b538",
        "type": "cloudantplus in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "blueprint",
        "index": "blueprint",
        "x": 630,
        "y": 80,
        "wires": [
            [
                "6a22e944.d58a88"
            ]
        ]
    },
    {
        "id": "64a8ffaa.c7fb2",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "query",
        "func": "let query = {\n    \"selector\": {\n        \"tenant\": msg.req.params.tenant,\n        \"productionLine\": msg.req.params.line,\n        \"workstationForm\": msg.req.params.form,\n        \"$or\":[\n            {\"docType\": \"language\"},\n            {\"docType\": \"blueprint\"}\n            ]\n    },\n    \"fields\": [],\n    \"sort\": [],\n    \"skip\": 0,\n    \"execution_stats\": true\n}\n// let query = {}\n// query[\"key\"] = [ msg.req.params.tenant, msg.req.params.line, msg.req.params.form]\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 470,
        "y": 80,
        "wires": [
            [
                "ac95a455.78b538"
            ]
        ]
    },
    {
        "id": "6a22e944.d58a88",
        "type": "switch",
        "z": "d40b49bf.5e3218",
        "name": "countResults",
        "property": "payload.execution_stats.results_returned",
        "propertyType": "msg",
        "rules": [
            {
                "t": "gt",
                "v": "0",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 810,
        "y": 80,
        "wires": [
            [
                "f617a017.9bb9d"
            ],
            [
                "e685db56.19db38"
            ]
        ]
    },
    {
        "id": "27a72453.32c49c",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1120,
        "y": 100,
        "wires": []
    },
    {
        "id": "e685db56.19db38",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "error",
        "func": "msg.payload = {\n    \"message\": \"No such blueprint found\"\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 100,
        "wires": [
            [
                "27a72453.32c49c"
            ]
        ]
    },
    {
        "id": "80d5ca84.6dd488",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "set msg.template.formVersion",
        "func": "let updateCount = 1;\nlet formVersionDate = new Date(msg.template.updatedOn);\n\nif (msg.template.updateCount) updateCount = msg.template.updateCount;\nformVersion =\n    formVersionDate.getFullYear().toString().substring(2, 4) +\n    (\"0\" + (formVersionDate.getMonth() + 1).toString()).slice(-2) +\n    (\"0\" + formVersionDate.getDate().toString()).slice(-2) +\n    \"-\" +\n    (\"0\" + updateCount.toString()).slice(-2);\n\nmsg.template.formVersion = formVersion\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 200,
        "wires": [
            [
                "7d991748.8df078"
            ]
        ]
    },
    {
        "id": "cbc0895b.559678",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 380,
        "y": 300,
        "wires": []
    },
    {
        "id": "7d991748.8df078",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "set msg.template.languages",
        "func": "msg.template.languages = []\n\nfor (let doc of msg.payload.docs) {\n    if (doc.docType !== \"language\") continue\n    \n    msg.template.languages.push(doc)\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1000,
        "y": 200,
        "wires": [
            [
                "a73f2caf.55bb5"
            ]
        ]
    },
    {
        "id": "f277128c.ac121",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "set msg.template",
        "func": "for (let doc of msg.payload.docs) {\n    if (doc.docType !== 'blueprint') continue\n    \n    msg.template = doc\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 450,
        "y": 200,
        "wires": [
            [
                "80d5ca84.6dd488"
            ]
        ]
    },
    {
        "id": "c6ddc53f.5484a8",
        "type": "change",
        "z": "d40b49bf.5e3218",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "template",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 200,
        "y": 300,
        "wires": [
            [
                "cbc0895b.559678"
            ]
        ]
    },
    {
        "id": "f181ad0e.b19ad",
        "type": "comment",
        "z": "d40b49bf.5e3218",
        "name": "returns available blueprints",
        "info": "",
        "x": 190,
        "y": 1720,
        "wires": []
    },
    {
        "id": "1f18d344.f721cd",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "checks for field errors",
        "func": "let allowedTemplateTypes = ['device']\nlet errors = []\n\nlet templateType = msg.original.templateType\nlet hasFieldTemplateType = templateType ? true : false\nlet allowedTemplateType = allowedTemplateTypes.includes(templateType)\nif (hasFieldTemplateType && !allowedTemplateType) {\n    errors.push('Given template type not supported: ' + templateType)\n}\n\nmsg.errors = errors\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 520,
        "y": 580,
        "wires": [
            [
                "c49f3b66.93ccc8"
            ]
        ]
    },
    {
        "id": "c49f3b66.93ccc8",
        "type": "switch",
        "z": "d40b49bf.5e3218",
        "name": "",
        "property": "errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 710,
        "y": 580,
        "wires": [
            [
                "61b0d714.1de548"
            ],
            [
                "a627b2d1.d227b"
            ]
        ]
    },
    {
        "id": "61b0d714.1de548",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "generate error messages",
        "func": "msg.payload = {\n    message: msg.errors[0]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 910,
        "y": 560,
        "wires": [
            [
                "54beb02.533e35"
            ]
        ]
    },
    {
        "id": "54beb02.533e35",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 1120,
        "y": 560,
        "wires": []
    },
    {
        "id": "a627b2d1.d227b",
        "type": "link out",
        "z": "d40b49bf.5e3218",
        "name": "from Create blueprint endpoint",
        "links": [
            "5f256f81.f9be1"
        ],
        "x": 815,
        "y": 600,
        "wires": []
    },
    {
        "id": "5f256f81.f9be1",
        "type": "link in",
        "z": "d40b49bf.5e3218",
        "name": "to Create blueprint",
        "links": [
            "a627b2d1.d227b"
        ],
        "x": 75,
        "y": 640,
        "wires": [
            [
                "ed8a81ab.92f78"
            ]
        ]
    },
    {
        "id": "f617a017.9bb9d",
        "type": "link out",
        "z": "d40b49bf.5e3218",
        "name": "",
        "links": [
            "6c82eb65.cf8744"
        ],
        "x": 935,
        "y": 60,
        "wires": []
    },
    {
        "id": "6c82eb65.cf8744",
        "type": "link in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "links": [
            "f617a017.9bb9d"
        ],
        "x": 75,
        "y": 200,
        "wires": [
            [
                "96aeaefa.caafc"
            ]
        ]
    },
    {
        "id": "a17bed69.cc8ed",
        "type": "link in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "links": [
            "777a946e.7eeb9c",
            "a73f2caf.55bb5"
        ],
        "x": 75,
        "y": 300,
        "wires": [
            [
                "c6ddc53f.5484a8"
            ]
        ]
    },
    {
        "id": "a73f2caf.55bb5",
        "type": "link out",
        "z": "d40b49bf.5e3218",
        "name": "",
        "links": [
            "323b558d.27018a",
            "a17bed69.cc8ed"
        ],
        "x": 1175,
        "y": 200,
        "wires": []
    },
    {
        "id": "96aeaefa.caafc",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "",
        "func": "const array = msg.payload.docs;\n\nfor (let i = 0; i < array.length; i++) {\n  if (!array[i].type) {\n    // if !type then type = productionLine value\n    array[i].type = array[i].productionLine;\n  }\n\n  // remove productionLine from array\n  delete array[i].productionLine;\n}\n\n// assign array to msg.payload.docs\nmsg.payload.docs = array;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 220,
        "y": 200,
        "wires": [
            [
                "f277128c.ac121"
            ]
        ]
    },
    {
        "id": "c24182b5.9a493",
        "type": "debug",
        "z": "dc8c4370.78e2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1010,
        "y": 2460,
        "wires": []
    },
    {
        "id": "e1f0b2d2.681d5",
        "type": "dnsquery",
        "z": "48df00a1.c6d5a",
        "name": "",
        "domain_nameType": "str",
        "domain_name": "https://johor.insects.network/",
        "record_typeType": "rectype",
        "record_type": "ANY",
        "dns_ip": "",
        "x": 350,
        "y": 820,
        "wires": [
            [
                "3e20d4b7.619bac"
            ]
        ]
    },
    {
        "id": "91755a12.a4d208",
        "type": "inject",
        "z": "48df00a1.c6d5a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 820,
        "wires": [
            [
                "e1f0b2d2.681d5"
            ]
        ]
    },
    {
        "id": "3e20d4b7.619bac",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "logs",
        "func": "let flowKey = 'logs'\nlet flowValue = flow.get(flowKey) || []\nlet timestamp = new Date()\nlet payload = msg || {}\n\npayload.reported = timestamp\n\nif (flowValue.length > 3) flowValue.shift()\nelse flowValue.push(payload)\n\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "d43bc4b2.597f98",
        "type": "catch",
        "z": "48df00a1.c6d5a",
        "name": "",
        "scope": [
            "e1f0b2d2.681d5"
        ],
        "uncaught": false,
        "x": 350,
        "y": 860,
        "wires": [
            [
                "c2062ea1.37de9"
            ]
        ]
    },
    {
        "id": "46415159.6e277",
        "type": "status",
        "z": "48df00a1.c6d5a",
        "name": "",
        "scope": [
            "e1f0b2d2.681d5"
        ],
        "x": 360,
        "y": 900,
        "wires": [
            [
                "f0ad84e9.e4c478"
            ]
        ]
    },
    {
        "id": "c2062ea1.37de9",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "errors",
        "func": "let flowKey = 'errors'\nlet flowValue = flow.get(flowKey) || []\nlet timestamp = new Date()\nlet payload = msg || {}\n\npayload.reported = timestamp\n\nif (flowValue.length > 3) flowValue.shift()\nelse flowValue.push(payload)\n\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 860,
        "wires": [
            []
        ]
    },
    {
        "id": "f0ad84e9.e4c478",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "status",
        "func": "let flowKey = 'status'\nlet flowValue = flow.get(flowKey) || []\nlet timestamp = new Date()\nlet payload = msg || {}\n\npayload.reported = timestamp\n\nif (flowValue.length > 3) flowValue.shift()\nelse flowValue.push(payload)\n\nflow.set(flowKey, flowValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 510,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "dd3ba496.457f28",
        "type": "switch",
        "z": "d40b49bf.5e3218",
        "name": "",
        "property": "req.query.templateType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 390,
        "y": 1760,
        "wires": [
            [
                "dd73e43c.265698"
            ],
            [
                "ad1cfcf4.1dfaf"
            ]
        ]
    },
    {
        "id": "dd73e43c.265698",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "prepare query",
        "func": "let tenant = msg.req.params.tenant\n\nmsg.payload = {\n    key: tenant\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 1740,
        "wires": [
            [
                "90607783.6a8f28"
            ]
        ]
    },
    {
        "id": "ad1cfcf4.1dfaf",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "prepare query",
        "func": "let tenant = msg.req.params.tenant\nlet templateType = msg.req.query.templateType\n\nmsg.payload = {\n    key: [tenant, templateType]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 560,
        "y": 1780,
        "wires": [
            [
                "5a17c96b.d516f8"
            ]
        ]
    },
    {
        "id": "32f3cdc6.06a692",
        "type": "http in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "url": "api/:tenant/forms/navigation",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 170,
        "y": 1760,
        "wires": [
            [
                "dd3ba496.457f28"
            ]
        ]
    },
    {
        "id": "90607783.6a8f28",
        "type": "cloudantplus in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "blueprint",
        "index": "byTenantAndTemplateTypeEmpty",
        "x": 750,
        "y": 1740,
        "wires": [
            [
                "875991f.1b7a37"
            ]
        ]
    },
    {
        "id": "5a17c96b.d516f8",
        "type": "cloudantplus in",
        "z": "d40b49bf.5e3218",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "blueprint",
        "index": "byTenantAndTemplateType",
        "x": 750,
        "y": 1780,
        "wires": [
            [
                "875991f.1b7a37"
            ]
        ]
    },
    {
        "id": "875991f.1b7a37",
        "type": "function",
        "z": "d40b49bf.5e3218",
        "name": "structure return data",
        "func": "let data = []\n\nfor (var i = 0; i < msg.payload.length; i++) {\n    let doc = msg.payload[i].value;\n    \n    let updateCount = 1;\n    if(doc.updateCount){\n        updateCount = doc.updateCount;\n    }\n    let formVersionDate = new Date(doc.updatedOn);\n    formVersion = formVersionDate.getFullYear().toString().substring(2,4)+\n    (\"0\"+(formVersionDate.getMonth() +1).toString()).slice(-2)+\n    (\"0\"+formVersionDate.getDate().toString()).slice(-2)+ \"-\"+ (\"0\"+updateCount.toString()).slice(-2);\n    \n    data.push({\n        line: doc.productionLine,\n        form: doc.workstationForm,\n        form_version: formVersion\n    });\n}\ndata.sort((a, b) => {\n            let nameA = a.form, nameB = b.form\n            if (nameA < nameB) return -1\n            if (nameA > nameB) return 1\n            return 0});\n\nmsg.payload = data;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 960,
        "y": 1760,
        "wires": [
            [
                "e15bfb66.91a848"
            ]
        ]
    },
    {
        "id": "e15bfb66.91a848",
        "type": "http response",
        "z": "d40b49bf.5e3218",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1160,
        "y": 1760,
        "wires": []
    },
    {
        "id": "2d7fecec.9266d4",
        "type": "comment",
        "z": "48df00a1.c6d5a",
        "name": "For testing DNS Lookup",
        "info": "",
        "x": 380,
        "y": 780,
        "wires": []
    },
    {
        "id": "e97f900d.81e46",
        "type": "cloudantplus in",
        "z": "62db209b.27bfb",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "device",
        "index": "status",
        "x": 370,
        "y": 120,
        "wires": [
            [
                "4fa0810e.3bba2"
            ]
        ]
    },
    {
        "id": "711d17f3.984648",
        "type": "inject",
        "z": "62db209b.27bfb",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "{\"selector\":{\"docType\":\"deviceStatus\"}}",
        "payloadType": "json",
        "x": 210,
        "y": 80,
        "wires": [
            [
                "e97f900d.81e46"
            ]
        ]
    },
    {
        "id": "3249af76.35198",
        "type": "function",
        "z": "62db209b.27bfb",
        "name": "",
        "func": "let payload = {}\n\n// payload['_id'] = 'deviceStatus'\npayload['docType'] = 'deviceStatus'\npayload['devices'] = {}\n\nmsg.payload = payload\nmsg.previousPayload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 100,
        "wires": [
            [
                "bcd9ded3.b07"
            ]
        ]
    },
    {
        "id": "82c70423.434998",
        "type": "function",
        "z": "62db209b.27bfb",
        "name": "",
        "func": "let payload = {\"selector\":{\"docType\":\"deviceStatus\"}}\n\nmsg.topic = \"deviceStatus\"\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 120,
        "wires": [
            [
                "e97f900d.81e46"
            ]
        ]
    },
    {
        "id": "1eb42a1d.8075b6",
        "type": "function",
        "z": "62db209b.27bfb",
        "name": "",
        "func": "let payload = msg.payload.docs[0]\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 140,
        "wires": [
            [
                "c8189160.32103"
            ]
        ]
    },
    {
        "id": "4fa0810e.3bba2",
        "type": "switch",
        "z": "62db209b.27bfb",
        "name": "",
        "property": "payload.docs",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 530,
        "y": 120,
        "wires": [
            [
                "3249af76.35198"
            ],
            [
                "1eb42a1d.8075b6"
            ]
        ]
    },
    {
        "id": "bcd9ded3.b07",
        "type": "cloudantplus out",
        "z": "62db209b.27bfb",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 850,
        "y": 80,
        "wires": [
            [
                "cefa8d7e.4e353"
            ]
        ]
    },
    {
        "id": "cefa8d7e.4e353",
        "type": "function",
        "z": "62db209b.27bfb",
        "name": "",
        "func": "let payload = msg.payload\n\nObject.assign(payload, msg.previousPayload)\n\nmsg.payload = payload\nmsg.previousPayload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1020,
        "y": 80,
        "wires": [
            [
                "69903080.20115"
            ]
        ]
    },
    {
        "id": "c8189160.32103",
        "type": "link out",
        "z": "62db209b.27bfb",
        "name": "",
        "links": [
            "b2cb4762.0f00d8"
        ],
        "x": 835,
        "y": 140,
        "wires": []
    },
    {
        "id": "b2cb4762.0f00d8",
        "type": "link in",
        "z": "62db209b.27bfb",
        "name": "",
        "links": [
            "c8189160.32103",
            "69903080.20115"
        ],
        "x": 935,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "69903080.20115",
        "type": "link out",
        "z": "62db209b.27bfb",
        "name": "",
        "links": [
            "b2cb4762.0f00d8"
        ],
        "x": 1135,
        "y": 80,
        "wires": []
    },
    {
        "id": "cccb0974.27bcb8",
        "type": "inject",
        "z": "bff03945.7ec978",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "test",
        "payload": "{\"deviceId\":\"C06426B267AC\",\"deviceTimestamp\":\"2021-02-15T05:13:55.812Z\"}",
        "payloadType": "json",
        "x": 190,
        "y": 80,
        "wires": [
            [
                "cc472cd5.bf9db"
            ]
        ]
    },
    {
        "id": "cc472cd5.bf9db",
        "type": "function",
        "z": "bff03945.7ec978",
        "name": "",
        "func": "let requiredFields = [\n    'deviceId',\n    'deviceTimestamp'\n]\nlet errors = []\n\nfor (let field of requiredFields) {\n    if (msg.payload && msg.payload[field]) {\n    } else {\n        errors.push('Required: ' + field)\n    }\n}\n\nmsg.errors = errors\nmsg.device = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 340,
        "y": 120,
        "wires": [
            [
                "aaf0084f.02daa8"
            ]
        ]
    },
    {
        "id": "aaf0084f.02daa8",
        "type": "switch",
        "z": "bff03945.7ec978",
        "name": "",
        "property": "errors",
        "propertyType": "msg",
        "rules": [
            {
                "t": "empty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 490,
        "y": 120,
        "wires": [
            [
                "ac189c8a.62846"
            ],
            [
                "99b704b7.73d388"
            ]
        ]
    },
    {
        "id": "67a04fc5.b02ae",
        "type": "function",
        "z": "bff03945.7ec978",
        "name": "original function",
        "func": "let payload = msg.payload\nlet device = msg.device\nlet now = new Date().toISOString()\n\npayload._rev = msg.payload.rev\npayload.devices[device.deviceId] = device\npayload.devices[device.deviceId]['timestamp'] = now\n\nif(payload.devices[device.deviceId]['alertSent']) {\n    delete payload.devices[device.deviceId]['alertSent']\n}\n\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 820,
        "y": 40,
        "wires": [
            []
        ]
    },
    {
        "id": "c3c445b6.191f28",
        "type": "cloudantplus out",
        "z": "bff03945.7ec978",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1050,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "99b704b7.73d388",
        "type": "function",
        "z": "bff03945.7ec978",
        "name": "error",
        "func": "msg.payload = {message: msg.errors[0]}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 690,
        "y": 160,
        "wires": [
            []
        ]
    },
    {
        "id": "ac189c8a.62846",
        "type": "subflow:62db209b.27bfb",
        "z": "bff03945.7ec978",
        "name": "",
        "env": [],
        "x": 670,
        "y": 100,
        "wires": [
            [
                "e59cc1aa.37557"
            ]
        ]
    },
    {
        "id": "e59cc1aa.37557",
        "type": "function",
        "z": "bff03945.7ec978",
        "name": "",
        "func": "let payload = msg.payload\nlet device = msg.device\nlet now = new Date().toISOString()\n\npayload._id = msg.payload._id\npayload._rev = msg.payload._rev\n\ndelete payload.id;\ndelete payload.rev;\n\npayload.devices[device.deviceId] = device\npayload.devices[device.deviceId]['timestamp'] = now\n\nif(payload.devices[device.deviceId]['alertSent']) {\n    delete payload.devices[device.deviceId]['alertSent']\n}\n\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 840,
        "y": 100,
        "wires": [
            [
                "c3c445b6.191f28"
            ]
        ]
    },
    {
        "id": "47223dfa.eb6444",
        "type": "subflow:bff03945.7ec978",
        "z": "48df00a1.c6d5a",
        "name": "",
        "env": [],
        "x": 510,
        "y": 540,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "5a45847d.b1f50c",
        "type": "cloudantplus in",
        "z": "456baf04.102bc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "docsCount",
        "index": "by-timestamp",
        "x": 370,
        "y": 80,
        "wires": [
            [
                "f824e788.23fbc8"
            ]
        ]
    },
    {
        "id": "553daba2.0ce2e4",
        "type": "function",
        "z": "456baf04.102bc",
        "name": "",
        "func": "let startkey = [msg.docsCountQuery.startDate]\nlet endkey = [msg.docsCountQuery.endDate]\n\nmsg.original = msg.payload\nmsg.payload = {startkey, endkey}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "5a45847d.b1f50c"
            ]
        ]
    },
    {
        "id": "f824e788.23fbc8",
        "type": "function",
        "z": "456baf04.102bc",
        "name": "",
        "func": "if (msg.payload.length > 0) {\n    let docsCount = msg.payload[0].value\n    msg.payload = docsCount > 25 ? docsCount : 25\n} else {\n    msg.payload = 25\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 540,
        "y": 80,
        "wires": [
            [
                "a46c7c4.964198"
            ]
        ]
    },
    {
        "id": "a46c7c4.964198",
        "type": "function",
        "z": "456baf04.102bc",
        "name": "",
        "func": "msg.original.limit = msg.payload\nmsg.payload = msg.original\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 700,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4824d782.6b6748",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "docsCount prepareQuery",
        "func": "msg.docsCountQuery = {}\nmsg.docsCountQuery.startDate = msg.payload.selector.timestamp.$gte\nmsg.docsCountQuery.endDate = msg.payload.selector.timestamp.$lt\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 710,
        "y": 3600,
        "wires": [
            [
                "c75e5d16.ce546"
            ]
        ]
    },
    {
        "id": "c75e5d16.ce546",
        "type": "subflow:456baf04.102bc",
        "z": "161e8c5f.9e3554",
        "name": "",
        "env": [],
        "x": 1020,
        "y": 3600,
        "wires": [
            [
                "6400243c.ec69ec"
            ]
        ]
    },
    {
        "id": "fe989223.c886",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "design name",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "docsCount",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 620,
        "wires": [
            [
                "b3922666.80d258"
            ]
        ]
    },
    {
        "id": "b3922666.80d258",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "docsCount",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/docsCount\",\n  \"_rev\": \"5-ecd21a8c60c8923806f0e245719c3e19\",\n  \"views\": {\n    \"by-timestamp\": {\n      \"reduce\": \"_count\",\n      \"map\": \"function (doc) {\\n  if (doc.timestamp) emit([doc.timestamp], 1);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 690,
        "y": 620,
        "wires": [
            [
                "4c121558.b7941c"
            ]
        ]
    },
    {
        "id": "5381903d.c2841",
        "type": "link in",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "8c3b62f.97b56a"
        ],
        "x": 415,
        "y": 620,
        "wires": [
            [
                "fe989223.c886"
            ]
        ]
    },
    {
        "id": "4c121558.b7941c",
        "type": "link out",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "ff421a24.9f49c8"
        ],
        "x": 795,
        "y": 620,
        "wires": []
    },
    {
        "id": "8c3b62f.97b56a",
        "type": "link out",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "5381903d.c2841"
        ],
        "x": 355,
        "y": 640,
        "wires": []
    },
    {
        "id": "ff421a24.9f49c8",
        "type": "link in",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "4c121558.b7941c"
        ],
        "x": 855,
        "y": 140,
        "wires": [
            [
                "8c046fdd.d7d2e"
            ]
        ]
    },
    {
        "id": "38fa4ea7.4251e2",
        "type": "http request",
        "z": "387e7e3e.c99972",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{endpoint}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 690,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "6e4a1171.dbf84",
        "type": "link in",
        "z": "387e7e3e.c99972",
        "name": "To Slack Webhook",
        "links": [
            "6f627446.5dbdec",
            "81f34411.b1bd38"
        ],
        "x": 35,
        "y": 40,
        "wires": [
            [
                "2678d696.56d17a"
            ]
        ]
    },
    {
        "id": "28c54a9.75b41b6",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "makeSlackJsonMarkdown",
        "func": "\nlet stringArr = []\nlet metadata = msg.metadataKeyList || [];\nif(Array.isArray(msg.untouched)){\n    for(let row of msg.untouched){\n        for(let key in row){\n            if(key!=\"_id\" && key!=\"_rev\" && !metadata.includes(key)){\n                let data = key +\"\\t: \" + row[key]\n            \n                // if(key.includes(\"timestamp\") || key.includes(\"date\")){\n                //     data = key +\"\\t: \" + new Date(row[key])\n                // }\n               \n                stringArr.push(data);\n            }\n            \n        }\n        stringArr.push(\"\\n\")\n    }\n}\nelse{\n    for(let key in msg.untouched){\n        if(key!=\"_id\" && key!=\"_rev\" && !metadata.includes(key) ){\n            let data = key +\"\\t: \" + msg.untouched[key]\n        \n            // if(key.includes(\"timestamp\") || key.includes(\"date\")){\n            //     data = key +\"\\t: \" + new Date(msg.untouched[key])\n            // }\n           \n            stringArr.push(data);\n        }\n        \n    }\n}\n\nlet output = stringArr.join(\"\\n\");\nmsg.payload={\n    \"text\": \"*\"+msg.token.name +\" submitted \" +msg.req.params.line+\"-\"+msg.req.params.form+\"*\",\n    \"blocks\": [\n    \t{\n    \t\t\"type\": \"section\",\n    \t\t\"text\": {\n    \t\t\t\"type\": \"mrkdwn\",\n    \t\t\t\"text\": \"*\"+msg.token.name +\" submitted \"+msg.req.params.line+\"-\"+msg.req.params.form+\"*\"\n    \t\t}\n    \t},\n    \t{\n    \t\t\"type\": \"section\",\n    \t\t\"text\": {\n    \t\t\t\"type\": \"mrkdwn\",\n    \t\t\t\"text\": output\n    \t\t}\n    \t}\n    ]\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 370,
        "y": 360,
        "wires": [
            [
                "38fa4ea7.4251e2"
            ]
        ]
    },
    {
        "id": "2678d696.56d17a",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "",
        "func": "msg.workstationForm = msg.req.params.form;\nmsg.productionLine = msg.req.params.line;\nmsg.tenant = msg.req.params.tenant;\nmsg.endpoint =env.get(\"INSECT_SLACK\");\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 180,
        "y": 40,
        "wires": [
            [
                "3933dc3c.556504"
            ]
        ]
    },
    {
        "id": "3933dc3c.556504",
        "type": "subflow:c196ec9c.55a0f",
        "z": "387e7e3e.c99972",
        "name": "getMetadataFieldKeys",
        "env": [],
        "x": 160,
        "y": 100,
        "wires": [
            [
                "2cc72d62.d35f92"
            ]
        ]
    },
    {
        "id": "1bac299d.a35076",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "query mustache",
        "func": "let query = {}\nquery[\"key\"]=[msg.tenant, msg.productionLine, msg.workstationForm, \"slack\"]\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 140,
        "y": 260,
        "wires": [
            [
                "784cf2e4.0a0d3c"
            ]
        ]
    },
    {
        "id": "784cf2e4.0a0d3c",
        "type": "cloudantplus in",
        "z": "387e7e3e.c99972",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_view_",
        "design": "mustache",
        "index": "mustache",
        "x": 150,
        "y": 300,
        "wires": [
            [
                "888743d7.46cb4"
            ]
        ]
    },
    {
        "id": "888743d7.46cb4",
        "type": "switch",
        "z": "387e7e3e.c99972",
        "name": "results count",
        "property": "payload.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 150,
        "y": 340,
        "wires": [
            [
                "8a14ec12.2c19b"
            ],
            [
                "28c54a9.75b41b6"
            ]
        ]
    },
    {
        "id": "8a14ec12.2c19b",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "Prepare for mustache rendering",
        "func": "\nmsg.template = msg.payload[0].value.template;\nmsg.form = msg.untouched;\nmsg.user = msg.token;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 390,
        "y": 320,
        "wires": [
            [
                "5ef795bd.f8890c"
            ]
        ]
    },
    {
        "id": "5ef795bd.f8890c",
        "type": "template",
        "z": "387e7e3e.c99972",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "",
        "output": "json",
        "x": 640,
        "y": 320,
        "wires": [
            [
                "38fa4ea7.4251e2"
            ]
        ]
    },
    {
        "id": "50edcefe.4d561",
        "type": "subflow:84269f38.920f2",
        "z": "387e7e3e.c99972",
        "name": "",
        "env": [],
        "x": 170,
        "y": 180,
        "wires": [
            [
                "f243493e.b905f8"
            ]
        ]
    },
    {
        "id": "2cc72d62.d35f92",
        "type": "change",
        "z": "387e7e3e.c99972",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "untouched",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 140,
        "y": 140,
        "wires": [
            [
                "50edcefe.4d561"
            ]
        ]
    },
    {
        "id": "f243493e.b905f8",
        "type": "change",
        "z": "387e7e3e.c99972",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "untouched",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 150,
        "y": 220,
        "wires": [
            [
                "1bac299d.a35076"
            ]
        ]
    },
    {
        "id": "358f881f.4897e8",
        "type": "cronplus",
        "z": "387e7e3e.c99972",
        "name": "",
        "outputField": "payload",
        "timeZone": "",
        "persistDynamic": false,
        "commandResponseMsgOutput": "output1",
        "outputs": 1,
        "options": [
            {
                "name": "schedule1",
                "topic": "schedule1",
                "payloadType": "default",
                "payload": "",
                "expressionType": "cron",
                "expression": "0 */5 * ? * *",
                "location": "",
                "offset": "0",
                "solarType": "all",
                "solarEvents": "sunrise,sunset"
            }
        ],
        "x": 300,
        "y": 480,
        "wires": [
            [
                "6a101919.6f6c48"
            ]
        ]
    },
    {
        "id": "77ccc1b6.e9601",
        "type": "inject",
        "z": "387e7e3e.c99972",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "1",
        "topic": "",
        "x": 296.00000762939453,
        "y": 581.0000085830688,
        "wires": [
            [
                "85f50be8.722e48",
                "bc1868cc.c216b8"
            ]
        ]
    },
    {
        "id": "8d49c799.abda38",
        "type": "comment",
        "z": "387e7e3e.c99972",
        "name": "deviceOfflineAlert",
        "info": "",
        "x": 320,
        "y": 540,
        "wires": []
    },
    {
        "id": "85f50be8.722e48",
        "type": "subflow:d9875fbc.357c8",
        "z": "387e7e3e.c99972",
        "name": "",
        "env": [],
        "x": 590,
        "y": 600,
        "wires": [
            [
                "ff6a7d65.41ebd"
            ]
        ]
    },
    {
        "id": "ff6a7d65.41ebd",
        "type": "join",
        "z": "387e7e3e.c99972",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 770,
        "y": 580,
        "wires": [
            [
                "453b8f1a.b6233"
            ]
        ]
    },
    {
        "id": "453b8f1a.b6233",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "map",
        "func": "let payload = []\nlet devices = msg.payload.deviceProvisioned\nlet status = msg.payload.deviceStatus\nmsg.oriDeviceStatus = msg.payload.deviceStatus;\n\nlet time = new Date().getTime()\n\nfor (let device of devices) {\n    let deviceId = device.deviceId\n    \n    device['online'] = false\n    device['name'] = device.deviceName\n    device['recipe'] = device.recipeConfig\n    device['alertSent'] = false;\n    \n    if (status.devices[deviceId]) {\n        let deviceTimestamp = status.devices[deviceId].deviceTimestamp\n        let deviceTime = new Date(deviceTimestamp).getTime()\n        let diff = time - deviceTime\n        \n        // node.warn(deviceTime)\n        // node.warn(time)\n        // node.warn(diff)\n        \n        if (diff < 150000) device['online'] = true\n        \n        if(status.devices[deviceId].alertSent) {\n            device['alertSent'] = true;\n        }\n        \n        // [2021-05-06] Added by SC\n        if(status.devices[deviceId].deviceTimestamp) {\n            device['deviceTimestamp'] = status.devices[deviceId].deviceTimestamp;\n        }\n    } else {\n        device['alertSent'] = true;\n    }\n    \n    payload.push(device)\n}\n\nmsg.payload = payload\nmsg.payloadWithOnlineStatus = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 770,
        "y": 680,
        "wires": [
            [
                "a0ea4dcd.2e915"
            ]
        ]
    },
    {
        "id": "d906ce69.4e06c",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "query",
        "func": "let selector = {}\n\nselector['docType'] = 'setpoints'\n\nmsg.topic = 'setpoints'\nmsg.payload = {selector}\nmsg.payload.limit = 50\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1370,
        "y": 580,
        "wires": [
            [
                "6299a9bb.f8b178"
            ]
        ]
    },
    {
        "id": "6299a9bb.f8b178",
        "type": "cloudantplus in",
        "z": "387e7e3e.c99972",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_query_",
        "design": "master-data",
        "index": "by-timestamp",
        "x": 1530,
        "y": 580,
        "wires": [
            [
                "2568ad3e.c9c5c2"
            ]
        ]
    },
    {
        "id": "2568ad3e.c9c5c2",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "setEndPoint",
        "func": "let setpoints = msg.payload.docs;\n\nfor(var x = 0; x < setpoints.length; x++) {\n    \n    if(setpoints[x].type == \"deviceAlertURL\") {\n        msg.endpoint = setpoints[x].value;\n    }\n    \n    if(setpoints[x].type == \"alertThreshold\") {\n        msg.alertThreshold = setpoints[x].value;\n    } else {\n         msg.alertThreshold = 300;\n    }\n}\n\nmsg.payload = msg.slackPayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1710,
        "y": 580,
        "wires": [
            [
                "c19e8e36.988bd"
            ]
        ]
    },
    {
        "id": "b1fd83da.75ab2",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "",
        "func": "let deviceList = msg.payload;\n\nblocks = [];\nstringArr = [];\n\nfor(var x = 0; x < deviceList.length; x++) {\n    let device = deviceList[x];\n    for(var key in device) {\n        let text;\n        if(key == \"deviceName\" || key == \"deviceId\" || key == \"location\") {\n            let text = key +\"\\t: \" + device[key];\n            stringArr.push(text)\n        }\n    }\n    stringArr.push(\"\\n\");\n}\nlet output = stringArr.join(\"\\n\");\n\nmsg.slackPayload={\n    \"text\": \"*Device Offline Alert*\",\n    \"blocks\": [\n    \t{\n    \t\t\"type\": \"section\",\n    \t\t\"text\": {\n    \t\t\t\"type\": \"mrkdwn\",\n    \t\t\t\"text\": \"*Device Offline Alert*\"\n    \t\t}\n    \t},\n    \t{\n    \t\t\"type\": \"section\",\n    \t\t\"text\": {\n    \t\t\t\"type\": \"mrkdwn\",\n    \t\t\t\"text\": output\n    \t\t}\n    \t}\n    ]\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1220,
        "y": 580,
        "wires": [
            [
                "d906ce69.4e06c"
            ]
        ]
    },
    {
        "id": "2c488f21.43d15",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "",
        "func": "// [2021-05-06] amended by SC\nlet deviceList = msg.payload;\n// let deviceList = msg.payloadWithOnlineStatus;\n\nlet deviceFilter = [];\nfor(var x = 0; x < deviceList.length; x++) {\n    let device = deviceList[x];\n    \n    //when device is offline\n    if(!device.online) {\n        //if device already sent\n        if(device.alertSent) {\n            continue;\n        }\n        \n\n        deviceFilter.push(device); \n    } else {\n        deviceFilter.push(device); \n    }\n}\nmsg.deviceFilter = deviceFilter;\n\n\nmsg.payload = deviceFilter;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 580,
        "wires": [
            [
                "b1fd83da.75ab2"
            ]
        ]
    },
    {
        "id": "28d6c66e.2f364a",
        "type": "comment",
        "z": "387e7e3e.c99972",
        "name": "getSetpointURL&Threshold",
        "info": "",
        "x": 1710,
        "y": 540,
        "wires": []
    },
    {
        "id": "392f9dbc.444e42",
        "type": "comment",
        "z": "387e7e3e.c99972",
        "name": "getAllSetpoints",
        "info": "",
        "x": 1440,
        "y": 540,
        "wires": []
    },
    {
        "id": "81201c9a.46a1e",
        "type": "http request",
        "z": "387e7e3e.c99972",
        "name": "",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "{{{endpoint}}}",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 2030,
        "y": 580,
        "wires": [
            [
                "9e2cb209.ca80a"
            ]
        ]
    },
    {
        "id": "aa13cf2e.c3916",
        "type": "comment",
        "z": "387e7e3e.c99972",
        "name": "filterDevice",
        "info": "exclude online and sentAlert (true)",
        "x": 1080,
        "y": 540,
        "wires": []
    },
    {
        "id": "9b9c2c0b.185b8",
        "type": "comment",
        "z": "387e7e3e.c99972",
        "name": "prepare slack payload",
        "info": "",
        "x": 1240,
        "y": 540,
        "wires": []
    },
    {
        "id": "158d17d1.5d4af8",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "setAlertSent",
        "func": "let devices = msg.oriDeviceStatus.devices;\n\nfor(var key in devices) {\n    let device = devices[key];\n    \n    // let deviceTimestamp = device.deviceTimestamp;\n    // let deviceTime = new Date(deviceTimestamp).getTime();\n\n    // let time = new Date().getTime()\n    // let diff = time - deviceTime\n\n    // let treshold = parseInt(msg.alertThreshold) * 1000\n    // if (diff > treshold) {\n        device['alertSent'] = true\n    // }\n    \n}\nmsg.oriDeviceStatus.devices = devices;\nmsg.payload = msg.oriDeviceStatus;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2350,
        "y": 580,
        "wires": [
            [
                "58a43844.564f38"
            ]
        ]
    },
    {
        "id": "9e2cb209.ca80a",
        "type": "switch",
        "z": "387e7e3e.c99972",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "ok",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 2190,
        "y": 580,
        "wires": [
            [
                "158d17d1.5d4af8"
            ]
        ]
    },
    {
        "id": "58a43844.564f38",
        "type": "cloudantplus out",
        "z": "387e7e3e.c99972",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 2530,
        "y": 580,
        "wires": [
            [
                "6d5dc893.798bb8"
            ]
        ]
    },
    {
        "id": "bb743320.44d21",
        "type": "cloudantplus out",
        "z": "387e7e3e.c99972",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "accesslog",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 2860,
        "y": 580,
        "wires": [
            []
        ]
    },
    {
        "id": "6d5dc893.798bb8",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "",
        "func": "\n\nlet devices = [];\n\nfor(var x = 0; x < msg.deviceFilter.length; x++) {\n    let device = msg.deviceFilter[x];\n    let object = {}\n    \n    object.deviceName = device.deviceName;\n    object.location = device.location;\n    object.deviceId = device.deviceId;\n    \n    devices.push(object);\n}\n\nlet object = {\n    docType: \"deviceOfflineAlert\",\n    devices: devices,\n    timestamp: new Date(msg.headers.date)\n}\n\nmsg.payload = object;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 2700,
        "y": 580,
        "wires": [
            [
                "bb743320.44d21"
            ]
        ]
    },
    {
        "id": "c4551524.0e48e8",
        "type": "comment",
        "z": "387e7e3e.c99972",
        "name": "UpdateFarmConfig",
        "info": "",
        "x": 2450,
        "y": 540,
        "wires": []
    },
    {
        "id": "4958ad60.cc8194",
        "type": "comment",
        "z": "387e7e3e.c99972",
        "name": "SaveAlertMessage",
        "info": "",
        "x": 2790,
        "y": 540,
        "wires": []
    },
    {
        "id": "b29986.95257678",
        "type": "comment",
        "z": "387e7e3e.c99972",
        "name": "checkDeviceStatus",
        "info": "Check Device online or offline status,\nCheck Alert sent",
        "x": 930,
        "y": 540,
        "wires": []
    },
    {
        "id": "e64b8935.6e12d8",
        "type": "status",
        "z": "387e7e3e.c99972",
        "name": "",
        "scope": [
            "81201c9a.46a1e"
        ],
        "x": 120,
        "y": 580,
        "wires": [
            [
                "7fa7111b.51282"
            ]
        ]
    },
    {
        "id": "7fa7111b.51282",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "",
        "func": "let retry = false;\n\nif(msg.status.fill) {\n    if(msg.status.fill == \"red\") {\n        retry = true;\n    }\n}\n\nmsg.retry = retry;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 620,
        "wires": [
            [
                "6ffcab0.8298b54"
            ]
        ]
    },
    {
        "id": "6ffcab0.8298b54",
        "type": "switch",
        "z": "387e7e3e.c99972",
        "name": "",
        "property": "retry",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 290,
        "y": 620,
        "wires": [
            [
                "85f50be8.722e48",
                "bc1868cc.c216b8"
            ]
        ]
    },
    {
        "id": "626ee34.13b541c",
        "type": "comment",
        "z": "387e7e3e.c99972",
        "name": "retryIfFail",
        "info": "",
        "x": 120,
        "y": 540,
        "wires": []
    },
    {
        "id": "6a101919.6f6c48",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "",
        "func": "msg = {}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 460,
        "y": 480,
        "wires": [
            [
                "85f50be8.722e48",
                "bc1868cc.c216b8"
            ]
        ]
    },
    {
        "id": "c19e8e36.988bd",
        "type": "switch",
        "z": "387e7e3e.c99972",
        "name": "",
        "property": "endpoint",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1870,
        "y": 580,
        "wires": [
            [
                "81201c9a.46a1e"
            ]
        ]
    },
    {
        "id": "bc1868cc.c216b8",
        "type": "subflow:62db209b.27bfb",
        "z": "387e7e3e.c99972",
        "name": "",
        "x": 610,
        "y": 560,
        "wires": [
            [
                "ff6a7d65.41ebd"
            ]
        ]
    },
    {
        "id": "a0ea4dcd.2e915",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "query",
        "func": "let selector = {}\n\nselector['docType'] = 'setpoints'\n\nmsg.topic = 'setpoints'\nmsg.payload = {selector}\nmsg.payload.limit = 50\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 890,
        "y": 740,
        "wires": [
            [
                "a6b54746.ea14e8"
            ]
        ]
    },
    {
        "id": "a6b54746.ea14e8",
        "type": "cloudantplus in",
        "z": "387e7e3e.c99972",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_query_",
        "design": "master-data",
        "index": "by-timestamp",
        "x": 1050,
        "y": 740,
        "wires": [
            [
                "87fb6db7.ef668"
            ]
        ]
    },
    {
        "id": "87fb6db7.ef668",
        "type": "function",
        "z": "387e7e3e.c99972",
        "name": "",
        "func": "let devices = msg.payloadWithOnlineStatus;\nlet deviceAlertList = [];\n\nif(msg.payload.docs[0].type === 'alertThreshold') {\n    let threshold = parseInt(msg.payload.docs[0].value) * 1000;  \n    \n    for (let i = 0; i < devices.length; i++) {\n        let device = devices[i];\n        \n        let time = new Date().getTime();\n        let deviceTime = new Date(device.Timestamp).getTime();    \n        let diff = time - deviceTime;\n     \n        if (device.deviceTimestamp) {\n            if(diff > threshold) {\n                deviceAlertList.push(device);\n            }    \n        } else {\n            deviceAlertList.push(device);\n        }   \n    }\n}\n\nmsg.payload = deviceAlertList;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1240,
        "y": 740,
        "wires": [
            [
                "2c488f21.43d15"
            ]
        ]
    },
    {
        "id": "7aa8be4e.6240a",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "72effe42.dca7b",
        "name": "",
        "x": 460,
        "y": 100,
        "wires": [
            [
                "f731acee.bf865",
                "536b9fa9.c873a"
            ]
        ]
    },
    {
        "id": "5607bb1a.c934c4",
        "type": "join",
        "z": "72effe42.dca7b",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 830,
        "y": 100,
        "wires": [
            [
                "4f8124de.6ba57c"
            ]
        ]
    },
    {
        "id": "d66d0bf5.adc4b8",
        "type": "http in",
        "z": "72effe42.dca7b",
        "name": "",
        "url": "api/:tenant/devices/device-mgmt",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 210,
        "y": 100,
        "wires": [
            [
                "7aa8be4e.6240a"
            ]
        ]
    },
    {
        "id": "f731acee.bf865",
        "type": "subflow:d9875fbc.357c8",
        "z": "72effe42.dca7b",
        "name": "",
        "env": [],
        "x": 650,
        "y": 120,
        "wires": [
            [
                "5607bb1a.c934c4"
            ]
        ]
    },
    {
        "id": "4f8124de.6ba57c",
        "type": "function",
        "z": "72effe42.dca7b",
        "name": "map",
        "func": "let payload = []\nlet devices = msg.payload.deviceProvisioned\nlet status = msg.payload.deviceStatus\n\nfor (let device of devices) {\n    let deviceId = device.deviceId\n    \n    device['online'] = false\n    device['name'] = device.deviceName\n    device['recipe'] = device.recipeConfig\n    \n    if (status.devices[deviceId]) {\n        let deviceTimestamp = status.devices[deviceId].deviceTimestamp\n        let deviceTime = new Date(deviceTimestamp).getTime()\n        let time = new Date().getTime()\n        let diff = time - deviceTime\n        \n        // node.warn(deviceTime)\n        // node.warn(time)\n        // node.warn(diff)\n        \n        if (diff < 150000) device['online'] = true\n    }\n    \n    payload.push(device)\n}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 970,
        "y": 100,
        "wires": [
            [
                "73bda196.a72e3"
            ]
        ]
    },
    {
        "id": "73bda196.a72e3",
        "type": "http response",
        "z": "72effe42.dca7b",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1120,
        "y": 100,
        "wires": []
    },
    {
        "id": "536b9fa9.c873a",
        "type": "subflow:62db209b.27bfb",
        "z": "72effe42.dca7b",
        "name": "",
        "env": [],
        "x": 670,
        "y": 80,
        "wires": [
            [
                "5607bb1a.c934c4"
            ]
        ]
    },
    {
        "id": "96a4eaca.2143e8",
        "type": "function",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "func": "msg.url = env.get('INSECT_DB') + '/eventdata'\nmsg.method = 'PUT'\nmsg.rejectUnauthorized = false\nmsg.followRedirects = false\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 240,
        "wires": [
            [
                "d5970535.afb1b8"
            ]
        ]
    },
    {
        "id": "d5970535.afb1b8",
        "type": "http request",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 450,
        "y": 240,
        "wires": [
            [
                "7cc1e701.202b68"
            ]
        ]
    },
    {
        "id": "2918ead5.2d3016",
        "type": "inject",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "",
        "x": 130,
        "y": 240,
        "wires": [
            [
                "96a4eaca.2143e8"
            ]
        ]
    },
    {
        "id": "7cc1e701.202b68",
        "type": "debug",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 240,
        "wires": []
    },
    {
        "id": "4f5e0035.bef02",
        "type": "comment",
        "z": "efdcd1da.2bbf4",
        "name": "Create database - eventdata",
        "info": "",
        "x": 200,
        "y": 200,
        "wires": []
    },
    {
        "id": "87df7447.e0bf88",
        "type": "http in",
        "z": "3dba3683.f9f43a",
        "name": "",
        "url": "/iot/events",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 160,
        "y": 140,
        "wires": [
            [
                "7d8d8d42.6a0f54"
            ]
        ]
    },
    {
        "id": "7d8d8d42.6a0f54",
        "type": "json",
        "z": "3dba3683.f9f43a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 330,
        "y": 140,
        "wires": [
            [
                "c73f3f75.ddc2f"
            ]
        ]
    },
    {
        "id": "8be9169.e8d43e8",
        "type": "cloudantplus out",
        "z": "3dba3683.f9f43a",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "eventdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 880,
        "y": 140,
        "wires": [
            [
                "23fa8136.14f7de"
            ]
        ]
    },
    {
        "id": "53fff3c3.91f5fc",
        "type": "inject",
        "z": "3dba3683.f9f43a",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"id\":\"abcd1234\",\"location\":\"gc-01\",\"ts\":\"17102121\",\"class\":\"relay-controllers\",\"mode\":\"sensor\",\"status\":\"FAN=1\",\"level\":\"3\",\"msg\":\"FAN at growth chamber 33 is on at 4pm\"}",
        "payloadType": "json",
        "x": 330,
        "y": 100,
        "wires": [
            [
                "c73f3f75.ddc2f"
            ]
        ]
    },
    {
        "id": "c73f3f75.ddc2f",
        "type": "moment",
        "z": "3dba3683.f9f43a",
        "name": "convert ts to ts2",
        "topic": "",
        "input": "payload.ts",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "DD/MMMM/YYYY HH:mm:ss Z",
        "locale": "en-US",
        "output": "payload.ts2",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 500,
        "y": 140,
        "wires": [
            [
                "e43c8c69.5d118"
            ]
        ]
    },
    {
        "id": "e43c8c69.5d118",
        "type": "function",
        "z": "3dba3683.f9f43a",
        "name": "include docType",
        "func": "msg.payload.docType = 'device-event'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 140,
        "wires": [
            [
                "8be9169.e8d43e8"
            ]
        ]
    },
    {
        "id": "c512d893.dcad88",
        "type": "http in",
        "z": "72effe42.dca7b",
        "name": "",
        "url": "api/:tenant/devices/recipe",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 190,
        "y": 200,
        "wires": [
            [
                "ce9d832d.036cf"
            ]
        ]
    },
    {
        "id": "b80ca6c3.64f6f8",
        "type": "function",
        "z": "72effe42.dca7b",
        "name": "",
        "func": "msg.original = msg.payload;\nmsg.payload = msg.payload._id\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "bcddc39f.fdab9"
            ]
        ]
    },
    {
        "id": "bcddc39f.fdab9",
        "type": "cloudantplus in",
        "z": "72effe42.dca7b",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 170,
        "y": 320,
        "wires": [
            [
                "1fc33db4.c99ff2"
            ]
        ]
    },
    {
        "id": "1fc33db4.c99ff2",
        "type": "switch",
        "z": "72effe42.dca7b",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 310,
        "y": 320,
        "wires": [
            [
                "9391c067.6ee5b"
            ],
            [
                "c991a6ae.646058"
            ]
        ]
    },
    {
        "id": "9391c067.6ee5b",
        "type": "function",
        "z": "72effe42.dca7b",
        "name": "",
        "func": "let data = msg.payload;\nlet oriDeviceId = msg.payload.deviceId;\n\n// 210602 DAVID BUGFIX\n// BUG: Sometimes msg.original.mode was not sent.\n// FIX: Compare with msg.original.manualToggle.\nif (msg.original.hasOwnProperty('manualToggle')) {\n    data.mode = msg.original.manualToggle ? 'manual' : 'recipe'\n} else {\n    data.mode = msg.original.mode\n}\n\n// 210602 DAVID BUGFIX\n// BUG: CouchDB overwrite records; \n// missing recipeConfig means it will overwrite it.\n// FIX: Only overwrite when value exist.\nif (msg.original.recipe) data.recipeConfig = msg.original.recipe\nif (msg.original.manual) data.manualConfig = msg.original.manual\n\ndata.manualToggle = msg.original.manualToggle\n\nmsg.oriDeviceId = oriDeviceId\nmsg.payload = data\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 480,
        "y": 300,
        "wires": [
            [
                "78a47beb.0e4d24",
                "36c87a37.5ad756"
            ]
        ]
    },
    {
        "id": "78a47beb.0e4d24",
        "type": "cloudantplus out",
        "z": "72effe42.dca7b",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 490,
        "y": 340,
        "wires": [
            [
                "84a0bebe.90bd4"
            ]
        ]
    },
    {
        "id": "cd54f8a4.5ee548",
        "type": "http response",
        "z": "72effe42.dca7b",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 580,
        "y": 400,
        "wires": []
    },
    {
        "id": "c991a6ae.646058",
        "type": "function",
        "z": "72effe42.dca7b",
        "name": "",
        "func": "msg.payload = {\n    \"message\": \"Device not found\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 160,
        "y": 360,
        "wires": [
            [
                "d07f73f9.8d1bb"
            ]
        ]
    },
    {
        "id": "d07f73f9.8d1bb",
        "type": "http response",
        "z": "72effe42.dca7b",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 160,
        "y": 400,
        "wires": []
    },
    {
        "id": "ce9d832d.036cf",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "72effe42.dca7b",
        "name": "",
        "x": 160,
        "y": 240,
        "wires": [
            [
                "b80ca6c3.64f6f8"
            ]
        ]
    },
    {
        "id": "84a0bebe.90bd4",
        "type": "link out",
        "z": "72effe42.dca7b",
        "name": "",
        "links": [
            "c0b816ef.005778"
        ],
        "x": 655,
        "y": 340,
        "wires": []
    },
    {
        "id": "7fc82258.93e36c",
        "type": "function",
        "z": "9a693308.7ebaf",
        "name": "do operation",
        "func": "// @ts-ignore\nvar name = msg.perfName || env.get(\"name\");\n// @ts-ignore\nvar operation = msg.perfOperation || env.get(\"operation\");\nvar measures = global.get(\"flow_timers\") || {};\nvar measure = measures[name] || {};\n\nfunction doOp(measure, op){\n    if(operation === \"start\"){\n        measure.start = Date.now();//change to process.hrtime\n        measure.stop = null;\n        measure.durationMs = null;\n    } else if(operation === \"stop\") {\n        measure.stop = Date.now();//change to process.hrtime\n        measure.durationMs = measure.start ? measure.stop - measure.start : null;\n        msg._performance = measure;\n    }\n}\n\n\nif(operation === \"start\"){\n    doOp(measure, operation);\n} else if(operation === \"stop\") {\n    doOp(measure, operation);\n    node.send([null, { payload: { text: name + \": \" + measure.durationMs + \"ms\" }}]);\n} else if(operation === \"msg.topic\") {\n    operation = msg.topic;\n    doOp(measure, operation);\n} else if(operation === \"msg.operation\") {\n    operation = msg.operation;\n    doOp(measure, operation);\n} else if(operation === \"msg.payload\") {\n    operation = msg.payload;\n    doOp(measure, operation);\n} else {\n    return [msg, null];\n}\nmeasures[name] = measure;\nglobal.set(\"flow_timers\", measures);\n\nreturn [msg, null];",
        "outputs": 2,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 250,
        "y": 100,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "23fa8136.14f7de",
        "type": "http response",
        "z": "3dba3683.f9f43a",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1030,
        "y": 140,
        "wires": []
    },
    {
        "id": "62d585ae.fc4a5c",
        "type": "http in",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "url": "/api/:tenant/analytics",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 230,
        "y": 80,
        "wires": [
            [
                "ac898725.8466d8"
            ]
        ]
    },
    {
        "id": "ac898725.8466d8",
        "type": "link out",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "links": [
            "aafa3813.281918"
        ],
        "x": 375,
        "y": 80,
        "wires": []
    },
    {
        "id": "1830582f.715308",
        "type": "cloudantplus out",
        "z": "72effe42.dca7b",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 810,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "36c87a37.5ad756",
        "type": "function",
        "z": "72effe42.dca7b",
        "name": "",
        "func": "let doc = {}\ndoc.docType = 'changelog'\ndoc.changeType = 'device-config'\ndoc.timestamp = new Date()\ndoc.user = msg.token\ndoc.change = msg.payload\nmsg.payload = doc\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 280,
        "wires": [
            [
                "1830582f.715308"
            ]
        ]
    },
    {
        "id": "e372ba90.6d9338",
        "type": "comment",
        "z": "48df00a1.c6d5a",
        "name": "Recipe Config - Generate the Recipe Config",
        "info": "",
        "x": 450,
        "y": 340,
        "wires": []
    },
    {
        "id": "caa1b068.5dbb8",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "query",
        "func": "let deviceConfig = msg.payload[0].value\n\nmsg.deviceConfig = deviceConfig\nmsg.payload = { key: deviceConfig.deviceId }\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 330,
        "y": 420,
        "wires": [
            [
                "f24bfd20.ebff4"
            ]
        ]
    },
    {
        "id": "f24bfd20.ebff4",
        "type": "cloudantplus in",
        "z": "48df00a1.c6d5a",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "sensorDevice",
        "index": "findByDeletedFalse-deviceId",
        "x": 490,
        "y": 420,
        "wires": [
            [
                "399b0ddd.f330c2"
            ]
        ]
    },
    {
        "id": "dc2ea5c9.adbae8",
        "type": "link in",
        "z": "48df00a1.c6d5a",
        "name": "",
        "links": [
            "294d58ab.7acc18"
        ],
        "x": 215,
        "y": 420,
        "wires": [
            [
                "caa1b068.5dbb8"
            ]
        ]
    },
    {
        "id": "b7c13683.29f1b8",
        "type": "comment",
        "z": "48df00a1.c6d5a",
        "name": "Recipe Config - Uses Device ID to fetch Device Form Data",
        "info": "",
        "x": 490,
        "y": 380,
        "wires": []
    },
    {
        "id": "aeb83102.0c45a",
        "type": "change",
        "z": "48df00a1.c6d5a",
        "name": "filter",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].value",
                "tot": "msg"
            },
            {
                "t": "delete",
                "p": "payload._id",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload._rev",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.templateType",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.tenant",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.productionLine",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.workstationForm",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.dataRecord",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.daily_index",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.device_id",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.user_name",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.user_id",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.form_id",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.form_version",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.submission_timestamp",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.deleted",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.device_ip",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.sensorDeviceClass",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.sensorDeviceClassInitial",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "payload.sensorDeviceNameSuffix",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 420,
        "wires": [
            [
                "3faee8ac.f71898"
            ]
        ]
    },
    {
        "id": "399b0ddd.f330c2",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "let manualRelays = [];\n\nfor (const device of msg.payload) {\n    manualRelays.push({\n        _id: device.value._id,\n        _rev: device.value._rev,\n        sensorDeviceId: device.value.sensorDeviceId,\n        relays: device.value.relays\n    })    \n}\n\nmsg.deviceConfig.manualRelays = manualRelays;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 420,
        "wires": [
            [
                "aeb83102.0c45a"
            ]
        ]
    },
    {
        "id": "3faee8ac.f71898",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "structure",
        "func": "let deviceConfig = msg.deviceConfig\n// let recipeConfig = deviceConfig.recipeConfig || {}\nlet recipeConfig = {} // SC\n// let manualConfig = deviceConfig.manualConfig || {} // SC\nlet manualConfig = {} // SC\nlet deviceDetails =  msg.payload || {}\nlet millisecondsTransform = [\n    'pollingInterval'\n]\n\n// stored values are in seconds, this will convert it\nfor (const key of millisecondsTransform) {\n    if (deviceDetails.hasOwnProperty(key)) {\n        deviceDetails[key] = (+deviceDetails[key] * 1000).toString();\n    }\n}\n\n// similar to millisecondsTransform\nif (Object.keys(deviceDetails).length != 0) {\n    if (deviceDetails.hasOwnProperty('logInterval')) {\n        deviceDetails.logInterval = (deviceDetails.logInterval * 1000).toString();\n    }\n}\n\n// [SC] Map relay alias\nif (deviceConfig.mode === 'manual') {\n    const manualRelays = deviceConfig.manualRelays[0].relays\n    \n    let relays = []\n    let recipeRelays = []\n    for (let item in deviceConfig.manualConfig) {\n        // 210602 DAVID BUGFIX\n        // BUG: Unable to toggle to manual mode properly; \n        // due to manualRelays being undefined;\n        // FIX: Just take relay alias from msg.deviceConfig.\n        let relayAlias = msg.deviceConfig.relays\n        let relay = getRelay(relayAlias, item)\n        \n        recipeRelays.push({\n            alias: item,\n            state: deviceConfig.manualConfig[item]\n        })\n        \n        relays.push({\n            relay,\n            alias: item\n        })\n    }\n    \n    recipeConfig = {\n        mode: deviceConfig.mode,\n        version: 7,\n        recipe: { \n            relays: recipeRelays\n        },\n        relays\n    }\n    \n    // node.warn(JSON.stringify(recipeConfig))\n    \n} else {\n    recipeConfig = deviceConfig.recipeConfig\n}\n\nfunction getRelayAlias(detailsRelays, relay) {\n    let alias = null\n    \n    relay = '' + relay\n    \n    for (let detailsRelay of detailsRelays) {\n        if (detailsRelay.relay == relay) {\n            alias = detailsRelay.alias\n            break\n        }\n    }\n    \n    return alias\n}\n\n// SC\nfunction getRelay(detailsRelays, alias) {\n    let relay = null\n    \n    // relay = '' + relay\n    \n    for (let detailsRelay of detailsRelays) {\n        if (detailsRelay.alias == alias) {\n            relay = detailsRelay.relay\n            break\n        }\n    }\n    \n    return relay\n}\nmsg.mode = deviceConfig.mode;\nmsg.payload = Object.assign(recipeConfig || {}, deviceDetails || {})\nmsg.manualPayload = msg.payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 960,
        "y": 420,
        "wires": [
            [
                "11a2c256.dfb28e"
            ]
        ]
    },
    {
        "id": "11a2c256.dfb28e",
        "type": "switch",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "mode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "manual",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1110,
        "y": 420,
        "wires": [
            [
                "d577b07.eb6d25"
            ],
            [
                "faf71bd2.3d5a08"
            ]
        ]
    },
    {
        "id": "d577b07.eb6d25",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "msg.payload = msg.manualPayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1260,
        "y": 400,
        "wires": [
            [
                "c5965c63.35b5d"
            ]
        ]
    },
    {
        "id": "c5965c63.35b5d",
        "type": "http response",
        "z": "48df00a1.c6d5a",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 1420,
        "y": 400,
        "wires": []
    },
    {
        "id": "e92b7ec9.5eb72",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "query",
        "func": "msg.payload = { \n    sensorDeviceId: msg.payload.sensorDeviceId,\n    descending: true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1250,
        "y": 360,
        "wires": [
            [
                "fccf1ced.a2e79"
            ]
        ]
    },
    {
        "id": "fccf1ced.a2e79",
        "type": "cloudantplus in",
        "z": "48df00a1.c6d5a",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "environmentdata",
        "service": "_ext_",
        "search": "_view_",
        "design": "sortTimestamp",
        "index": "by-timestamp",
        "x": 1430,
        "y": 360,
        "wires": [
            [
                "c9ee3db7.925a4"
            ]
        ]
    },
    {
        "id": "c9ee3db7.925a4",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "// Get IP address\nmsg.url = msg.payload[0].value.IP\nmsg.requestTimeout = 15000\nmsg.payload = msg.manualPayload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1620,
        "y": 360,
        "wires": [
            [
                "9e6f99e1.dbf0f8"
            ]
        ]
    },
    {
        "id": "9e6f99e1.dbf0f8",
        "type": "http request",
        "z": "48df00a1.c6d5a",
        "name": "post to device",
        "method": "POST",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 1800,
        "y": 360,
        "wires": [
            [
                "87916585.0ebe88"
            ]
        ]
    },
    {
        "id": "87916585.0ebe88",
        "type": "http response",
        "z": "48df00a1.c6d5a",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 1980,
        "y": 360,
        "wires": []
    },
    {
        "id": "faf71bd2.3d5a08",
        "type": "http response",
        "z": "48df00a1.c6d5a",
        "name": "",
        "statusCode": "202",
        "headers": {},
        "x": 1260,
        "y": 440,
        "wires": []
    },
    {
        "id": "604d28fd.e16458",
        "type": "http in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "url": "api/:tenant/forms",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 180,
        "y": 3060,
        "wires": [
            [
                "21642445.d5ee2c"
            ]
        ]
    },
    {
        "id": "21642445.d5ee2c",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "3517e109.8c2a3e",
        "name": "",
        "x": 390,
        "y": 3060,
        "wires": [
            [
                "6acaba0a.5bdd24"
            ]
        ]
    },
    {
        "id": "c2c4869d.415dd8",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 720,
        "y": 3060,
        "wires": [
            [
                "c1f3f1d9.191af"
            ]
        ]
    },
    {
        "id": "6acaba0a.5bdd24",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "let query = {\n    \"selector\": {\n    \"sensorDeviceId\": msg.payload.deviceId,\n    \"dataRecord\": true,\n    \"deleted\": {\n        $exists: false\n    }\n    }\n}\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 550,
        "y": 3060,
        "wires": [
            [
                "c2c4869d.415dd8"
            ]
        ]
    },
    {
        "id": "c1f3f1d9.191af",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 900,
        "y": 3060,
        "wires": [
            [
                "8bef62ea.5de7d"
            ],
            [
                "534e411e.d0b5c"
            ]
        ]
    },
    {
        "id": "8bef62ea.5de7d",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1050,
        "y": 3040,
        "wires": []
    },
    {
        "id": "534e411e.d0b5c",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1050,
        "y": 3080,
        "wires": []
    },
    {
        "id": "9bf7aa2.e157558",
        "type": "debug",
        "z": "161e8c5f.9e3554",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1040,
        "wires": []
    },
    {
        "id": "85b74d01.4aa6d",
        "type": "function",
        "z": "161e8c5f.9e3554",
        "name": "query",
        "func": "msg.envDataPayload = msg.payload;\n\nlet query = {\n    \"selector\": {\n        \"templateType\": \"device-param\",\n        \"docType\": \"template\"\n    }\n}\n\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1130,
        "y": 960,
        "wires": [
            [
                "40ec0f39.5c2c3"
            ]
        ]
    },
    {
        "id": "40ec0f39.5c2c3",
        "type": "cloudantplus in",
        "z": "161e8c5f.9e3554",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 1110,
        "y": 1000,
        "wires": [
            [
                "dd41856.b32ff78",
                "9bf7aa2.e157558",
                "415ad217.1c737c"
            ]
        ]
    },
    {
        "id": "415ad217.1c737c",
        "type": "debug",
        "z": "161e8c5f.9e3554",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "envDataPayload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1360,
        "y": 1000,
        "wires": []
    },
    {
        "id": "7982eba1.6628a4",
        "type": "debug",
        "z": "161e8c5f.9e3554",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1330,
        "y": 1080,
        "wires": []
    },
    {
        "id": "7e03d26f.fc959c",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "let deviceData = msg.payload\nlet deviceParams = []\nlet deviceDate = transformDate(deviceData.ts)\nlet deviceId = deviceData.ID\nlet redisKey = deviceId + '-' + deviceDate\n\nmsg.topic = redisKey\nmsg.redisKey = redisKey\nmsg.deviceData = deviceData\nmsg.deviceDate = deviceDate\nmsg.payload = null // Redis reading both topic and payload\nreturn msg;\n\nfunction transformDate(unix) {\n    let d = new Date(unix * 1000)\n    let year = d.getUTCFullYear()\n    let month = d.getUTCMonth() + 1\n    let date = d.getUTCDate()\n    \n    let transformed = ''\n    transformed += formatDateDigits(year) + '-'\n    transformed += formatDateDigits(month) + '-'\n    transformed += formatDateDigits(date)\n    \n    return transformed\n}\n\nfunction formatDateDigits(digits) {\n    let str = digits.toString()\n    if (str.length > 1) return str\n    else return '0' + str\n}\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1040,
        "wires": [
            [
                "4d89366a.54ec38"
            ]
        ]
    },
    {
        "id": "78f0a32c.24038c",
        "type": "link in",
        "z": "48df00a1.c6d5a",
        "name": "to Recipe Config",
        "links": [
            "754e5449.cc414c",
            "48b6cd88.a46724",
            "f94c5e11.0aad",
            "d6b93504.72d4e8",
            "2590c315.7ab56c"
        ],
        "x": 215,
        "y": 1040,
        "wires": [
            [
                "7e03d26f.fc959c"
            ]
        ]
    },
    {
        "id": "4d89366a.54ec38",
        "type": "redis-command",
        "z": "48df00a1.c6d5a",
        "server": "c9356964.d4c6c8",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 500,
        "y": 1040,
        "wires": [
            [
                "3fafbd03.d8dea2"
            ]
        ]
    },
    {
        "id": "3fafbd03.d8dea2",
        "type": "json",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 650,
        "y": 1040,
        "wires": [
            [
                "f3aa9372.fd1a5",
                "3d49a93c.aa5566"
            ]
        ]
    },
    {
        "id": "f3aa9372.fd1a5",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "let redisKey = msg.redisKey\nlet redisValue = msg.payload || {}\nlet deviceData = msg.deviceData\nlet deviceDate = msg.deviceDate\n\nredisValue.date = deviceDate\nif (deviceData.values) {\n    redisValue = convertNest(deviceData, redisValue)\n} else {\n    redisValue = convertFlat(deviceData, redisValue)\n}\n\nmsg.payload = JSON.stringify(redisValue)\nmsg.redisValue = redisValue\nreturn msg;\n\nfunction convertNest(deviceData, redisValue) {\n    const time = transformTime(deviceData.ts)\n    for (const loopKey in deviceData) {\n        const loopValue = deviceData[loopKey]\n        if (loopKey != 'values') redisValue[loopKey] = loopValue\n    }\n    if (!redisValue.values) redisValue.values = {}\n    if (!redisValue.values[time]) redisValue.values[time] = {}\n    redisValue.values[time] = deviceData.values\n    return redisValue\n}\n\nfunction convertFlat(deviceData, redisValue) {\n    const time = transformTime(deviceData.ts)\n    for (const loopKey in deviceData) {\n        const loopValue = deviceData[loopKey]\n        if (isMetadata(loopKey)) {\n            redisValue[loopKey] = loopValue\n        } else {\n            if (!redisValue.values) redisValue.values = {}\n            if (!redisValue.values[time]) redisValue.values[time] = {}\n            redisValue.values[time][loopKey] = loopValue\n        }\n    }\n    return redisValue\n}\n\nfunction isMetadata(key) {\n    const metadata = [\n        'ID', \n        'ts', \n        'uptime', \n        'location', \n        'deviceName',\n        'recipeVer',\n        'IP',\n        'firmwareVer'\n    ]\n    \n    return metadata.includes(key)\n}\n\nfunction transformTime(unix) {\n    let d = new Date(unix * 1000)\n    let hours = d.getUTCHours()\n    let minutes = d.getUTCMinutes()\n    let seconds = d.getUTCSeconds()\n    \n    // Round down\n    if (seconds <= 10) seconds = 0\n    else if (seconds <= 20) seconds = 10\n    else if (seconds <= 30) seconds = 20\n    else if (seconds <= 40) seconds = 30\n    else if (seconds <= 50) seconds = 40\n    else seconds = 50\n    \n    let transformed = ''\n    transformed += formatDateDigits(hours)\n    transformed += formatDateDigits(minutes)\n    transformed += formatDateDigits(seconds)\n    \n    return transformed\n}\n\nfunction formatDateDigits(digits) {\n    let str = digits.toString()\n    if (str.length > 1) return str\n    else return '0' + str\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1040,
        "wires": [
            [
                "171ac5b7.2800ca",
                "b7f56b9b.958188"
            ]
        ]
    },
    {
        "id": "171ac5b7.2800ca",
        "type": "redis-command",
        "z": "48df00a1.c6d5a",
        "server": "c9356964.d4c6c8",
        "command": "SET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 960,
        "y": 1040,
        "wires": [
            []
        ]
    },
    {
        "id": "37e3c171.22464e",
        "type": "switch",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "property": "payload.type",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 230,
        "y": 180,
        "wires": [
            [
                "d46de1a5.498ee"
            ]
        ]
    },
    {
        "id": "aafa3813.281918",
        "type": "link in",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "links": [
            "ac898725.8466d8"
        ],
        "x": 135,
        "y": 180,
        "wires": [
            [
                "37e3c171.22464e"
            ]
        ]
    },
    {
        "id": "b86d6e5f.f7e1d",
        "type": "inject",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "{\"deviceId\":\"C06426B267AC\"}",
        "payloadType": "json",
        "x": 230,
        "y": 140,
        "wires": [
            [
                "d46de1a5.498ee"
            ]
        ]
    },
    {
        "id": "d46de1a5.498ee",
        "type": "function",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "func": "let filters = msg.payload\nlet dates = []\n\n// Generate days based on filters\nlet startDate = new Date(filters.startDate)\nlet endDate = new Date(filters.endDate)\n// For support different timezone\nstartDate.setDate(startDate.getDate() - 1)\nendDate.setDate(endDate.getDate() + 1)\n// Generate days\nfor (let d = startDate; d <= endDate; d.setDate(d.getDate() + 1)) {\n    let seconds = d.getTime() / 1000\n    dates.push(transformDate(seconds))\n}\n\nmsg.payload = dates\nmsg.filters = filters\nreturn msg;\n\nfunction transformTime(unix) {\n    let d = new Date(unix * 1000)\n    let hours = d.getUTCHours()\n    let minutes = d.getUTCMinutes()\n    let seconds = d.getUTCSeconds()\n    \n    // Round down\n    if (seconds <= 10) seconds = 0\n    if (seconds <= 20) seconds = 10\n    if (seconds <= 30) seconds = 20\n    if (seconds <= 40) seconds = 30\n    if (seconds <= 50) seconds = 40\n    else seconds = 50\n    \n    let transformed = ''\n    transformed += formatDateDigits(hours) + ':'\n    transformed += formatDateDigits(minutes) + ':'\n    transformed += formatDateDigits(seconds)\n    \n    return transformed\n}\n\nfunction transformDate(unix) {\n    let d = new Date(unix * 1000)\n    let year = d.getUTCFullYear()\n    let month = d.getUTCMonth() + 1\n    let date = d.getUTCDate()\n    \n    let transformed = ''\n    transformed += formatDateDigits(year) + '-'\n    transformed += formatDateDigits(month) + '-'\n    transformed += formatDateDigits(date)\n    \n    return transformed\n}\n\nfunction formatDateDigits(digits) {\n    let str = digits.toString()\n    if (str.length > 1) return str\n    else return '0' + str\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 180,
        "wires": [
            [
                "8e3eefc4.ee6d2"
            ]
        ]
    },
    {
        "id": "8e3eefc4.ee6d2",
        "type": "split",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 530,
        "y": 180,
        "wires": [
            [
                "8933d8d0.b584d8",
                "2dc15ba1.7bce24"
            ]
        ]
    },
    {
        "id": "4bd40c23.c28a84",
        "type": "function",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "func": "let date = msg.payload\nlet deviceId = msg.filters.deviceId + '-'\nlet redisKey = deviceId + date\n\nmsg.date = msg.payload\nmsg.topic = redisKey\nmsg.redisKey = redisKey\nmsg.payload = null // Redis reading both topic and payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 420,
        "wires": [
            [
                "3ea439f7.5ecda6"
            ]
        ]
    },
    {
        "id": "3ea439f7.5ecda6",
        "type": "redis-command",
        "z": "f86fd9fe.b86f38",
        "server": "c9356964.d4c6c8",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 420,
        "y": 420,
        "wires": [
            [
                "c3a0876d.dd6f88",
                "1350b480.0cae5c"
            ]
        ]
    },
    {
        "id": "c3a0876d.dd6f88",
        "type": "json",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 570,
        "y": 420,
        "wires": [
            [
                "ecbd8b40.e7ad18"
            ]
        ]
    },
    {
        "id": "d56d2a50.fe67c8",
        "type": "join",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "date",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 250,
        "y": 540,
        "wires": [
            [
                "b0b466d4.14e4a8"
            ]
        ]
    },
    {
        "id": "b0b466d4.14e4a8",
        "type": "http response",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 390,
        "y": 540,
        "wires": []
    },
    {
        "id": "fca7525a.2ccd6",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.prodLine",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "breeding",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 180,
        "wires": [
            [
                "7fd45bce.ccdb24"
            ]
        ]
    },
    {
        "id": "7fd45bce.ccdb24",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.stationForm",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nursery-harvest",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 180,
        "wires": [
            [
                "f47436ea.f33cb8"
            ]
        ]
    },
    {
        "id": "f47436ea.f33cb8",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.fieldKey",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "batchId",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 180,
        "wires": [
            [
                "be29ce8a.6071b"
            ]
        ]
    },
    {
        "id": "be29ce8a.6071b",
        "type": "moment",
        "z": "c5555ac2.79ff88",
        "name": "",
        "topic": "Batch ID 5 days ago",
        "input": "",
        "inputType": "date",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": "5",
        "adjType": "days",
        "adjDir": "subtract",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 720,
        "y": 180,
        "wires": [
            [
                "d244fe1a.aa1d2"
            ]
        ]
    },
    {
        "id": "54321138.f20d7",
        "type": "link in",
        "z": "c5555ac2.79ff88",
        "name": "",
        "links": [
            "d244fe1a.aa1d2",
            "ab8245.cb337db8",
            "aefdf346.b69fd",
            "ad7ba80e.f27888",
            "33079448.23bd0c"
        ],
        "x": 895,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "d9acbad8.531aa8",
        "type": "link out",
        "z": "c5555ac2.79ff88",
        "name": "",
        "links": [
            "23b44791.21d558",
            "d63f1148.bbe9",
            "29838781.9095e8",
            "db631605.440158"
        ],
        "x": 135,
        "y": 80,
        "wires": []
    },
    {
        "id": "23b44791.21d558",
        "type": "link in",
        "z": "c5555ac2.79ff88",
        "name": "",
        "links": [
            "d9acbad8.531aa8"
        ],
        "x": 135,
        "y": 180,
        "wires": [
            [
                "fca7525a.2ccd6"
            ]
        ]
    },
    {
        "id": "d244fe1a.aa1d2",
        "type": "link out",
        "z": "c5555ac2.79ff88",
        "name": "",
        "links": [
            "54321138.f20d7"
        ],
        "x": 875,
        "y": 180,
        "wires": []
    },
    {
        "id": "d577ecdf.81456",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.prodLine",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "breeding",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 250,
        "y": 280,
        "wires": [
            [
                "9fc39932.414d18"
            ]
        ]
    },
    {
        "id": "9fc39932.414d18",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.stationForm",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "nursery-harvest",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 280,
        "wires": [
            [
                "86875198.df7ac"
            ]
        ]
    },
    {
        "id": "86875198.df7ac",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.fieldKey",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setupDateId",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 280,
        "wires": [
            [
                "f2021859.8ffb28"
            ]
        ]
    },
    {
        "id": "d63f1148.bbe9",
        "type": "link in",
        "z": "c5555ac2.79ff88",
        "name": "",
        "links": [
            "d9acbad8.531aa8"
        ],
        "x": 135,
        "y": 280,
        "wires": [
            [
                "d577ecdf.81456"
            ]
        ]
    },
    {
        "id": "ab8245.cb337db8",
        "type": "link out",
        "z": "c5555ac2.79ff88",
        "name": "",
        "links": [
            "54321138.f20d7"
        ],
        "x": 1155,
        "y": 280,
        "wires": []
    },
    {
        "id": "ed9674cf.2686f8",
        "type": "comment",
        "z": "c5555ac2.79ff88",
        "name": "breeding nursery-harvest batchId",
        "info": "",
        "x": 330,
        "y": 140,
        "wires": []
    },
    {
        "id": "f90facc1.bacf5",
        "type": "comment",
        "z": "c5555ac2.79ff88",
        "name": "breeding nursery-harvest setupDateID",
        "info": "",
        "x": 350,
        "y": 240,
        "wires": []
    },
    {
        "id": "f2021859.8ffb28",
        "type": "subflow:17b1b844.b6db28",
        "z": "c5555ac2.79ff88",
        "name": "",
        "env": [],
        "x": 690,
        "y": 280,
        "wires": [
            [
                "73986297.aa078c"
            ]
        ]
    },
    {
        "id": "73986297.aa078c",
        "type": "function",
        "z": "c5555ac2.79ff88",
        "name": "",
        "func": "let setpoints = msg.payload\nlet setpointKey = 'nurseryResidenceTime'\nlet setpoint = setpoints[setpointKey]\nlet setupDate = new Date()\nlet errors = []\n\nif (setpoint) {\n    setupDate.setDate(setupDate.getDate() - +setpoint)\n} else {\n    errors.push('Not found setpoint nurseryResidenceTime')\n}\n\nmsg.errors = errors\nmsg.payload = setupDate\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 280,
        "wires": [
            [
                "8212ad9f.32cdf"
            ]
        ]
    },
    {
        "id": "8212ad9f.32cdf",
        "type": "moment",
        "z": "c5555ac2.79ff88",
        "name": "",
        "topic": "setupDateId",
        "input": "",
        "inputType": "msg",
        "inTz": "Asia/Kuala_Lumpur",
        "adjAmount": 0,
        "adjType": "days",
        "adjDir": "add",
        "format": "YYMMDD",
        "locale": "en-US",
        "output": "",
        "outputType": "msg",
        "outTz": "Asia/Kuala_Lumpur",
        "x": 1030,
        "y": 280,
        "wires": [
            [
                "ab8245.cb337db8"
            ]
        ]
    },
    {
        "id": "8d110430.e87f28",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.prodLine",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "breeding",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "farming",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 380,
        "wires": [
            [
                "cd924311.6e8bc"
            ],
            [
                "cd924311.6e8bc"
            ]
        ]
    },
    {
        "id": "cd924311.6e8bc",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.stationForm",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "grow-out-harvest",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 390,
        "y": 380,
        "wires": [
            [
                "244cbcca.7b6a74"
            ]
        ]
    },
    {
        "id": "244cbcca.7b6a74",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.fieldKey",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "setupDateId",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 530,
        "y": 380,
        "wires": [
            [
                "dbd743da.79e8b"
            ]
        ]
    },
    {
        "id": "29838781.9095e8",
        "type": "link in",
        "z": "c5555ac2.79ff88",
        "name": "",
        "links": [
            "d9acbad8.531aa8"
        ],
        "x": 135,
        "y": 380,
        "wires": [
            [
                "8d110430.e87f28"
            ]
        ]
    },
    {
        "id": "aefdf346.b69fd",
        "type": "link out",
        "z": "c5555ac2.79ff88",
        "name": "",
        "links": [
            "54321138.f20d7"
        ],
        "x": 1275,
        "y": 380,
        "wires": []
    },
    {
        "id": "7b375ff9.1799f",
        "type": "comment",
        "z": "c5555ac2.79ff88",
        "name": "breeding/farming grow-out-harvest setupDateID",
        "info": "",
        "x": 380,
        "y": 340,
        "wires": []
    },
    {
        "id": "43836266.1a74cc",
        "type": "subflow:33ad23d.1fc62dc",
        "z": "c5555ac2.79ff88",
        "name": "",
        "env": [],
        "x": 910,
        "y": 380,
        "wires": [
            [
                "3abd34ef.5bf27c"
            ]
        ]
    },
    {
        "id": "dbd743da.79e8b",
        "type": "function",
        "z": "c5555ac2.79ff88",
        "name": "",
        "func": "let tenant = global.get('tenant') || '001'\nlet line = msg.payload.prodLine\nlet form = 'grow-out-setup'\nlet fieldKey = msg.payload.fieldKey\nlet formValue = msg.payload.formValue || {}\nlet growOutSetupRackId = formValue.breedingGrowOutSetupRackId\nlet payload = {line, form}\nlet errors = []\n\nif (!growOutSetupRackId) {\n    errors.push('Required growOutSetupRackId')\n}\n\nmsg.errors = errors\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 680,
        "y": 380,
        "wires": [
            [
                "43836266.1a74cc"
            ]
        ]
    },
    {
        "id": "3abd34ef.5bf27c",
        "type": "function",
        "z": "c5555ac2.79ff88",
        "name": "",
        "func": "let rackKey = 'breedingGrowOutSetupRackId'\nlet requestBody = msg.req.body || {}\nlet formValue = requestBody.formValue || {}\nlet rackId = formValue[rackKey]\nlet incompleteForms = msg.payload\nlet found = incompleteForms.find((incompleteForm) => {\n    if (incompleteForm[rackKey] === rackId) return true\n})\nlet payload = {fieldKey: 'setupDateId', fieldValue: ''}\n\n// node.warn(found)\n\nif (found) {\n    payload.fieldValue = found.setupDateId || ''\n} else {\n    payload = null\n}\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1140,
        "y": 380,
        "wires": [
            [
                "aefdf346.b69fd"
            ]
        ]
    },
    {
        "id": "33ad6e38.4abd42",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.prodLine",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "breeding",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "farming",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 480,
        "wires": [
            [
                "49192f38.c81ca"
            ],
            [
                "49192f38.c81ca"
            ]
        ]
    },
    {
        "id": "49192f38.c81ca",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.stationForm",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "grow-out-harvest",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 410,
        "y": 480,
        "wires": [
            [
                "90f5e7d4.f24138"
            ]
        ]
    },
    {
        "id": "90f5e7d4.f24138",
        "type": "switch",
        "z": "c5555ac2.79ff88",
        "name": "",
        "property": "payload.fieldKey",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "trayCount",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 550,
        "y": 480,
        "wires": [
            [
                "b7787ac.89da288"
            ]
        ]
    },
    {
        "id": "db631605.440158",
        "type": "link in",
        "z": "c5555ac2.79ff88",
        "name": "",
        "links": [
            "d9acbad8.531aa8"
        ],
        "x": 135,
        "y": 480,
        "wires": [
            [
                "33ad6e38.4abd42"
            ]
        ]
    },
    {
        "id": "ad7ba80e.f27888",
        "type": "link out",
        "z": "c5555ac2.79ff88",
        "name": "",
        "links": [
            "54321138.f20d7"
        ],
        "x": 1155,
        "y": 480,
        "wires": []
    },
    {
        "id": "b7787ac.89da288",
        "type": "function",
        "z": "c5555ac2.79ff88",
        "name": "",
        "func": "let query = {\n    \"selector\": {\n      \"growthChamberId\": msg.payload.formValue.growthChamberId,\n      \"breedingGrowOutSetupRackId\": msg.payload.formValue.breedingGrowOutSetupRackId,\n      \"setupDateId\": msg.payload.formValue.setupDateId,\n      \"incomplete\": {\n         \"$exists\": true\n      }\n  }\n}\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 480,
        "wires": [
            [
                "5fa287f8.a99138"
            ]
        ]
    },
    {
        "id": "5fa287f8.a99138",
        "type": "cloudantplus in",
        "z": "c5555ac2.79ff88",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 870,
        "y": 480,
        "wires": [
            [
                "43d9e7d8.990eb8"
            ]
        ]
    },
    {
        "id": "43d9e7d8.990eb8",
        "type": "function",
        "z": "c5555ac2.79ff88",
        "name": "",
        "func": "// let rackKey = 'breedingGrowOutSetupRackId'\n// let requestBody = msg.req.body || {}\n// let formValue = requestBody.formValue || {}\n// let rackId = formValue[rackKey]\n// let incompleteForms = msg.payload\n// let found = incompleteForms.find((incompleteForm) => {\n//     if (incompleteForm[rackKey] === rackId) return true\n// })\nlet payload\n\nif (msg.payload.docs[0].trayCount) {\n    payload = {fieldKey: 'trayCount', fieldValue: msg.payload.docs[0].trayCount}\n}\n\n// node.warn(found)\n\n// if (found) {\n//     payload.fieldValue = found.trayCount || ''\n// } else {\n//     payload = null\n// }\n\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1040,
        "y": 480,
        "wires": [
            [
                "ad7ba80e.f27888"
            ]
        ]
    },
    {
        "id": "c9c00a1d.56d0f8",
        "type": "comment",
        "z": "c5555ac2.79ff88",
        "name": "breeding/farming grow-out-harvest trayCount",
        "info": "",
        "x": 370,
        "y": 440,
        "wires": []
    },
    {
        "id": "5fd18fc1.4ca02",
        "type": "comment",
        "z": "3517e109.8c2a3e",
        "name": "Handles template type on other flow page",
        "info": "",
        "x": 760,
        "y": 1400,
        "wires": []
    },
    {
        "id": "d8696360.cfaf7",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "hasDefaultValue",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 650,
        "y": 1700,
        "wires": [
            [
                "50237150.340e7"
            ],
            [
                "e4a937a5.628008"
            ]
        ]
    },
    {
        "id": "55a2da91.cf0b94",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 960,
        "y": 1720,
        "wires": []
    },
    {
        "id": "e4a937a5.628008",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "msg.payload = null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 800,
        "y": 1720,
        "wires": [
            [
                "55a2da91.cf0b94"
            ]
        ]
    },
    {
        "id": "4d1d9230.d7f16c",
        "type": "http response",
        "z": "3517e109.8c2a3e",
        "name": "",
        "statusCode": "200",
        "headers": {
            "content-type": "text/plain"
        },
        "x": 1120,
        "y": 1680,
        "wires": []
    },
    {
        "id": "c6ef7fe7.2dca7",
        "type": "link in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "links": [
            "6459fa9a.a96b44",
            "af74407d.9781c",
            "8b2e795f.6c7468",
            "f7dc6fc9.75989",
            "93540ac4.5a5a78"
        ],
        "x": 155,
        "y": 1700,
        "wires": [
            [
                "270ba4dd.5e682c"
            ]
        ]
    },
    {
        "id": "270ba4dd.5e682c",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Operation Form Fields that has default value",
        "func": "const line = msg.payload.prodLine\nconst form = msg.payload.stationForm\nconst field = msg.payload.fieldKey\nconst formFields = {\n    'breeding': {\n        'nursery-setup': ['setupDateIds'],\n        'nursery-harvest': ['batchId', 'setupDateId'],\n        'grow-out-harvest': ['setupDateId', 'trayCount']\n    },\n    'farming': {\n        'nursery-harvest': ['batchId'],\n        'grow-out-harvest': ['setupDateId', 'trayCount']\n    }\n}\nlet fields = []\n\nif (formFields[line]) {\n    fields = formFields[line][form] || []\n}\n\n// node.warn(fields)\n\nmsg.hasDefaultValue = fields.includes(field)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 390,
        "y": 1700,
        "wires": [
            [
                "d8696360.cfaf7"
            ]
        ]
    },
    {
        "id": "50237150.340e7",
        "type": "subflow:c5555ac2.79ff88",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 880,
        "y": 1680,
        "wires": [
            [
                "4d1d9230.d7f16c"
            ]
        ]
    },
    {
        "id": "2c247449.264e2c",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.prodLine",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "breeding",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "farming",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 730,
        "y": 1500,
        "wires": [
            [
                "ed802ee9.e1d1e"
            ],
            [
                "209a4281.fc5c0e"
            ],
            [
                "f7dc6fc9.75989"
            ]
        ]
    },
    {
        "id": "677cb862.0a9c48",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "hask",
                "v": "templateType",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 590,
        "y": 1480,
        "wires": [
            [
                "6563e1e0.64e3c"
            ],
            [
                "2c247449.264e2c"
            ]
        ]
    },
    {
        "id": "ed802ee9.e1d1e",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.stationForm",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "grow-out-harvest",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "pupation-emergence-setup-detail",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "process-check-in-out",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 4,
        "x": 870,
        "y": 1460,
        "wires": [
            [
                "4aecebed.6ff304"
            ],
            [
                "3b21fdf5.d06d72"
            ],
            [
                "4da2ba98.9e78f4"
            ],
            [
                "6459fa9a.a96b44"
            ]
        ]
    },
    {
        "id": "209a4281.fc5c0e",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.stationForm",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "attendance",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "grow-out-harvest",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 870,
        "y": 1600,
        "wires": [
            [
                "27ff4ff7.f8cd2"
            ],
            [
                "f43aa8a3.181f68"
            ],
            [
                "8b2e795f.6c7468"
            ]
        ]
    },
    {
        "id": "f7dc6fc9.75989",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "links": [
            "c6ef7fe7.2dca7"
        ],
        "x": 835,
        "y": 1540,
        "wires": []
    },
    {
        "id": "1c03fe88.f886e1",
        "type": "http in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "url": "/api/:tenant/forms/default-value",
        "method": "post",
        "upload": false,
        "swaggerDoc": "",
        "x": 280,
        "y": 1480,
        "wires": [
            [
                "677cb862.0a9c48"
            ]
        ]
    },
    {
        "id": "6563e1e0.64e3c",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "from Forms API default-value",
        "links": [
            "17029410.68744c"
        ],
        "x": 695,
        "y": 1460,
        "wires": []
    },
    {
        "id": "d1a00909.010a58",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "msg.original = msg.payload;\n// queries = []\n// if(msg.payload.formValue.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.formValue.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.formValue.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//         query.key.push(msg.req.params.tenant);\n//         query.key.push(msg.payload.formValue.breedingGrowOutSetupRackId);\n//         queries.push(query);\n    \n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"breedingGrowOutSetupRackId\")\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1150,
        "y": 1400,
        "wires": [
            [
                "95605c99.a1a3f"
            ]
        ]
    },
    {
        "id": "3b21fdf5.d06d72",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "msg.original = msg.payload;\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"pupationRackID\")\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 1440,
        "wires": [
            [
                "9fe0462f.2eaa28"
            ]
        ]
    },
    {
        "id": "4da2ba98.9e78f4",
        "type": "subflow:3a7417a6.812638",
        "z": "3517e109.8c2a3e",
        "name": "getProcessFormButtonValue",
        "env": [],
        "x": 1080,
        "y": 1480,
        "wires": []
    },
    {
        "id": "6459fa9a.a96b44",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "links": [
            "c6ef7fe7.2dca7"
        ],
        "x": 975,
        "y": 1520,
        "wires": []
    },
    {
        "id": "27ff4ff7.f8cd2",
        "type": "subflow:a2e16a21.c40328",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 1100,
        "y": 1560,
        "wires": []
    },
    {
        "id": "f43aa8a3.181f68",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "Query",
        "func": "msg.original = msg.payload;\n// queries = []\n// if(msg.payload.formValue.breedingGrowOutSetupRackId){\n//     if(Array.isArray(msg.payload.formValue.breedingGrowOutSetupRackId)){\n//         for(let rackId of msg.payload.formValue.breedingGrowOutSetupRackId){\n//             let query = { key: [] }\n//             query.key.push(msg.req.params.tenant);\n//             query.key.push(rackId);\n//             queries.push(query);\n//         }\n//     }\n//     else{\n//         let query = { key: [] }\n//         query.key.push(msg.req.params.tenant);\n//         query.key.push(msg.payload.formValue.breedingGrowOutSetupRackId);\n//         queries.push(query);\n    \n//     }\n// }\n// else{\n//     msg.empty = true;\n// }\nquery = {}\nquery.key = []\nquery.key.push(msg.req.params.tenant);\nquery.key.push(\"breedingGrowOutSetupRackId\")\n\nmsg.payload = query;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 1010,
        "y": 1600,
        "wires": [
            [
                "9eac419d.41f98"
            ]
        ]
    },
    {
        "id": "8b2e795f.6c7468",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "links": [
            "c6ef7fe7.2dca7"
        ],
        "x": 975,
        "y": 1640,
        "wires": []
    },
    {
        "id": "95605c99.a1a3f",
        "type": "subflow:d085109b.41a3e",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 1330,
        "y": 1400,
        "wires": []
    },
    {
        "id": "9fe0462f.2eaa28",
        "type": "subflow:74e69b13.a82ff4",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 1230,
        "y": 1440,
        "wires": []
    },
    {
        "id": "9eac419d.41f98",
        "type": "subflow:d085109b.41a3e",
        "z": "3517e109.8c2a3e",
        "name": "",
        "env": [],
        "x": 1190,
        "y": 1600,
        "wires": []
    },
    {
        "id": "4aecebed.6ff304",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.fieldKey",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "trayCount",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1010,
        "y": 1400,
        "wires": [
            [
                "93540ac4.5a5a78"
            ],
            [
                "d1a00909.010a58"
            ]
        ]
    },
    {
        "id": "93540ac4.5a5a78",
        "type": "link out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "links": [
            "c6ef7fe7.2dca7"
        ],
        "x": 1135,
        "y": 1360,
        "wires": []
    },
    {
        "id": "819b2eae.9ded8",
        "type": "switch",
        "z": "83f6cb29.f6a468",
        "name": "isCommonTemplateTypes",
        "property": "isCommonTemplateTypes",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 550,
        "y": 1640,
        "wires": [
            [
                "36887a6f.a3d3b6"
            ],
            [
                "1206e083.c2926f"
            ]
        ]
    },
    {
        "id": "ad7eab30.4f2528",
        "type": "link in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "links": [
            "b00cc0f1.d350b"
        ],
        "x": 855,
        "y": 1620,
        "wires": [
            [
                "578e50f9.c7b8e"
            ]
        ]
    },
    {
        "id": "36887a6f.a3d3b6",
        "type": "link out",
        "z": "83f6cb29.f6a468",
        "name": "",
        "links": [
            "b961a3d9.c6827"
        ],
        "x": 715,
        "y": 1620,
        "wires": []
    },
    {
        "id": "b00cc0f1.d350b",
        "type": "link out",
        "z": "83f6cb29.f6a468",
        "name": "",
        "links": [
            "ad7eab30.4f2528"
        ],
        "x": 635,
        "y": 1720,
        "wires": []
    },
    {
        "id": "b961a3d9.c6827",
        "type": "link in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "links": [
            "36887a6f.a3d3b6"
        ],
        "x": 855,
        "y": 1680,
        "wires": [
            [
                "838c99be.fbd328"
            ]
        ]
    },
    {
        "id": "838c99be.fbd328",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "",
        "func": "let selector = {\n    docType: 'template',\n    templateType: msg.payload.templateType\n}\nmsg.payload = {\n    selector\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 1680,
        "wires": [
            [
                "6de651f3.415ed"
            ]
        ]
    },
    {
        "id": "6de651f3.415ed",
        "type": "cloudantplus in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "templateFormSubmission",
        "index": "templateFormSubmission",
        "x": 1150,
        "y": 1680,
        "wires": [
            [
                "e283cdb.2ee963"
            ]
        ]
    },
    {
        "id": "e283cdb.2ee963",
        "type": "switch",
        "z": "83f6cb29.f6a468",
        "name": "",
        "property": "payload.docs",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nempty"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1310,
        "y": 1680,
        "wires": [
            [
                "97b92334.0aff5"
            ],
            [
                "995df42d.b102b8"
            ]
        ]
    },
    {
        "id": "995df42d.b102b8",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "404",
        "headers": {},
        "x": 1460,
        "y": 1700,
        "wires": []
    },
    {
        "id": "97b92334.0aff5",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "",
        "func": "msg.payload = msg.payload.docs[0]\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1460,
        "y": 1660,
        "wires": [
            [
                "cc6a2dbd.df072"
            ]
        ]
    },
    {
        "id": "cc6a2dbd.df072",
        "type": "http response",
        "z": "83f6cb29.f6a468",
        "name": "",
        "statusCode": "200",
        "headers": {},
        "x": 1620,
        "y": 1660,
        "wires": []
    },
    {
        "id": "d62eee60.efe8d",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "1f50769f.97b799",
        "name": "",
        "env": [],
        "x": 480,
        "y": 1580,
        "wires": [
            [
                "dc2d8f8e.4b253"
            ]
        ]
    },
    {
        "id": "92c395c7.416498",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "1f50769f.97b799",
        "name": "",
        "env": [],
        "x": 440,
        "y": 1740,
        "wires": [
            [
                "c52cf692.d11aa8"
            ]
        ]
    },
    {
        "id": "87aa43.9eb475c",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "1f50769f.97b799",
        "name": "",
        "x": 430,
        "y": 460,
        "wires": [
            [
                "8c8b9c3a.4332e"
            ]
        ]
    },
    {
        "id": "cda0dabe.45ff28",
        "type": "subflow:7e86a41c.5a82dc",
        "z": "1f50769f.97b799",
        "name": "",
        "x": 430,
        "y": 1480,
        "wires": [
            [
                "59612be9.7f6274"
            ]
        ]
    },
    {
        "id": "d47da0f9.69dc5",
        "type": "inject",
        "z": "48df00a1.c6d5a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 130,
        "y": 960,
        "wires": [
            [
                "839099e7.5ce328"
            ]
        ]
    },
    {
        "id": "839099e7.5ce328",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "C06426B267AC nest",
        "func": "msg.payload = {\n    \"ID\": \"C06426B267AC\",\n    \"deviceName\": \"[]\",\n    \"recipeVer\": 0,\n    \"firmwareVer\": \"v2.13.2\",\n    \"uptime\": 0,\n    \"ts\": 1620981190,\n    \"location\": \"null\",\n    \"IP\": \"192.168.43.237\",\n    \"values\": {\n        \"temp\": 36,\n        \"rssi\": -34,\n        \"configInteval\": 15000\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 960,
        "wires": [
            [
                "7e03d26f.fc959c"
            ]
        ]
    },
    {
        "id": "9311ff96.01602",
        "type": "inject",
        "z": "48df00a1.c6d5a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "str",
        "x": 130,
        "y": 1000,
        "wires": [
            [
                "cce379ed.58fc48"
            ]
        ]
    },
    {
        "id": "cce379ed.58fc48",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "C06426B267AC flat",
        "func": "msg.payload = {\n    \"ID\": \"C06426B267AC\",\n    \"deviceName\": \"GC_01-RC-TEST\",\n    \"recipeVer\": 0,\n    \"firmwareVer\": \"v2.13.2\",\n    \"uptime\": 0,\n    \"ts\": 1622653200,\n    \"location\": \"GC_01\",\n    \"IP\": \"192.168.43.237\",\n    \"temp\": 36,\n    \"rssi\": -34,\n    \"configInteval\": 15000\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 1000,
        "wires": [
            [
                "7e03d26f.fc959c"
            ]
        ]
    },
    {
        "id": "ecbd8b40.e7ad18",
        "type": "change",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.values",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 420,
        "wires": [
            [
                "f9353f1c.87d62"
            ]
        ]
    },
    {
        "id": "796aad09.dfd854",
        "type": "switch",
        "z": "9e2414d.f07a1e8",
        "name": "heroku environment?",
        "property": "INSECT_ENV",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "heroku",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 380,
        "y": 120,
        "wires": [
            [
                "7cd4951e.6acadc"
            ],
            [
                "6f4a9f32.38b42"
            ]
        ]
    },
    {
        "id": "8b4d8e99.8e21b",
        "type": "inject",
        "z": "9e2414d.f07a1e8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 180,
        "y": 120,
        "wires": [
            [
                "796aad09.dfd854"
            ]
        ]
    },
    {
        "id": "7cd4951e.6acadc",
        "type": "function",
        "z": "9e2414d.f07a1e8",
        "name": "",
        "func": "msg.payload = {\n    dailyExport: '1WjFpZw6HHlHBgyGPdJCKVCd_mgvYRi07'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 100,
        "wires": [
            [
                "63a85ee1.0911d"
            ]
        ]
    },
    {
        "id": "6f4a9f32.38b42",
        "type": "function",
        "z": "9e2414d.f07a1e8",
        "name": "",
        "func": "msg.payload = {\n    dailyExport: '1Oix4Of_YB6S4pAQl0_FtYtQrddjOCdWW'\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 600,
        "y": 140,
        "wires": [
            [
                "985400b.c58a2"
            ]
        ]
    },
    {
        "id": "63a85ee1.0911d",
        "type": "change",
        "z": "9e2414d.f07a1e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "google-drive-folder-ids",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "985400b.c58a2",
        "type": "change",
        "z": "9e2414d.f07a1e8",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "google-drive-folder-ids",
                "pt": "global",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "a7026c1.afaa49",
        "type": "comment",
        "z": "9e2414d.f07a1e8",
        "name": "Google Sheet Folder IDs",
        "info": "",
        "x": 390,
        "y": 60,
        "wires": []
    },
    {
        "id": "2fdc7377.e8281c",
        "type": "function",
        "z": "9d22d937.3a9108",
        "name": "prepare query",
        "func": "msg.payload = {\n    selector: {\n        tenant: msg.req.params.tenant, \n        templateType: msg.original.templateType    \n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 420,
        "wires": [
            [
                "c6edef60.7fbf6"
            ]
        ]
    },
    {
        "id": "c6edef60.7fbf6",
        "type": "cloudantplus in",
        "z": "9d22d937.3a9108",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "mustache",
        "index": "mustache",
        "x": 470,
        "y": 420,
        "wires": [
            [
                "edaddd1e.b8601"
            ]
        ]
    },
    {
        "id": "1b860cfb.98a2d3",
        "type": "comment",
        "z": "9d22d937.3a9108",
        "name": "device-param",
        "info": "",
        "x": 470,
        "y": 380,
        "wires": []
    },
    {
        "id": "edaddd1e.b8601",
        "type": "switch",
        "z": "9d22d937.3a9108",
        "name": "results count",
        "property": "payload.docs.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 750,
        "y": 460,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "2cb7d881.f0b1c8",
        "type": "switch",
        "z": "83f6cb29.f6a468",
        "name": "",
        "property": "original.deviceParam.templateType",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "device-param",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 610,
        "y": 1080,
        "wires": [
            [
                "76bcb920.3c6628"
            ],
            [
                "8d90f4d1.374b08"
            ]
        ]
    },
    {
        "id": "76bcb920.3c6628",
        "type": "function",
        "z": "83f6cb29.f6a468",
        "name": "prepare query",
        "func": "// msg.payload = {\n//     \"selector\": {\n//         \"docType\": \"language\",\n//         \"tenant\": msg.req.params.tenant,\n//         \"productionLine\": msg.original.productionLine,\n//         \"workstationForm\": msg.original.workstationForm,\n//         \"langType\": msg.original.langType\n//     },\n//     \"fields\": [],\n//     \"sort\": [],\n//     \"limit\": 1,\n//     \"skip\": 0,\n//     \"execution_stats\": true\n// }\n\nmsg.payload = {\n    selector: {\n        tenant: msg.req.params.tenant,\n        templateType: msg.original.deviceParam.templateType\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1080,
        "wires": [
            [
                "b2cda6fc.1b2088"
            ]
        ]
    },
    {
        "id": "b2cda6fc.1b2088",
        "type": "cloudantplus in",
        "z": "83f6cb29.f6a468",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectconfig",
        "service": "_ext_",
        "search": "_query_",
        "design": "mustache",
        "index": "mustache",
        "x": 810,
        "y": 1140,
        "wires": [
            [
                "f0004914.a70e08"
            ]
        ]
    },
    {
        "id": "f0004914.a70e08",
        "type": "switch",
        "z": "83f6cb29.f6a468",
        "name": "results count",
        "property": "payload.docs.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "gt",
                "v": "1",
                "vt": "num"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 810,
        "y": 1200,
        "wires": [
            [
                "79a063e8.17fc9c"
            ],
            [
                "3eb34e28.58d342"
            ],
            [
                "7167deb5.e342"
            ]
        ]
    },
    {
        "id": "ddd3a2e8.d5dc5",
        "type": "inject",
        "z": "dc8c4370.78e2",
        "name": "design names",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "8",
        "topic": "",
        "payload": "[\"sortDate\"]",
        "payloadType": "json",
        "x": 240,
        "y": 2720,
        "wires": [
            [
                "9a85f59c.54d038"
            ]
        ],
        "info": "# Design names\n\nAdd an array of design document names\nto check. Add these names to the split node\nand provide a template containing the code"
    },
    {
        "id": "ee3c23c.2f240e",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for PUT",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/sensordata/_design/\"+msg.topic;\nmsg.method=\"PUT\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 3040,
        "wires": [
            [
                "d1ed7881.df6998"
            ]
        ]
    },
    {
        "id": "5991b715.e9eaf8",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "asset",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/sortDate\",\n  \"_rev\": \"9-40ec8f8f5de5226a8ed7261442de3e9b\",\n  \"views\": {\n    \"by-date\": {\n      \"map\": \"function (doc) {\\n  var splitted = doc._id.split('-')\\n  var year = splitted[1]\\n  var month = splitted[2]\\n  var date = splitted[3]\\n  var key = year + '-' + month + '-' + date\\n  emit(key, doc._id);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 730,
        "y": 2720,
        "wires": [
            [
                "4981eefa.c14cb"
            ]
        ]
    },
    {
        "id": "9a85f59c.54d038",
        "type": "split",
        "z": "dc8c4370.78e2",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "",
        "x": 270,
        "y": 2760,
        "wires": [
            [
                "4d760a49.c9b454"
            ]
        ]
    },
    {
        "id": "ebe98052.0f5d6",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 1110,
        "y": 2880,
        "wires": [
            [
                "49240359.b8f58c"
            ]
        ]
    },
    {
        "id": "3a92a498.c340fc",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "prepare URL for GET",
        "func": "msg.url = env.get(\"INSECT_DB\")+\"/sensordata/_design/\"+msg.topic;\nmsg.method=\"GET\"\nmsg.rejectUnauthorized = false;\nmsg.followRedirects = false;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 220,
        "y": 2920,
        "wires": [
            [
                "536f0f04.d517d"
            ]
        ]
    },
    {
        "id": "536f0f04.d517d",
        "type": "http request",
        "z": "dc8c4370.78e2",
        "name": "",
        "method": "use",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": true,
        "proxy": "",
        "authType": "basic",
        "x": 250,
        "y": 2960,
        "wires": [
            [
                "1d431b83.7a4b74"
            ]
        ]
    },
    {
        "id": "4d760a49.c9b454",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "topic",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 250,
        "y": 2800,
        "wires": [
            [
                "47ee1fd1.afce"
            ]
        ]
    },
    {
        "id": "efe649e4.0ea118",
        "type": "function",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "func": "if (msg.existingDoc || msg.existingDoc._rev) {\n    msg.hasRev = true\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1120,
        "y": 2720,
        "wires": [
            [
                "33eefb23.c9e4f4"
            ]
        ]
    },
    {
        "id": "33eefb23.c9e4f4",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "hasRev",
        "property": "hasRev",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1120,
        "y": 2760,
        "wires": [
            [
                "e3a8642.20a8d98"
            ],
            [
                "14d23ead.bfa601"
            ]
        ]
    },
    {
        "id": "1d431b83.7a4b74",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "existingDoc",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 220,
        "y": 3000,
        "wires": [
            [
                "ee3c23c.2f240e"
            ]
        ]
    },
    {
        "id": "e3a8642.20a8d98",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload._rev",
                "pt": "msg",
                "to": "existingDoc._rev",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1080,
        "y": 2800,
        "wires": [
            [
                "ebe98052.0f5d6"
            ]
        ]
    },
    {
        "id": "ab5cad70.9f156",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "design name",
        "property": "topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sortDate",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 570,
        "y": 2720,
        "wires": [
            [
                "5991b715.e9eaf8"
            ]
        ]
    },
    {
        "id": "e9e48e99.1c09d",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "sensordata db",
        "info": "",
        "x": 230,
        "y": 2680,
        "wires": []
    },
    {
        "id": "14d23ead.bfa601",
        "type": "change",
        "z": "dc8c4370.78e2",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "payload._rev",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 2840,
        "wires": [
            [
                "ebe98052.0f5d6"
            ]
        ]
    },
    {
        "id": "bb47a88d.278498",
        "type": "comment",
        "z": "dc8c4370.78e2",
        "name": "template here",
        "info": "",
        "x": 510,
        "y": 2680,
        "wires": []
    },
    {
        "id": "47ee1fd1.afce",
        "type": "switch",
        "z": "dc8c4370.78e2",
        "name": "should delay?",
        "property": "ENVIRONMENT",
        "propertyType": "env",
        "rules": [
            {
                "t": "eq",
                "v": "production",
                "vt": "str"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 240,
        "y": 2840,
        "wires": [
            [
                "b5a4b492.655658"
            ],
            [
                "3a92a498.c340fc"
            ]
        ]
    },
    {
        "id": "b5a4b492.655658",
        "type": "delay",
        "z": "dc8c4370.78e2",
        "name": "",
        "pauseType": "rate",
        "timeout": "100",
        "timeoutUnits": "milliseconds",
        "rate": "3",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 250,
        "y": 2880,
        "wires": [
            [
                "3a92a498.c340fc"
            ]
        ]
    },
    {
        "id": "d1ed7881.df6998",
        "type": "link out",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "e569eb54.054dd8",
            "119c0d55.7a2b33",
            "329101e9.3f95ee"
        ],
        "x": 375,
        "y": 3040,
        "wires": []
    },
    {
        "id": "e569eb54.054dd8",
        "type": "link in",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "d1ed7881.df6998"
        ],
        "x": 455,
        "y": 2720,
        "wires": [
            [
                "ab5cad70.9f156"
            ]
        ]
    },
    {
        "id": "4981eefa.c14cb",
        "type": "link out",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "8aa6149.7bba9e8"
        ],
        "x": 835,
        "y": 2720,
        "wires": []
    },
    {
        "id": "8aa6149.7bba9e8",
        "type": "link in",
        "z": "dc8c4370.78e2",
        "name": "",
        "links": [
            "4981eefa.c14cb",
            "835f3f85.65c2",
            "2d1b9b4e.afe514"
        ],
        "x": 1015,
        "y": 2720,
        "wires": [
            [
                "efe649e4.0ea118"
            ]
        ]
    },
    {
        "id": "49240359.b8f58c",
        "type": "debug",
        "z": "dc8c4370.78e2",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1110,
        "y": 2920,
        "wires": []
    },
    {
        "id": "3d92bb28.b01234",
        "type": "function",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "func": "msg.url = env.get('INSECT_DB') + '/sensordata'\nmsg.method = 'PUT'\nmsg.rejectUnauthorized = false\nmsg.followRedirects = false\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 340,
        "wires": [
            [
                "ce6a33bc.2bee5"
            ]
        ]
    },
    {
        "id": "ce6a33bc.2bee5",
        "type": "http request",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "method": "use",
        "ret": "txt",
        "paytoqs": "ignore",
        "url": "",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 450,
        "y": 340,
        "wires": [
            [
                "a7af3cd2.9a3c5"
            ]
        ]
    },
    {
        "id": "e59de7.39f3c218",
        "type": "inject",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "4",
        "topic": "",
        "x": 130,
        "y": 340,
        "wires": [
            [
                "3d92bb28.b01234"
            ]
        ]
    },
    {
        "id": "a7af3cd2.9a3c5",
        "type": "debug",
        "z": "efdcd1da.2bbf4",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 340,
        "wires": []
    },
    {
        "id": "95e7e265.c439d",
        "type": "comment",
        "z": "efdcd1da.2bbf4",
        "name": "Create database - sensordata",
        "info": "",
        "x": 200,
        "y": 300,
        "wires": []
    },
    {
        "id": "ceb2a713.5cc458",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "let contextName = 'sensordata-last-redis-sync'\nlet lastDataStored = global.get(contextName) || {}\nlet deviceId = msg.payload.ID\nlet yesterdayDate = getYesterdayDate()\nlet proceedStoreToCouch = false\n\nif (!lastDataStored[deviceId]) {\n    proceedStoreToCouch = true\n} else if (lastDataStored[deviceId] != yesterdayDate) {\n    proceedStoreToCouch = true\n}\n\nif (proceedStoreToCouch) {\n    lastDataStored[deviceId] = yesterdayDate\n    global.set(contextName, lastDataStored)\n}\n\nmsg.proceedStoreToCouch = proceedStoreToCouch\nmsg.topic = deviceId + '-' + yesterdayDate\nmsg.payload = null\nmsg.contextName = contextName\nreturn msg;\n\nfunction transformDate(unix) {\n    let d = new Date(unix * 1000)\n    let year = d.getUTCFullYear()\n    let month = d.getUTCMonth() + 1\n    let date = d.getUTCDate()\n    \n    let transformed = ''\n    transformed += formatDateDigits(year) + '-'\n    transformed += formatDateDigits(month) + '-'\n    transformed += formatDateDigits(date)\n    \n    return transformed\n}\n\nfunction formatDateDigits(digits) {\n    let str = digits.toString()\n    if (str.length > 1) return str\n    else return '0' + str\n}\n\nfunction getYesterdayDate() {\n    let now = new Date()\n    now.setUTCDate(now.getUTCDate() - 1)\n    return transformDate(now.getTime() / 1000)\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1160,
        "wires": [
            [
                "cc162cda.310d7"
            ]
        ]
    },
    {
        "id": "fb95b231.c2cf5",
        "type": "redis-command",
        "z": "48df00a1.c6d5a",
        "server": "c9356964.d4c6c8",
        "command": "GET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 640,
        "y": 1160,
        "wires": [
            [
                "7836a2e.cc7f25c",
                "4b417796.1e3d08"
            ]
        ]
    },
    {
        "id": "cc162cda.310d7",
        "type": "switch",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "proceedStoreToCouch",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 490,
        "y": 1160,
        "wires": [
            [
                "fb95b231.c2cf5",
                "4555c5fb.3699ac"
            ]
        ]
    },
    {
        "id": "5167ac19.0d0c04",
        "type": "switch",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "nnull"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 930,
        "y": 1160,
        "wires": [
            [
                "12b2ed1.d7c6e13"
            ],
            [
                "11a040d8.e538ff"
            ]
        ]
    },
    {
        "id": "4555c5fb.3699ac",
        "type": "debug",
        "z": "48df00a1.c6d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 630,
        "y": 1120,
        "wires": []
    },
    {
        "id": "e2e892db.e85f4",
        "type": "link in",
        "z": "48df00a1.c6d5a",
        "name": "",
        "links": [
            "3d49a93c.aa5566"
        ],
        "x": 215,
        "y": 1160,
        "wires": [
            [
                "ceb2a713.5cc458"
            ]
        ]
    },
    {
        "id": "3d49a93c.aa5566",
        "type": "link out",
        "z": "48df00a1.c6d5a",
        "name": "",
        "links": [
            "e2e892db.e85f4"
        ],
        "x": 755,
        "y": 1080,
        "wires": []
    },
    {
        "id": "b78c1825.1e3668",
        "type": "link in",
        "z": "48df00a1.c6d5a",
        "name": "",
        "links": [
            "12b2ed1.d7c6e13"
        ],
        "x": 215,
        "y": 1280,
        "wires": [
            [
                "47b4013f.51c35"
            ]
        ]
    },
    {
        "id": "47b4013f.51c35",
        "type": "change",
        "z": "48df00a1.c6d5a",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload._id",
                "pt": "msg",
                "to": "topic",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 380,
        "y": 1280,
        "wires": [
            [
                "79aab1f7.6a998"
            ]
        ]
    },
    {
        "id": "79aab1f7.6a998",
        "type": "delay",
        "z": "48df00a1.c6d5a",
        "name": "",
        "pauseType": "rate",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "x": 590,
        "y": 1280,
        "wires": [
            [
                "3d111606.e2629a",
                "10b8bcee.dccd93"
            ]
        ]
    },
    {
        "id": "3d111606.e2629a",
        "type": "cloudantplus out",
        "z": "48df00a1.c6d5a",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "sensordata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 770,
        "y": 1280,
        "wires": [
            [
                "7dcc9237.3c7a0c",
                "cd3679d7.27a348"
            ]
        ]
    },
    {
        "id": "5b80943f.1aa29c",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "msg.payload = {\n  \"_id\": \"004A86B5AA8C-2021-06-16\",\n  \"_rev\": \"1-1e22b67a97c48d9a280d7a8956bdc7db\",\n  \"ID\": \"004A86B5AA8C\",\n  \"uptime\": 0,\n  \"location\": \"GC0\",\n  \"count\": 44,\n  \"values\": {\n    \"105140\": {\n      \"ts\": 1610333501,\n      \"pres\": 100936,\n      \"gas\": 824,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.19,\n      \"hum\": 72.419,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105150\": {\n      \"ts\": 1610333516,\n      \"pres\": 100940,\n      \"gas\": 4073,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.31531,\n      \"hum\": 71.34791,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105220\": {\n      \"ts\": 1610333546,\n      \"pres\": 100940,\n      \"gas\": 8784,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.38531,\n      \"hum\": 71.16571,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105240\": {\n      \"ts\": 1610333561,\n      \"pres\": 100938,\n      \"gas\": 10870,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.42531,\n      \"hum\": 70.94375,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105310\": {\n      \"ts\": 1610333591,\n      \"pres\": 100938,\n      \"gas\": 14458,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.35531,\n      \"hum\": 71.18324,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105320\": {\n      \"ts\": 1610333606,\n      \"pres\": 100938,\n      \"gas\": 16164,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.37531,\n      \"hum\": 71.63186,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -50\n    },\n    \"105350\": {\n      \"ts\": 1610333636,\n      \"pres\": 100936,\n      \"gas\": 19281,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.42531,\n      \"hum\": 71.27545,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105410\": {\n      \"ts\": 1610333651,\n      \"pres\": 100938,\n      \"gas\": 20620,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.46531,\n      \"hum\": 71.1424,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105440\": {\n      \"ts\": 1610333681,\n      \"pres\": 100936,\n      \"gas\": 23516,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.44531,\n      \"hum\": 71.09451,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105450\": {\n      \"ts\": 1610333696,\n      \"pres\": 100934,\n      \"gas\": 24754,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.46531,\n      \"hum\": 71.00657,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105520\": {\n      \"ts\": 1610333726,\n      \"pres\": 100936,\n      \"gas\": 27245,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.53531,\n      \"hum\": 70.87684,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105540\": {\n      \"ts\": 1610333741,\n      \"pres\": 100934,\n      \"gas\": 28438,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.55531,\n      \"hum\": 70.73704,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105610\": {\n      \"ts\": 1610333771,\n      \"pres\": 100938,\n      \"gas\": 30535,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.51531,\n      \"hum\": 71.21396,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105620\": {\n      \"ts\": 1610333786,\n      \"pres\": 100938,\n      \"gas\": 31491,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.57531,\n      \"hum\": 70.86607,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105650\": {\n      \"ts\": 1610333816,\n      \"pres\": 100934,\n      \"gas\": 33730,\n      \"IAQ\": 2.480738,\n      \"iaqA\": 1,\n      \"temp\": 23.61531,\n      \"hum\": 70.68295,\n      \"eqco2\": 460.6517,\n      \"VOC\": 0.430913,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105710\": {\n      \"ts\": 1610333831,\n      \"pres\": 100936,\n      \"gas\": 34671,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.65531,\n      \"hum\": 70.55128,\n      \"eqco2\": 412.0282,\n      \"VOC\": 0.358581,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105740\": {\n      \"ts\": 1610333861,\n      \"pres\": 100936,\n      \"gas\": 36405,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.68531,\n      \"hum\": 70.63528,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105750\": {\n      \"ts\": 1610333876,\n      \"pres\": 100932,\n      \"gas\": 37571,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.61531,\n      \"hum\": 70.69201,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105820\": {\n      \"ts\": 1610333906,\n      \"pres\": 100934,\n      \"gas\": 39138,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.62531,\n      \"hum\": 70.8566,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105840\": {\n      \"ts\": 1610333921,\n      \"pres\": 100934,\n      \"gas\": 39952,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.62531,\n      \"hum\": 70.83862,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105910\": {\n      \"ts\": 1610333951,\n      \"pres\": 100932,\n      \"gas\": 41240,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.65531,\n      \"hum\": 70.90488,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -53\n    },\n    \"105920\": {\n      \"ts\": 1610333966,\n      \"pres\": 100932,\n      \"gas\": 42314,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.70531,\n      \"hum\": 70.62334,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105950\": {\n      \"ts\": 1610333996,\n      \"pres\": 100930,\n      \"gas\": 43852,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.76531,\n      \"hum\": 70.57137,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110010\": {\n      \"ts\": 1610334011,\n      \"pres\": 100930,\n      \"gas\": 44312,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.73531,\n      \"hum\": 70.73621,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110040\": {\n      \"ts\": 1610334041,\n      \"pres\": 100930,\n      \"gas\": 45753,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.72531,\n      \"hum\": 70.84829,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -53\n    },\n    \"110050\": {\n      \"ts\": 1610334056,\n      \"pres\": 100932,\n      \"gas\": 45952,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.76531,\n      \"hum\": 71.37186,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -50\n    },\n    \"110120\": {\n      \"ts\": 1610334086,\n      \"pres\": 100932,\n      \"gas\": 47264,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.89531,\n      \"hum\": 70.80486,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110140\": {\n      \"ts\": 1610334101,\n      \"pres\": 100934,\n      \"gas\": 47826,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.81531,\n      \"hum\": 71.22725,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -50\n    },\n    \"110210\": {\n      \"ts\": 1610334131,\n      \"pres\": 100932,\n      \"gas\": 49107,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.81531,\n      \"hum\": 71.07291,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110220\": {\n      \"ts\": 1610334146,\n      \"pres\": 100938,\n      \"gas\": 49597,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.79531,\n      \"hum\": 71.1632,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -49\n    },\n    \"110250\": {\n      \"ts\": 1610334176,\n      \"pres\": 100932,\n      \"gas\": 50853,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.86531,\n      \"hum\": 70.95175,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -53\n    },\n    \"110310\": {\n      \"ts\": 1610334191,\n      \"pres\": 100936,\n      \"gas\": 51473,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.87531,\n      \"hum\": 70.83067,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -49\n    },\n    \"110340\": {\n      \"ts\": 1610334221,\n      \"pres\": 100932,\n      \"gas\": 52465,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.93531,\n      \"hum\": 71.14172,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110350\": {\n      \"ts\": 1610334236,\n      \"pres\": 100936,\n      \"gas\": 52596,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.03531,\n      \"hum\": 71.16187,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -50\n    },\n    \"110420\": {\n      \"ts\": 1610334266,\n      \"pres\": 100934,\n      \"gas\": 53872,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.16531,\n      \"hum\": 70.57468,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -53\n    },\n    \"110440\": {\n      \"ts\": 1610334281,\n      \"pres\": 100934,\n      \"gas\": 54253,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.14531,\n      \"hum\": 70.93856,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"110510\": {\n      \"ts\": 1610334311,\n      \"pres\": 100936,\n      \"gas\": 55284,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.23531,\n      \"hum\": 70.43224,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110520\": {\n      \"ts\": 1610334326,\n      \"pres\": 100934,\n      \"gas\": 55759,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.27531,\n      \"hum\": 70.42137,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -47\n    },\n    \"110550\": {\n      \"ts\": 1610334356,\n      \"pres\": 100932,\n      \"gas\": 56355,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.33531,\n      \"hum\": 70.26881,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -48\n    },\n    \"110610\": {\n      \"ts\": 1610334371,\n      \"pres\": 100934,\n      \"gas\": 57041,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.36531,\n      \"hum\": 70.10226,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -48\n    },\n    \"110640\": {\n      \"ts\": 1610334401,\n      \"pres\": 100932,\n      \"gas\": 58062,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.30531,\n      \"hum\": 70.42693,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -46\n    },\n    \"110650\": {\n      \"ts\": 1610334416,\n      \"pres\": 100934,\n      \"gas\": 58262,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.29531,\n      \"hum\": 71.12537,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -47\n    },\n    \"110720\": {\n      \"ts\": 1610334446,\n      \"pres\": 100934,\n      \"gas\": 58667,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.30531,\n      \"hum\": 71.30618,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -48\n    },\n    \"155710\": {\n      \"ts\": 1610351836,\n      \"pres\": 100675,\n      \"gas\": 20620,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 24.59531,\n      \"hum\": 66.49316,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -50\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 760,
        "y": 1240,
        "wires": [
            [
                "3d111606.e2629a"
            ]
        ]
    },
    {
        "id": "7dcc9237.3c7a0c",
        "type": "switch",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "null"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 930,
        "y": 1280,
        "wires": [
            [
                "12e19537.94b05b"
            ]
        ]
    },
    {
        "id": "cd3679d7.27a348",
        "type": "debug",
        "z": "48df00a1.c6d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1240,
        "wires": []
    },
    {
        "id": "ea3718b5.b11f18",
        "type": "inject",
        "z": "48df00a1.c6d5a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 610,
        "y": 1240,
        "wires": [
            [
                "5b80943f.1aa29c"
            ]
        ]
    },
    {
        "id": "12b2ed1.d7c6e13",
        "type": "link out",
        "z": "48df00a1.c6d5a",
        "name": "",
        "links": [
            "b78c1825.1e3668"
        ],
        "x": 1035,
        "y": 1140,
        "wires": []
    },
    {
        "id": "4c7acf70.db3a3",
        "type": "link in",
        "z": "48df00a1.c6d5a",
        "name": "",
        "links": [
            "11a040d8.e538ff",
            "12e19537.94b05b"
        ],
        "x": 215,
        "y": 1400,
        "wires": [
            [
                "84612c.eecb1ed8"
            ]
        ]
    },
    {
        "id": "84612c.eecb1ed8",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "let contextName = msg.contextName\nlet deviceId = msg.deviceData.ID\nlet contextValue = global.get(contextName) || {}\n\ndelete contextValue[deviceId]\nglobal.set(contextName, contextValue)\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 1400,
        "wires": [
            []
        ]
    },
    {
        "id": "11a040d8.e538ff",
        "type": "link out",
        "z": "48df00a1.c6d5a",
        "name": "",
        "links": [
            "4c7acf70.db3a3"
        ],
        "x": 1035,
        "y": 1180,
        "wires": []
    },
    {
        "id": "12e19537.94b05b",
        "type": "link out",
        "z": "48df00a1.c6d5a",
        "name": "",
        "links": [
            "4c7acf70.db3a3"
        ],
        "x": 1035,
        "y": 1280,
        "wires": []
    },
    {
        "id": "f3395f11.e9d43",
        "type": "comment",
        "z": "48df00a1.c6d5a",
        "name": "Move sensor data from redis to couch",
        "info": "",
        "x": 350,
        "y": 1120,
        "wires": []
    },
    {
        "id": "4058cbc9.b42824",
        "type": "inject",
        "z": "48df00a1.c6d5a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 650,
        "y": 1000,
        "wires": [
            [
                "aff415aa.44cce8"
            ]
        ]
    },
    {
        "id": "aff415aa.44cce8",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "msg.topic = \"C06426B267AC-2021-06-15\"\nmsg.payload = {\n  \"ID\": \"004A86B5AA8C\",\n  \"uptime\": 0,\n  \"location\": \"GC0\",\n  \"count\": 44,\n  \"values\": {\n    \"105140\": {\n      \"ts\": 1610333501,\n      \"pres\": 100936,\n      \"gas\": 824,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.19,\n      \"hum\": 72.419,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105150\": {\n      \"ts\": 1610333516,\n      \"pres\": 100940,\n      \"gas\": 4073,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.31531,\n      \"hum\": 71.34791,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105220\": {\n      \"ts\": 1610333546,\n      \"pres\": 100940,\n      \"gas\": 8784,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.38531,\n      \"hum\": 71.16571,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105240\": {\n      \"ts\": 1610333561,\n      \"pres\": 100938,\n      \"gas\": 10870,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.42531,\n      \"hum\": 70.94375,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105310\": {\n      \"ts\": 1610333591,\n      \"pres\": 100938,\n      \"gas\": 14458,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.35531,\n      \"hum\": 71.18324,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105320\": {\n      \"ts\": 1610333606,\n      \"pres\": 100938,\n      \"gas\": 16164,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.37531,\n      \"hum\": 71.63186,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -50\n    },\n    \"105350\": {\n      \"ts\": 1610333636,\n      \"pres\": 100936,\n      \"gas\": 19281,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.42531,\n      \"hum\": 71.27545,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105410\": {\n      \"ts\": 1610333651,\n      \"pres\": 100938,\n      \"gas\": 20620,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.46531,\n      \"hum\": 71.1424,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105440\": {\n      \"ts\": 1610333681,\n      \"pres\": 100936,\n      \"gas\": 23516,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.44531,\n      \"hum\": 71.09451,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105450\": {\n      \"ts\": 1610333696,\n      \"pres\": 100934,\n      \"gas\": 24754,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.46531,\n      \"hum\": 71.00657,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105520\": {\n      \"ts\": 1610333726,\n      \"pres\": 100936,\n      \"gas\": 27245,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.53531,\n      \"hum\": 70.87684,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105540\": {\n      \"ts\": 1610333741,\n      \"pres\": 100934,\n      \"gas\": 28438,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.55531,\n      \"hum\": 70.73704,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105610\": {\n      \"ts\": 1610333771,\n      \"pres\": 100938,\n      \"gas\": 30535,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.51531,\n      \"hum\": 71.21396,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105620\": {\n      \"ts\": 1610333786,\n      \"pres\": 100938,\n      \"gas\": 31491,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 23.57531,\n      \"hum\": 70.86607,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105650\": {\n      \"ts\": 1610333816,\n      \"pres\": 100934,\n      \"gas\": 33730,\n      \"IAQ\": 2.480738,\n      \"iaqA\": 1,\n      \"temp\": 23.61531,\n      \"hum\": 70.68295,\n      \"eqco2\": 460.6517,\n      \"VOC\": 0.430913,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105710\": {\n      \"ts\": 1610333831,\n      \"pres\": 100936,\n      \"gas\": 34671,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.65531,\n      \"hum\": 70.55128,\n      \"eqco2\": 412.0282,\n      \"VOC\": 0.358581,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105740\": {\n      \"ts\": 1610333861,\n      \"pres\": 100936,\n      \"gas\": 36405,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.68531,\n      \"hum\": 70.63528,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105750\": {\n      \"ts\": 1610333876,\n      \"pres\": 100932,\n      \"gas\": 37571,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.61531,\n      \"hum\": 70.69201,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105820\": {\n      \"ts\": 1610333906,\n      \"pres\": 100934,\n      \"gas\": 39138,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.62531,\n      \"hum\": 70.8566,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105840\": {\n      \"ts\": 1610333921,\n      \"pres\": 100934,\n      \"gas\": 39952,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.62531,\n      \"hum\": 70.83862,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"105910\": {\n      \"ts\": 1610333951,\n      \"pres\": 100932,\n      \"gas\": 41240,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.65531,\n      \"hum\": 70.90488,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -53\n    },\n    \"105920\": {\n      \"ts\": 1610333966,\n      \"pres\": 100932,\n      \"gas\": 42314,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.70531,\n      \"hum\": 70.62334,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"105950\": {\n      \"ts\": 1610333996,\n      \"pres\": 100930,\n      \"gas\": 43852,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.76531,\n      \"hum\": 70.57137,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110010\": {\n      \"ts\": 1610334011,\n      \"pres\": 100930,\n      \"gas\": 44312,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.73531,\n      \"hum\": 70.73621,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110040\": {\n      \"ts\": 1610334041,\n      \"pres\": 100930,\n      \"gas\": 45753,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.72531,\n      \"hum\": 70.84829,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -53\n    },\n    \"110050\": {\n      \"ts\": 1610334056,\n      \"pres\": 100932,\n      \"gas\": 45952,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.76531,\n      \"hum\": 71.37186,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -50\n    },\n    \"110120\": {\n      \"ts\": 1610334086,\n      \"pres\": 100932,\n      \"gas\": 47264,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.89531,\n      \"hum\": 70.80486,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110140\": {\n      \"ts\": 1610334101,\n      \"pres\": 100934,\n      \"gas\": 47826,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.81531,\n      \"hum\": 71.22725,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -50\n    },\n    \"110210\": {\n      \"ts\": 1610334131,\n      \"pres\": 100932,\n      \"gas\": 49107,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.81531,\n      \"hum\": 71.07291,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110220\": {\n      \"ts\": 1610334146,\n      \"pres\": 100938,\n      \"gas\": 49597,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.79531,\n      \"hum\": 71.1632,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -49\n    },\n    \"110250\": {\n      \"ts\": 1610334176,\n      \"pres\": 100932,\n      \"gas\": 50853,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.86531,\n      \"hum\": 70.95175,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -53\n    },\n    \"110310\": {\n      \"ts\": 1610334191,\n      \"pres\": 100936,\n      \"gas\": 51473,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.87531,\n      \"hum\": 70.83067,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -49\n    },\n    \"110340\": {\n      \"ts\": 1610334221,\n      \"pres\": 100932,\n      \"gas\": 52465,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 23.93531,\n      \"hum\": 71.14172,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110350\": {\n      \"ts\": 1610334236,\n      \"pres\": 100936,\n      \"gas\": 52596,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.03531,\n      \"hum\": 71.16187,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -50\n    },\n    \"110420\": {\n      \"ts\": 1610334266,\n      \"pres\": 100934,\n      \"gas\": 53872,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.16531,\n      \"hum\": 70.57468,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -53\n    },\n    \"110440\": {\n      \"ts\": 1610334281,\n      \"pres\": 100934,\n      \"gas\": 54253,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.14531,\n      \"hum\": 70.93856,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -52\n    },\n    \"110510\": {\n      \"ts\": 1610334311,\n      \"pres\": 100936,\n      \"gas\": 55284,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.23531,\n      \"hum\": 70.43224,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -51\n    },\n    \"110520\": {\n      \"ts\": 1610334326,\n      \"pres\": 100934,\n      \"gas\": 55759,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.27531,\n      \"hum\": 70.42137,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -47\n    },\n    \"110550\": {\n      \"ts\": 1610334356,\n      \"pres\": 100932,\n      \"gas\": 56355,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.33531,\n      \"hum\": 70.26881,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -48\n    },\n    \"110610\": {\n      \"ts\": 1610334371,\n      \"pres\": 100934,\n      \"gas\": 57041,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.36531,\n      \"hum\": 70.10226,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -48\n    },\n    \"110640\": {\n      \"ts\": 1610334401,\n      \"pres\": 100932,\n      \"gas\": 58062,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.30531,\n      \"hum\": 70.42693,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -46\n    },\n    \"110650\": {\n      \"ts\": 1610334416,\n      \"pres\": 100934,\n      \"gas\": 58262,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.29531,\n      \"hum\": 71.12537,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -47\n    },\n    \"110720\": {\n      \"ts\": 1610334446,\n      \"pres\": 100934,\n      \"gas\": 58667,\n      \"IAQ\": 0,\n      \"iaqA\": 1,\n      \"temp\": 24.30531,\n      \"hum\": 71.30618,\n      \"eqco2\": 400,\n      \"VOC\": 0.342646,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -48\n    },\n    \"155710\": {\n      \"ts\": 1610351836,\n      \"pres\": 100675,\n      \"gas\": 20620,\n      \"IAQ\": 25,\n      \"iaqA\": 0,\n      \"temp\": 24.59531,\n      \"hum\": 66.49316,\n      \"eqco2\": 500,\n      \"VOC\": 0.5,\n      \"relay1\": \"off\",\n      \"relay2\": \"off\",\n      \"rssi\": -50\n    }\n  }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 800,
        "y": 1000,
        "wires": [
            [
                "21417c22.8816c4"
            ]
        ]
    },
    {
        "id": "10b8bcee.dccd93",
        "type": "debug",
        "z": "48df00a1.c6d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 750,
        "y": 1320,
        "wires": []
    },
    {
        "id": "7836a2e.cc7f25c",
        "type": "debug",
        "z": "48df00a1.c6d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 1120,
        "wires": []
    },
    {
        "id": "21417c22.8816c4",
        "type": "json",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 950,
        "y": 1000,
        "wires": [
            [
                "171ac5b7.2800ca"
            ]
        ]
    },
    {
        "id": "4b417796.1e3d08",
        "type": "json",
        "z": "48df00a1.c6d5a",
        "name": "",
        "property": "payload",
        "action": "obj",
        "pretty": false,
        "x": 790,
        "y": 1160,
        "wires": [
            [
                "5167ac19.0d0c04",
                "92af14eb.296518"
            ]
        ]
    },
    {
        "id": "a2620692.af90c8",
        "type": "inject",
        "z": "48df00a1.c6d5a",
        "name": "",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 490,
        "y": 1200,
        "wires": [
            [
                "a3f140a0.a90fc"
            ]
        ]
    },
    {
        "id": "a3f140a0.a90fc",
        "type": "function",
        "z": "48df00a1.c6d5a",
        "name": "",
        "func": "msg.payload = null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 640,
        "y": 1200,
        "wires": [
            [
                "4b417796.1e3d08"
            ]
        ]
    },
    {
        "id": "92af14eb.296518",
        "type": "debug",
        "z": "48df00a1.c6d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 1120,
        "wires": []
    },
    {
        "id": "b7f56b9b.958188",
        "type": "debug",
        "z": "48df00a1.c6d5a",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 950,
        "y": 1080,
        "wires": []
    },
    {
        "id": "7b09ed18.6e4904",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "let breedingNurserySetupRackId = msg.original.breedingNurserySetupRackId\nlet setupDateId = msg.original.setupDateId\n\nmsg.payload = {\n    selector: {\n        productionLine: \"breeding\",\n        workstationForm: \"nursery-setup\",\n        breedingNurserySetupRackId,\n        setupDateId,\n        processIncomplete: true\n    }\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1360,
        "y": 980,
        "wires": [
            [
                "8852057.02f14f8",
                "7a5ff04a.5fc14"
            ]
        ]
    },
    {
        "id": "8852057.02f14f8",
        "type": "cloudantplus in",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "search": "_query_",
        "design": "",
        "index": "",
        "x": 1530,
        "y": 980,
        "wires": [
            [
                "34b2bc1a.811e84",
                "5a6f3526.0d213c"
            ]
        ]
    },
    {
        "id": "a746f8df.3f3f78",
        "type": "function",
        "z": "3517e109.8c2a3e",
        "name": "",
        "func": "let setupData = msg.payload.docs[0]\nsetupData.nurseryTraysOutCount = msg.original.nurseryTraysOutCount\nsetupData.processIncomplete = false\nmsg.payload = setupData\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1840,
        "y": 980,
        "wires": [
            [
                "9172fdb.797fe",
                "d66cb11b.9bbe6"
            ]
        ]
    },
    {
        "id": "7a5ff04a.5fc14",
        "type": "debug",
        "z": "3517e109.8c2a3e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "original",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1530,
        "y": 940,
        "wires": []
    },
    {
        "id": "9172fdb.797fe",
        "type": "cloudantplus out",
        "z": "3517e109.8c2a3e",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "insectdata",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 2010,
        "y": 980,
        "wires": [
            []
        ]
    },
    {
        "id": "d66cb11b.9bbe6",
        "type": "debug",
        "z": "3517e109.8c2a3e",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 2010,
        "y": 940,
        "wires": []
    },
    {
        "id": "34b2bc1a.811e84",
        "type": "switch",
        "z": "3517e109.8c2a3e",
        "name": "",
        "property": "payload.docs.length",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "1",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1690,
        "y": 980,
        "wires": [
            [
                "a746f8df.3f3f78"
            ]
        ]
    },
    {
        "id": "a5b003d4.f2f81",
        "type": "change",
        "z": "5b95e5c7.2321dc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submittedData",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "asset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 420,
        "y": 60,
        "wires": [
            [
                "3601327.466c6ce"
            ]
        ]
    },
    {
        "id": "f39391db.f09f5",
        "type": "switch",
        "z": "5b95e5c7.2321dc",
        "name": "",
        "property": "payload.processIncomplete",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 250,
        "y": 80,
        "wires": [
            [
                "a5b003d4.f2f81"
            ],
            [
                "8df3d8c4.944a18"
            ]
        ]
    },
    {
        "id": "3601327.466c6ce",
        "type": "cloudantplus in",
        "z": "5b95e5c7.2321dc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_id_",
        "design": "incomplete-form",
        "index": "nursery-setup-id",
        "x": 610,
        "y": 60,
        "wires": [
            [
                "7cdf1a0f.4ad3a4"
            ]
        ]
    },
    {
        "id": "7cdf1a0f.4ad3a4",
        "type": "change",
        "z": "5b95e5c7.2321dc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "farmAsset",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 810,
        "y": 60,
        "wires": [
            [
                "674c5b35.3785c4"
            ]
        ]
    },
    {
        "id": "674c5b35.3785c4",
        "type": "function",
        "z": "5b95e5c7.2321dc",
        "name": "",
        "func": "let submittedData = msg.submittedData\nlet rackId = submittedData.breedingNurserySetupRackId\nlet setupDateId = submittedData.setupDateId\nlet trayCount = +submittedData.nurseryTraysCount\n\nlet farmAsset = msg.farmAsset\nlet rackOccupied = +farmAsset.assets[rackId].occupied\nlet trayOccupied = +farmAsset.assets[rackId].setupDateIds[setupDateId]\nlet runningRackOccupied = rackOccupied - trayOccupied\n\nfarmAsset.assets[rackId].occupied = runningRackOccupied\nfarmAsset.assets[rackId].occupied = runningRackOccupied + trayCount\nfarmAsset.assets[rackId].setupDateIds[setupDateId] = trayCount\n\n// Update status as it used for checks on creation\nif (farmAsset.assets[rackId].occupied == farmAsset.assets[rackId].capacity) {\n    farmAsset.assets[rackId].status = 'OCCUPIED'\n} else if (farmAsset.assets[rackId].occupied > 0) {\n    farmAsset.assets[rackId].status = 'PARTIALLY_OCCUPIED'\n} else {\n    farmAsset.assets[rackId].status = 'AVAILABLE'\n}\n\nmsg.payload = farmAsset\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 60,
        "wires": [
            [
                "5c78e35.3e8591c"
            ]
        ]
    },
    {
        "id": "5c78e35.3e8591c",
        "type": "cloudantplus out",
        "z": "5b95e5c7.2321dc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1170,
        "y": 60,
        "wires": [
            [
                "2084a6cf.606efa"
            ]
        ]
    },
    {
        "id": "2084a6cf.606efa",
        "type": "change",
        "z": "5b95e5c7.2321dc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "submittedData",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1360,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "8df3d8c4.944a18",
        "type": "function",
        "z": "5b95e5c7.2321dc",
        "name": "",
        "func": "msg.payload = {\n    message: `Update restricted: Process was completed.`\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 100,
        "wires": [
            [
                "c3a614be.12bdf8"
            ]
        ]
    },
    {
        "id": "c3a614be.12bdf8",
        "type": "http response",
        "z": "5b95e5c7.2321dc",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 560,
        "y": 100,
        "wires": []
    },
    {
        "id": "8d0c4e6b.8d87c",
        "type": "change",
        "z": "d4b8ee96.b716",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "submittedData",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            },
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "asset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 400,
        "y": 60,
        "wires": [
            [
                "ca6ec32e.3ff43"
            ]
        ]
    },
    {
        "id": "d06792bf.93d0f",
        "type": "switch",
        "z": "d4b8ee96.b716",
        "name": "",
        "property": "payload.processIncomplete",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 230,
        "y": 80,
        "wires": [
            [
                "8d0c4e6b.8d87c"
            ],
            [
                "f68802b.b4509"
            ]
        ]
    },
    {
        "id": "ca6ec32e.3ff43",
        "type": "cloudantplus in",
        "z": "d4b8ee96.b716",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_id_",
        "design": "incomplete-form",
        "index": "nursery-setup-id",
        "x": 590,
        "y": 60,
        "wires": [
            [
                "7ecabd78.1a6f24"
            ]
        ]
    },
    {
        "id": "f68802b.b4509",
        "type": "function",
        "z": "d4b8ee96.b716",
        "name": "",
        "func": "msg.payload = {\n    message: `Update restricted: Process was completed.`\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 380,
        "y": 100,
        "wires": [
            [
                "2d7336ba.74f31a"
            ]
        ]
    },
    {
        "id": "7ecabd78.1a6f24",
        "type": "change",
        "z": "d4b8ee96.b716",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "farmAsset",
                "pt": "msg",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 790,
        "y": 60,
        "wires": [
            [
                "eec26d7b.08dc5"
            ]
        ]
    },
    {
        "id": "2d7336ba.74f31a",
        "type": "http response",
        "z": "d4b8ee96.b716",
        "name": "",
        "statusCode": "400",
        "headers": {},
        "x": 540,
        "y": 100,
        "wires": []
    },
    {
        "id": "eec26d7b.08dc5",
        "type": "function",
        "z": "d4b8ee96.b716",
        "name": "",
        "func": "let submittedData = msg.submittedData\nlet rackId = submittedData.breedingNurserySetupRackId\nlet setupDateId = submittedData.setupDateId\nlet trayCount = +submittedData.nurseryTraysCount\n\nlet farmAsset = msg.farmAsset\nlet rackOccupied = +farmAsset.assets[rackId].occupied\nlet trayOccupied = +farmAsset.assets[rackId].setupDateIds[setupDateId]\nlet runningRackOccupied = rackOccupied - trayOccupied\nlet runningTrayOccupied = trayOccupied - trayCount\n\nfarmAsset.assets[rackId].occupied = runningRackOccupied\nfarmAsset.assets[rackId].setupDateIds[setupDateId] = runningTrayOccupied\n\n// Update status as it used for checks on creation\nif (farmAsset.assets[rackId].occupied == farmAsset.assets[rackId].capacity) {\n    farmAsset.assets[rackId].status = 'OCCUPIED'\n} else if (farmAsset.assets[rackId].occupied > 0) {\n    farmAsset.assets[rackId].status = 'PARTIALLY_OCCUPIED'\n} else {\n    farmAsset.assets[rackId].status = 'AVAILABLE'\n}\n\n// Count is 0 then just remove it\nif (!farmAsset.assets[rackId].setupDateIds[setupDateId]) {\n    delete farmAsset.assets[rackId].setupDateIds[setupDateId]\n}\n\nmsg.payload = farmAsset\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 60,
        "wires": [
            [
                "2fa8c3d9.044b2c"
            ]
        ]
    },
    {
        "id": "2fa8c3d9.044b2c",
        "type": "cloudantplus out",
        "z": "d4b8ee96.b716",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "payonly": true,
        "operation": "insert",
        "x": 1150,
        "y": 60,
        "wires": [
            [
                "366267ee.daf178"
            ]
        ]
    },
    {
        "id": "366267ee.daf178",
        "type": "change",
        "z": "d4b8ee96.b716",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "submittedData",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1340,
        "y": 60,
        "wires": [
            []
        ]
    },
    {
        "id": "4bc15844.9fcce8",
        "type": "change",
        "z": "1ee45479.6b35fc",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "asset",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 560,
        "y": 720,
        "wires": [
            [
                "4c3acb94.0b9ac4"
            ]
        ]
    },
    {
        "id": "4c3acb94.0b9ac4",
        "type": "cloudantplus in",
        "z": "1ee45479.6b35fc",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "farmconfig",
        "service": "_ext_",
        "search": "_id_",
        "design": "assets",
        "index": "unoccupied-by-sublocation",
        "x": 750,
        "y": 720,
        "wires": [
            [
                "c0c81896.44e568"
            ]
        ]
    },
    {
        "id": "c0c81896.44e568",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "",
        "func": "let farmAsset = msg.payload\nlet rackId = msg.req.body.formValue.breedingNurserySetupRackId\n\nif (rackId) msg.payload = {\n    value: rackId,\n    label: farmAsset.assets[rackId].label\n}\nmsg.topic = 'selectedRackOption'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 920,
        "y": 720,
        "wires": [
            [
                "c08a3eb5.f2146"
            ]
        ]
    },
    {
        "id": "c08a3eb5.f2146",
        "type": "join",
        "z": "1ee45479.6b35fc",
        "name": "",
        "mode": "custom",
        "build": "object",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "2",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "num",
        "reduceFixup": "",
        "x": 1070,
        "y": 740,
        "wires": [
            [
                "6313c23e.638e5c"
            ]
        ]
    },
    {
        "id": "6313c23e.638e5c",
        "type": "function",
        "z": "1ee45479.6b35fc",
        "name": "map",
        "func": "let updateOps = msg.req.body.formValue._id ? true : false\nlet selectedRackOption = msg.payload.selectedRackOption\nlet unoccupiedRackOptions = msg.payload.unoccupiedRackOptions\nlet combinedOptions = unoccupiedRackOptions || []\n\n// Only combine them when it is on edit operation\nif (updateOps) combinedOptions.push(selectedRackOption)\n\nmsg.payload = combinedOptions\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1210,
        "y": 740,
        "wires": [
            [
                "2fd2e729.3b8cb8"
            ]
        ]
    },
    {
        "id": "2770a782.496898",
        "type": "switch",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "property": "isDatePast30Days",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "else"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 830,
        "y": 180,
        "wires": [
            [
                "db6cc6c8.36d918"
            ],
            [
                "16798f23.4d2761"
            ]
        ]
    },
    {
        "id": "8933d8d0.b584d8",
        "type": "function",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "func": "let dateMilliseconds = Date.parse(msg.payload) // YYYY-MM-DD\nlet pastDate = new Date()\npastDate.setDate(pastDate.getDate() - 30)\npastDate.setHours(0, 0, 0, 0)\nlet pastDateMilliseconds = pastDate.getTime()\n\nif (dateMilliseconds < pastDateMilliseconds) {\n    msg.isDatePast30Days = true\n}\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 680,
        "y": 180,
        "wires": [
            [
                "2770a782.496898",
                "a60296f9.3adda8"
            ]
        ]
    },
    {
        "id": "16798f23.4d2761",
        "type": "link out",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "links": [
            "f12accec.1d557"
        ],
        "x": 935,
        "y": 200,
        "wires": []
    },
    {
        "id": "f12accec.1d557",
        "type": "link in",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "links": [
            "16798f23.4d2761"
        ],
        "x": 135,
        "y": 420,
        "wires": [
            [
                "4bd40c23.c28a84",
                "f7b3d04b.52a2"
            ]
        ]
    },
    {
        "id": "5e136835.280708",
        "type": "function",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "func": "let date = msg.payload\nlet deviceId = msg.filters.deviceId + '-'\nlet deviceIdDate = deviceId + date\n\nmsg.date = msg.payload\nmsg.payload = deviceIdDate\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 260,
        "y": 300,
        "wires": [
            [
                "51850b78.a12614",
                "1b38033b.e3473d"
            ]
        ]
    },
    {
        "id": "ba00584c.2f6318",
        "type": "link in",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "links": [
            "db6cc6c8.36d918"
        ],
        "x": 135,
        "y": 300,
        "wires": [
            [
                "5e136835.280708",
                "3b28bed2.e09422"
            ]
        ]
    },
    {
        "id": "db6cc6c8.36d918",
        "type": "link out",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "links": [
            "ba00584c.2f6318"
        ],
        "x": 935,
        "y": 160,
        "wires": []
    },
    {
        "id": "3b28bed2.e09422",
        "type": "debug",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 260,
        "wires": []
    },
    {
        "id": "f7b3d04b.52a2",
        "type": "debug",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 250,
        "y": 380,
        "wires": []
    },
    {
        "id": "2dc15ba1.7bce24",
        "type": "debug",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 140,
        "wires": []
    },
    {
        "id": "a60296f9.3adda8",
        "type": "debug",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 830,
        "y": 140,
        "wires": []
    },
    {
        "id": "7bd906fe.472f98",
        "type": "inject",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "2021-05-18",
        "payloadType": "str",
        "x": 510,
        "y": 140,
        "wires": [
            [
                "8933d8d0.b584d8"
            ]
        ]
    },
    {
        "id": "c412c6bc.8f2488",
        "type": "link in",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "links": [
            "18cce0a6.31ff3f",
            "f9353f1c.87d62"
        ],
        "x": 135,
        "y": 540,
        "wires": [
            [
                "d56d2a50.fe67c8"
            ]
        ]
    },
    {
        "id": "18cce0a6.31ff3f",
        "type": "link out",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "links": [
            "c412c6bc.8f2488"
        ],
        "x": 755,
        "y": 300,
        "wires": []
    },
    {
        "id": "f9353f1c.87d62",
        "type": "link out",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "links": [
            "c412c6bc.8f2488"
        ],
        "x": 875,
        "y": 420,
        "wires": []
    },
    {
        "id": "1b38033b.e3473d",
        "type": "debug",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 260,
        "wires": []
    },
    {
        "id": "51850b78.a12614",
        "type": "cloudantplus in",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "sensordata",
        "service": "_ext_",
        "search": "_id_",
        "design": "",
        "index": "",
        "x": 430,
        "y": 300,
        "wires": [
            [
                "5b212fbb.791bf",
                "66d0ce2a.c2e1c"
            ]
        ]
    },
    {
        "id": "5b212fbb.791bf",
        "type": "debug",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 260,
        "wires": []
    },
    {
        "id": "1350b480.0cae5c",
        "type": "debug",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 570,
        "y": 380,
        "wires": []
    },
    {
        "id": "425b89be.69bad8",
        "type": "catch",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "scope": [
            "51850b78.a12614"
        ],
        "uncaught": false,
        "x": 170,
        "y": 660,
        "wires": [
            [
                "1007e66c.bc0c6a"
            ]
        ]
    },
    {
        "id": "66d0ce2a.c2e1c",
        "type": "change",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload.values",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 620,
        "y": 300,
        "wires": [
            [
                "18cce0a6.31ff3f"
            ]
        ]
    },
    {
        "id": "1007e66c.bc0c6a",
        "type": "debug",
        "z": "f86fd9fe.b86f38",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 310,
        "y": 660,
        "wires": []
    },
    {
        "id": "c9b60d3d.389d2",
        "type": "catch",
        "z": "7e86a41c.5a82dc",
        "name": "",
        "scope": [
            "194e701c.4f67d"
        ],
        "uncaught": false,
        "x": 270,
        "y": 320,
        "wires": [
            [
                "5be3c840.604818"
            ]
        ]
    },
    {
        "id": "5be3c840.604818",
        "type": "debug",
        "z": "7e86a41c.5a82dc",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 320,
        "wires": []
    },
    {
        "id": "937222cc.39a86",
        "type": "cloudantplus in",
        "z": "40bdb65b.68cd78",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "sensordata",
        "service": "_ext_",
        "search": "_view_",
        "design": "sortDate",
        "index": "by-date",
        "x": 490,
        "y": 860,
        "wires": [
            [
                "fc4ec8dd.beace8"
            ]
        ]
    },
    {
        "id": "e55226a1.b83268",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "",
        "func": "let filter = msg.filter || {\n    skip: 0,\n    limit: 1,\n    include_docs: true\n}\n\nmsg.payload = filter\nmsg.filter = filter\nmsg.filename = 'test.csv'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 860,
        "wires": [
            [
                "937222cc.39a86"
            ]
        ]
    },
    {
        "id": "25290f69.104a",
        "type": "inject",
        "z": "40bdb65b.68cd78",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 860,
        "wires": [
            [
                "e55226a1.b83268"
            ]
        ]
    },
    {
        "id": "fc4ec8dd.beace8",
        "type": "while-loop",
        "z": "40bdb65b.68cd78",
        "name": "",
        "condi": "msg.payload.length !== 0",
        "limit": true,
        "limitTime": "356",
        "time": "wlfc4ec8ddbeace8",
        "timeType": "msg",
        "x": 710,
        "y": 860,
        "wires": [
            [
                "e0f2d82b.7ea6f8"
            ],
            [
                "361ea711.a25798"
            ]
        ]
    },
    {
        "id": "e6e77f1f.f8bde",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "",
        "func": "msg.filter.skip++\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 900,
        "wires": [
            [
                "e55226a1.b83268"
            ]
        ]
    },
    {
        "id": "e0f2d82b.7ea6f8",
        "type": "debug",
        "z": "40bdb65b.68cd78",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 840,
        "wires": []
    },
    {
        "id": "361ea711.a25798",
        "type": "change",
        "z": "40bdb65b.68cd78",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "payload[0].values",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 940,
        "y": 880,
        "wires": [
            [
                "485e8889.12ba98"
            ]
        ]
    },
    {
        "id": "e882b896.54a638",
        "type": "file",
        "z": "40bdb65b.68cd78",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1450,
        "y": 880,
        "wires": [
            []
        ]
    },
    {
        "id": "29468f24.b7ea6",
        "type": "fastcsv",
        "z": "40bdb65b.68cd78",
        "name": "fastcsv",
        "headers": true,
        "headerstr": "",
        "ignoreEmpty": true,
        "discardUnmappedColumns": true,
        "strictColumnHandling": false,
        "delimiter": ",",
        "quote": "\"",
        "escape": "\"",
        "comment": "#",
        "ltrim": false,
        "rtrim": false,
        "rowDelimiter": "\\n",
        "includeEndRowDelimiter": false,
        "quoteHeaders": false,
        "quoteColumns": false,
        "x": 1300,
        "y": 880,
        "wires": [
            [
                "e882b896.54a638"
            ]
        ]
    },
    {
        "id": "3da4c052.f2254",
        "type": "split",
        "z": "40bdb65b.68cd78",
        "name": "",
        "splt": "\\n",
        "spltType": "str",
        "arraySplt": 1,
        "arraySpltType": "len",
        "stream": false,
        "addname": "time",
        "x": 1090,
        "y": 1060,
        "wires": [
            [
                "14733c0d.ccaf04",
                "64ac18b6.87a4e8"
            ]
        ]
    },
    {
        "id": "be88ade8.a9acc",
        "type": "inject",
        "z": "40bdb65b.68cd78",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 780,
        "y": 1060,
        "wires": [
            [
                "86e3a58b.8efa78"
            ]
        ]
    },
    {
        "id": "86e3a58b.8efa78",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "",
        "func": "msg.payload = {\n    '000000': {'temp': 12},\n    '000010': {'temp': 14}\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 1060,
        "wires": [
            [
                "3da4c052.f2254"
            ]
        ]
    },
    {
        "id": "14733c0d.ccaf04",
        "type": "debug",
        "z": "40bdb65b.68cd78",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 1060,
        "wires": []
    },
    {
        "id": "4371141f.f39aac",
        "type": "join",
        "z": "40bdb65b.68cd78",
        "name": "",
        "mode": "custom",
        "build": "array",
        "property": "payload",
        "propertyType": "msg",
        "key": "topic",
        "joiner": "\\n",
        "joinerType": "str",
        "accumulate": false,
        "timeout": "",
        "count": "",
        "reduceRight": false,
        "reduceExp": "",
        "reduceInit": "",
        "reduceInitType": "",
        "reduceFixup": "",
        "x": 1090,
        "y": 1140,
        "wires": [
            [
                "786d7156.08324"
            ]
        ]
    },
    {
        "id": "786d7156.08324",
        "type": "debug",
        "z": "40bdb65b.68cd78",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1250,
        "y": 1140,
        "wires": []
    },
    {
        "id": "64ac18b6.87a4e8",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "",
        "func": "let payload = {}\npayload.time = msg.time\nfor (const param in msg.payload) {\n    const value = msg.payload[param]\n    payload[param] = value\n}\nmsg.payload = payload\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1100,
        "y": 1100,
        "wires": [
            [
                "4371141f.f39aac"
            ]
        ]
    },
    {
        "id": "1ab6f69c.943d19",
        "type": "csv",
        "z": "40bdb65b.68cd78",
        "name": "",
        "sep": ",",
        "hdrin": "",
        "hdrout": "none",
        "multi": "one",
        "ret": "\\n",
        "temp": "",
        "skip": "0",
        "strings": true,
        "include_empty_strings": "",
        "include_null_values": "",
        "x": 770,
        "y": 1160,
        "wires": [
            [
                "adb1b6af.bae928",
                "bae160dd.af07e"
            ]
        ]
    },
    {
        "id": "83e1ce16.43634",
        "type": "inject",
        "z": "40bdb65b.68cd78",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 460,
        "y": 1160,
        "wires": [
            [
                "79e448d3.e8bc88"
            ]
        ]
    },
    {
        "id": "79e448d3.e8bc88",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "",
        "func": "msg.payload = {\n    '000000': 12,\n    '000010': 14\n}\nmsg.filename = 'test.csv'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 620,
        "y": 1160,
        "wires": [
            [
                "1ab6f69c.943d19"
            ]
        ]
    },
    {
        "id": "adb1b6af.bae928",
        "type": "debug",
        "z": "40bdb65b.68cd78",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 1200,
        "wires": []
    },
    {
        "id": "bae160dd.af07e",
        "type": "file",
        "z": "40bdb65b.68cd78",
        "name": "",
        "filename": "",
        "appendNewline": true,
        "createDir": true,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 910,
        "y": 1160,
        "wires": [
            []
        ]
    },
    {
        "id": "54549bbe.e3cbe4",
        "type": "inject",
        "z": "40bdb65b.68cd78",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 900,
        "y": 960,
        "wires": [
            [
                "96e49fa9.7c126"
            ]
        ]
    },
    {
        "id": "96e49fa9.7c126",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "",
        "func": "msg.payload = {\n    '000000': {'temp': 12},\n    '000010': {'temp': 14}\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1060,
        "y": 960,
        "wires": [
            [
                "485e8889.12ba98"
            ]
        ]
    },
    {
        "id": "485e8889.12ba98",
        "type": "function",
        "z": "40bdb65b.68cd78",
        "name": "",
        "func": "let arr = []\nfor (const time in msg.payload) {\n    const params = msg.payload[time]\n    let obj = {}\n    obj['time'] = time\n    for (const param in params) {\n        const value = params[param]\n        obj[param] = value\n    }\n    arr.push(obj)\n}\nmsg.payload = arr\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 960,
        "wires": [
            [
                "29468f24.b7ea6",
                "e6e77f1f.f8bde"
            ]
        ]
    },
    {
        "id": "afe0b2f.3b6c45",
        "type": "comment",
        "z": "40bdb65b.68cd78",
        "name": "Garbage for testing",
        "info": "",
        "x": 180,
        "y": 820,
        "wires": []
    },
    {
        "id": "bde08fb.910a27",
        "type": "debug",
        "z": "1ee45479.6b35fc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 540,
        "wires": []
    },
    {
        "id": "dc023be5.ff6358",
        "type": "debug",
        "z": "1ee45479.6b35fc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 660,
        "wires": []
    },
    {
        "id": "347da39b.68674c",
        "type": "debug",
        "z": "1ee45479.6b35fc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 540,
        "wires": []
    },
    {
        "id": "1ae8cbe6.136684",
        "type": "debug",
        "z": "1ee45479.6b35fc",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 850,
        "y": 660,
        "wires": []
    },
    {
        "id": "d5cfe3ff.4645a",
        "type": "template",
        "z": "dc8c4370.78e2",
        "name": "users-view",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n  \"_id\": \"_design/users\",\n  \"_rev\": \"15-7092278bf54eeec6af60d4614d2b804b\",\n  \"views\": {\n    \"users\": {\n      \"map\": \"function (doc) {\\n  if (doc.doc_type == \\\"users\\\") emit(doc.username, doc);\\n}\"\n    },\n    \"users-sortby-name\": {\n      \"map\": \"function (doc) {\\n  if (doc.doc_type == \\\"users\\\") emit(doc.name, doc);\\n}\"\n    }\n  },\n  \"language\": \"javascript\"\n}",
        "output": "json",
        "x": 410,
        "y": 1800,
        "wires": [
            [
                "e00eb2de.90e28"
            ]
        ]
    },
    {
        "id": "72e3d22a.515dfc",
        "type": "inject",
        "z": "d021c7f8.c9d868",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 160,
        "y": 80,
        "wires": [
            [
                "bea8a50f.bc1708"
            ]
        ]
    },
    {
        "id": "31c9c5d1.9e485a",
        "type": "cloudantplus in",
        "z": "d021c7f8.c9d868",
        "name": "",
        "cloudant": "89ef28e6.4ac598",
        "database": "sensordata",
        "service": "_ext_",
        "search": "_view_",
        "design": "sortDate",
        "index": "by-date",
        "x": 830,
        "y": 100,
        "wires": [
            [
                "bb274d5e.2ad7a",
                "788ea2c9.9e62bc"
            ]
        ]
    },
    {
        "id": "bea8a50f.bc1708",
        "type": "function",
        "z": "d021c7f8.c9d868",
        "name": "",
        "func": "let dates = []\n\n// Generate days based on filters\nlet startDate = new Date()\nstartDate.setDate(startDate.getDate() - 30)\nlet endDate = new Date()\nendDate.setDate(endDate.getDate() - 1)\n\n// For support different timezone\n// startDate.setDate(startDate.getDate() - 1)\n// endDate.setDate(endDate.getDate() + 1)\n\n// Generate days\nfor (let d = startDate; d <= endDate; d.setDate(d.getDate() + 1)) {\n    let seconds = d.getTime() / 1000\n    dates.push(transformDate(seconds))\n}\n\nmsg.dates = dates\nreturn msg;\n\nfunction transformTime(unix) {\n    let d = new Date(unix * 1000)\n    let hours = d.getUTCHours()\n    let minutes = d.getUTCMinutes()\n    let seconds = d.getUTCSeconds()\n    \n    // Round down\n    if (seconds <= 10) seconds = 0\n    if (seconds <= 20) seconds = 10\n    if (seconds <= 30) seconds = 20\n    if (seconds <= 40) seconds = 30\n    if (seconds <= 50) seconds = 40\n    else seconds = 50\n    \n    let transformed = ''\n    transformed += formatDateDigits(hours) + ':'\n    transformed += formatDateDigits(minutes) + ':'\n    transformed += formatDateDigits(seconds)\n    \n    return transformed\n}\n\nfunction transformDate(unix) {\n    let d = new Date(unix * 1000)\n    let year = d.getUTCFullYear()\n    let month = d.getUTCMonth() + 1\n    let date = d.getUTCDate()\n    \n    let transformed = ''\n    transformed += formatDateDigits(year) + '-'\n    transformed += formatDateDigits(month) + '-'\n    transformed += formatDateDigits(date)\n    \n    return transformed\n}\n\nfunction formatDateDigits(digits) {\n    let str = digits.toString()\n    if (str.length > 1) return str\n    else return '0' + str\n}",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 80,
        "wires": [
            [
                "895aaed3.6cd68"
            ]
        ]
    },
    {
        "id": "895aaed3.6cd68",
        "type": "array-loop",
        "z": "d021c7f8.c9d868",
        "name": "",
        "key": "al895aaed36cd68",
        "keyType": "msg",
        "reset": false,
        "resetValue": "value-null",
        "array": "dates",
        "arrayType": "msg",
        "x": 490,
        "y": 80,
        "wires": [
            [
                "4b44acbe.ceec24"
            ],
            [
                "ea82a015.29f41"
            ]
        ]
    },
    {
        "id": "ea82a015.29f41",
        "type": "function",
        "z": "d021c7f8.c9d868",
        "name": "",
        "func": "let filters = msg.filters || {\n    // key: msg.payload,\n    skip: 0,\n    limit: 1,\n    include_docs: true\n}\n\nmsg.payload = filters\nmsg.filters = filters\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 100,
        "wires": [
            [
                "31c9c5d1.9e485a"
            ]
        ]
    },
    {
        "id": "bb274d5e.2ad7a",
        "type": "while-loop",
        "z": "d021c7f8.c9d868",
        "name": "",
        "condi": "msg.payload != 0",
        "limit": true,
        "limitTime": "200",
        "time": "wlbb274d5e2ad7a",
        "timeType": "msg",
        "x": 1030,
        "y": 120,
        "wires": [
            [
                "7bc1dba4.e1b4d4"
            ],
            [
                "a79fcea7.36a06",
                "a1883173.9589f"
            ]
        ]
    },
    {
        "id": "a79fcea7.36a06",
        "type": "function",
        "z": "d021c7f8.c9d868",
        "name": "",
        "func": "let doc = msg.payload[0]\n\ndelete doc._rev\n\nmsg.topic = doc._id\nmsg.payload = JSON.stringify(doc)\nmsg.filters.skip++\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1220,
        "y": 140,
        "wires": [
            [
                "1240cfce.5285c",
                "584f856d.444ffc"
            ]
        ]
    },
    {
        "id": "5313028e.ec055c",
        "type": "link in",
        "z": "d021c7f8.c9d868",
        "name": "",
        "links": [
            "4be8efdb.0cfdb"
        ],
        "x": 535,
        "y": 120,
        "wires": [
            [
                "ea82a015.29f41"
            ]
        ]
    },
    {
        "id": "4be8efdb.0cfdb",
        "type": "link out",
        "z": "d021c7f8.c9d868",
        "name": "",
        "links": [
            "5313028e.ec055c"
        ],
        "x": 1495,
        "y": 140,
        "wires": []
    },
    {
        "id": "4b44acbe.ceec24",
        "type": "debug",
        "z": "d021c7f8.c9d868",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 650,
        "y": 60,
        "wires": []
    },
    {
        "id": "7bc1dba4.e1b4d4",
        "type": "link out",
        "z": "d021c7f8.c9d868",
        "name": "",
        "links": [
            "9fd54e0a.5c83d"
        ],
        "x": 1175,
        "y": 100,
        "wires": []
    },
    {
        "id": "9fd54e0a.5c83d",
        "type": "link in",
        "z": "d021c7f8.c9d868",
        "name": "",
        "links": [
            "7bc1dba4.e1b4d4"
        ],
        "x": 355,
        "y": 120,
        "wires": [
            [
                "895aaed3.6cd68"
            ]
        ]
    },
    {
        "id": "788ea2c9.9e62bc",
        "type": "debug",
        "z": "d021c7f8.c9d868",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 990,
        "y": 80,
        "wires": []
    },
    {
        "id": "a1883173.9589f",
        "type": "debug",
        "z": "d021c7f8.c9d868",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1210,
        "y": 180,
        "wires": []
    },
    {
        "id": "1240cfce.5285c",
        "type": "debug",
        "z": "d021c7f8.c9d868",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1370,
        "y": 100,
        "wires": []
    },
    {
        "id": "584f856d.444ffc",
        "type": "redis-command",
        "z": "d021c7f8.c9d868",
        "server": "c9356964.d4c6c8",
        "command": "SET",
        "name": "",
        "topic": "",
        "params": "[]",
        "paramsType": "json",
        "payloadType": "json",
        "block": false,
        "x": 1380,
        "y": 140,
        "wires": [
            [
                "4be8efdb.0cfdb"
            ]
        ]
    },
    {
        "id": "bf9476e8.f96688",
        "type": "comment",
        "z": "d021c7f8.c9d868",
        "name": "Rebuild 30 days (exclude today) into redis",
        "info": "",
        "x": 260,
        "y": 40,
        "wires": []
    }
]